export const loginServer: string = `Ly8gQGJ1bgp2YXIgdm49KHIpPT57cmV0dXJuIGltcG9ydC5tZXRhLnJlcXVpcmUocil9O3ZhciBibj1PYmplY3QuY3JlYXRlLHtkZWZpbmVQcm9wZXJ0eTpTMCxnZXRQcm90b3R5cGVPZjpwbixnZXRPd25Qcm9wZXJ0eU5hbWVzOmdufT1PYmplY3QsVm49T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxOcj0ocix0LGYpPT57Zj1yIT1udWxsP2JuKHBuKHIpKTp7fTtjb25zdCBlPXR8fCFyfHwhci5fX2VzTW9kdWxlP1MwKGYsImRlZmF1bHQiLHt2YWx1ZTpyLGVudW1lcmFibGU6ITB9KTpmO2ZvcihsZXQgViBvZiBnbihyKSlpZighVm4uY2FsbChlLFYpKVMwKGUsVix7Z2V0OigpPT5yW1ZdLGVudW1lcmFibGU6ITB9KTtyZXR1cm4gZX0sa3I9KHIsdCk9PigpPT4odHx8cigodD17ZXhwb3J0czp7fX0pLmV4cG9ydHMsdCksdC5leHBvcnRzKSx3cj1rcigocik9PntPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5UeXBlPXIuU3RhbmRhcmRUeXBlPXIuRXh0ZW5kZWRUeXBlQnVpbGRlcj1yLlN0YW5kYXJkVHlwZUJ1aWxkZXI9ci5UeXBlQnVpbGRlcj1yLlRlbXBsYXRlTGl0ZXJhbERzbFBhcnNlcj1yLlRlbXBsYXRlTGl0ZXJhbEdlbmVyYXRvcj1yLlRlbXBsYXRlTGl0ZXJhbEZpbml0ZT1yLlRlbXBsYXRlTGl0ZXJhbFBhcnNlcj1yLlRlbXBsYXRlTGl0ZXJhbFBhcnNlckVycm9yPXIuVGVtcGxhdGVMaXRlcmFsUmVzb2x2ZXI9ci5UZW1wbGF0ZUxpdGVyYWxQYXR0ZXJuPXIuVW5pb25SZXNvbHZlcj1yLktleUFycmF5UmVzb2x2ZXI9ci5LZXlSZXNvbHZlcj1yLk9iamVjdE1hcD1yLkludHJpbnNpYz1yLkluZGV4ZWRBY2Nlc3Nvcj1yLlR5cGVDbG9uZT1yLlR5cGVFeHRlbmRzPXIuVHlwZUV4dGVuZHNSZXN1bHQ9ci5FeHRlbmRzVW5kZWZpbmVkPXIuVHlwZUd1YXJkPXIuVHlwZUd1YXJkVW5rbm93blR5cGVFcnJvcj1yLlZhbHVlR3VhcmQ9ci5Gb3JtYXRSZWdpc3RyeT1yLlR5cGVSZWdpc3RyeT1yLlBhdHRlcm5TdHJpbmdFeGFjdD1yLlBhdHRlcm5OdW1iZXJFeGFjdD1yLlBhdHRlcm5Cb29sZWFuRXhhY3Q9ci5QYXR0ZXJuU3RyaW5nPXIuUGF0dGVybk51bWJlcj1yLlBhdHRlcm5Cb29sZWFuPXIuS2luZD1yLkhpbnQ9ci5PcHRpb25hbD1yLlJlYWRvbmx5PXZvaWQgMCxyLlJlYWRvbmx5PVN5bWJvbC5mb3IoIlR5cGVCb3guUmVhZG9ubHkiKSxyLk9wdGlvbmFsPVN5bWJvbC5mb3IoIlR5cGVCb3guT3B0aW9uYWwiKSxyLkhpbnQ9U3ltYm9sLmZvcigiVHlwZUJveC5IaW50Iiksci5LaW5kPVN5bWJvbC5mb3IoIlR5cGVCb3guS2luZCIpLHIuUGF0dGVybkJvb2xlYW49Iih0cnVlfGZhbHNlKSIsci5QYXR0ZXJuTnVtYmVyPSIoMHxbMS05XVswLTldKikiLHIuUGF0dGVyblN0cmluZz0iKC4qKSIsci5QYXR0ZXJuQm9vbGVhbkV4YWN0PWBeJHtyLlBhdHRlcm5Cb29sZWFufSRgLHIuUGF0dGVybk51bWJlckV4YWN0PWBeJHtyLlBhdHRlcm5OdW1iZXJ9JGAsci5QYXR0ZXJuU3RyaW5nRXhhY3Q9YF4ke3IuUGF0dGVyblN0cmluZ30kYDt2YXIgdDsoZnVuY3Rpb24odil7Y29uc3Qgaz1uZXcgTWFwO2Z1bmN0aW9uIHkoKXtyZXR1cm4gbmV3IE1hcChrKX12LkVudHJpZXM9eTtmdW5jdGlvbiBfKCl7cmV0dXJuIGsuY2xlYXIoKX12LkNsZWFyPV87ZnVuY3Rpb24gUyhZKXtyZXR1cm4gay5kZWxldGUoWSl9di5EZWxldGU9UztmdW5jdGlvbiBqKFkpe3JldHVybiBrLmhhcyhZKX12Lkhhcz1qO2Z1bmN0aW9uIE4oWSxEKXtrLnNldChZLEQpfXYuU2V0PU47ZnVuY3Rpb24gWihZKXtyZXR1cm4gay5nZXQoWSl9di5HZXQ9Wn0pKHR8fChyLlR5cGVSZWdpc3RyeT10PXt9KSk7dmFyIGY7KGZ1bmN0aW9uKHYpe2NvbnN0IGs9bmV3IE1hcDtmdW5jdGlvbiB5KCl7cmV0dXJuIG5ldyBNYXAoayl9di5FbnRyaWVzPXk7ZnVuY3Rpb24gXygpe3JldHVybiBrLmNsZWFyKCl9di5DbGVhcj1fO2Z1bmN0aW9uIFMoWSl7cmV0dXJuIGsuZGVsZXRlKFkpfXYuRGVsZXRlPVM7ZnVuY3Rpb24gaihZKXtyZXR1cm4gay5oYXMoWSl9di5IYXM9ajtmdW5jdGlvbiBOKFksRCl7ay5zZXQoWSxEKX12LlNldD1OO2Z1bmN0aW9uIFooWSl7cmV0dXJuIGsuZ2V0KFkpfXYuR2V0PVp9KShmfHwoci5Gb3JtYXRSZWdpc3RyeT1mPXt9KSk7dmFyIGU7KGZ1bmN0aW9uKHYpe2Z1bmN0aW9uIGsoRCl7cmV0dXJuIHR5cGVvZiBEPT09Im9iamVjdCImJkQhPT1udWxsfXYuSXNPYmplY3Q9aztmdW5jdGlvbiB5KEQpe3JldHVybiBBcnJheS5pc0FycmF5KEQpfXYuSXNBcnJheT15O2Z1bmN0aW9uIF8oRCl7cmV0dXJuIHR5cGVvZiBEPT09ImJvb2xlYW4ifXYuSXNCb29sZWFuPV87ZnVuY3Rpb24gUyhEKXtyZXR1cm4gRD09PW51bGx9di5Jc051bGw9UztmdW5jdGlvbiBqKEQpe3JldHVybiBEPT09dm9pZCAwfXYuSXNVbmRlZmluZWQ9ajtmdW5jdGlvbiBOKEQpe3JldHVybiB0eXBlb2YgRD09PSJiaWdpbnQifXYuSXNCaWdJbnQ9TjtmdW5jdGlvbiBaKEQpe3JldHVybiB0eXBlb2YgRD09PSJudW1iZXIifXYuSXNOdW1iZXI9WjtmdW5jdGlvbiBZKEQpe3JldHVybiB0eXBlb2YgRD09PSJzdHJpbmcifXYuSXNTdHJpbmc9WX0pKGV8fChyLlZhbHVlR3VhcmQ9ZT17fSkpO2NsYXNzIFYgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3Rvcih2KXtzdXBlcigiVHlwZUd1YXJkOiBVbmtub3duIHR5cGUiKTt0aGlzLnNjaGVtYT12fX1yLlR5cGVHdWFyZFVua25vd25UeXBlRXJyb3I9Vjt2YXIgdTsoZnVuY3Rpb24odil7ZnVuY3Rpb24gayhwKXt0cnl7cmV0dXJuIG5ldyBSZWdFeHAocCksITB9Y2F0Y2h7cmV0dXJuITF9fWZ1bmN0aW9uIHkocCl7aWYoIWUuSXNTdHJpbmcocCkpcmV0dXJuITE7Zm9yKGxldCBvcj0wO29yPHAubGVuZ3RoO29yKyspe2NvbnN0IEFyPXAuY2hhckNvZGVBdChvcik7aWYoQXI+PTcmJkFyPD0xM3x8QXI9PT0yN3x8QXI9PT0xMjcpcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gXyhwKXtyZXR1cm4gTihwKXx8SXIocCl9ZnVuY3Rpb24gUyhwKXtyZXR1cm4gZS5Jc1VuZGVmaW5lZChwKXx8ZS5Jc0JpZ0ludChwKX1mdW5jdGlvbiBqKHApe3JldHVybiBlLklzVW5kZWZpbmVkKHApfHxlLklzTnVtYmVyKHApfWZ1bmN0aW9uIE4ocCl7cmV0dXJuIGUuSXNVbmRlZmluZWQocCl8fGUuSXNCb29sZWFuKHApfWZ1bmN0aW9uIFoocCl7cmV0dXJuIGUuSXNVbmRlZmluZWQocCl8fGUuSXNTdHJpbmcocCl9ZnVuY3Rpb24gWShwKXtyZXR1cm4gZS5Jc1VuZGVmaW5lZChwKXx8ZS5Jc1N0cmluZyhwKSYmeShwKSYmayhwKX1mdW5jdGlvbiBEKHApe3JldHVybiBlLklzVW5kZWZpbmVkKHApfHxlLklzU3RyaW5nKHApJiZ5KHApfWZ1bmN0aW9uIEoocCl7cmV0dXJuIGUuSXNVbmRlZmluZWQocCl8fElyKHApfWZ1bmN0aW9uIG5yKHApe3JldHVybiBhKHAsIkFueSIpJiZaKHAuJGlkKX12LlRBbnk9bnI7ZnVuY3Rpb24gY3IocCl7cmV0dXJuIGEocCwiQXJyYXkiKSYmcC50eXBlPT09ImFycmF5IiYmWihwLiRpZCkmJklyKHAuaXRlbXMpJiZqKHAubWluSXRlbXMpJiZqKHAubWF4SXRlbXMpJiZOKHAudW5pcXVlSXRlbXMpJiZKKHAuY29udGFpbnMpJiZqKHAubWluQ29udGFpbnMpJiZqKHAubWF4Q29udGFpbnMpfXYuVEFycmF5PWNyO2Z1bmN0aW9uIFUocCl7cmV0dXJuIGEocCwiQXN5bmNJdGVyYXRvciIpJiZwLnR5cGU9PT0iQXN5bmNJdGVyYXRvciImJloocC4kaWQpJiZJcihwLml0ZW1zKX12LlRBc3luY0l0ZXJhdG9yPVU7ZnVuY3Rpb24gJChwKXtyZXR1cm4gYShwLCJCaWdJbnQiKSYmcC50eXBlPT09ImJpZ2ludCImJloocC4kaWQpJiZTKHAubXVsdGlwbGVPZikmJlMocC5taW5pbXVtKSYmUyhwLm1heGltdW0pJiZTKHAuZXhjbHVzaXZlTWluaW11bSkmJlMocC5leGNsdXNpdmVNYXhpbXVtKX12LlRCaWdJbnQ9JDtmdW5jdGlvbiB1cihwKXtyZXR1cm4gYShwLCJCb29sZWFuIikmJnAudHlwZT09PSJib29sZWFuIiYmWihwLiRpZCl9di5UQm9vbGVhbj11cjtmdW5jdGlvbiB0cihwKXtpZighKGEocCwiQ29uc3RydWN0b3IiKSYmcC50eXBlPT09ImNvbnN0cnVjdG9yIiYmWihwLiRpZCkmJmUuSXNBcnJheShwLnBhcmFtZXRlcnMpJiZJcihwLnJldHVybnMpKSlyZXR1cm4hMTtmb3IobGV0IG9yIG9mIHAucGFyYW1ldGVycylpZighSXIob3IpKXJldHVybiExO3JldHVybiEwfXYuVENvbnN0cnVjdG9yPXRyO2Z1bmN0aW9uIG0ocCl7cmV0dXJuIGEocCwiRGF0ZSIpJiZwLnR5cGU9PT0iRGF0ZSImJloocC4kaWQpJiZqKHAubWluaW11bVRpbWVzdGFtcCkmJmoocC5tYXhpbXVtVGltZXN0YW1wKSYmaihwLmV4Y2x1c2l2ZU1pbmltdW1UaW1lc3RhbXApJiZqKHAuZXhjbHVzaXZlTWF4aW11bVRpbWVzdGFtcCl9di5URGF0ZT1tO2Z1bmN0aW9uIGhyKHApe2lmKCEoYShwLCJGdW5jdGlvbiIpJiZwLnR5cGU9PT0iZnVuY3Rpb24iJiZaKHAuJGlkKSYmZS5Jc0FycmF5KHAucGFyYW1ldGVycykmJklyKHAucmV0dXJucykpKXJldHVybiExO2ZvcihsZXQgb3Igb2YgcC5wYXJhbWV0ZXJzKWlmKCFJcihvcikpcmV0dXJuITE7cmV0dXJuITB9di5URnVuY3Rpb249aHI7ZnVuY3Rpb24gYyhwKXtyZXR1cm4gYShwLCJJbnRlZ2VyIikmJnAudHlwZT09PSJpbnRlZ2VyIiYmWihwLiRpZCkmJmoocC5tdWx0aXBsZU9mKSYmaihwLm1pbmltdW0pJiZqKHAubWF4aW11bSkmJmoocC5leGNsdXNpdmVNaW5pbXVtKSYmaihwLmV4Y2x1c2l2ZU1heGltdW0pfXYuVEludGVnZXI9YztmdW5jdGlvbiBpKHApe2lmKCEoYShwLCJJbnRlcnNlY3QiKSYmZS5Jc0FycmF5KHAuYWxsT2YpJiZaKHAudHlwZSkmJihOKHAudW5ldmFsdWF0ZWRQcm9wZXJ0aWVzKXx8SihwLnVuZXZhbHVhdGVkUHJvcGVydGllcykpJiZaKHAuJGlkKSkpcmV0dXJuITE7aWYoKCJ0eXBlImluIHApJiZwLnR5cGUhPT0ib2JqZWN0IilyZXR1cm4hMTtmb3IobGV0IG9yIG9mIHAuYWxsT2YpaWYoIUlyKG9yKSlyZXR1cm4hMTtyZXR1cm4hMH12LlRJbnRlcnNlY3Q9aTtmdW5jdGlvbiBuKHApe3JldHVybiBhKHAsIkl0ZXJhdG9yIikmJnAudHlwZT09PSJJdGVyYXRvciImJloocC4kaWQpJiZJcihwLml0ZW1zKX12LlRJdGVyYXRvcj1uO2Z1bmN0aW9uIGEocCxvcil7cmV0dXJuIGIocCkmJnBbci5LaW5kXT09PW9yfXYuVEtpbmRPZj1hO2Z1bmN0aW9uIGIocCl7cmV0dXJuIGUuSXNPYmplY3QocCkmJihyLktpbmQgaW4gcCkmJmUuSXNTdHJpbmcocFtyLktpbmRdKX12LlRLaW5kPWI7ZnVuY3Rpb24gbChwKXtyZXR1cm4gYXIocCkmJmUuSXNTdHJpbmcocC5jb25zdCl9di5UTGl0ZXJhbFN0cmluZz1sO2Z1bmN0aW9uIEIocCl7cmV0dXJuIGFyKHApJiZlLklzTnVtYmVyKHAuY29uc3QpfXYuVExpdGVyYWxOdW1iZXI9QjtmdW5jdGlvbiBRKHApe3JldHVybiBhcihwKSYmZS5Jc0Jvb2xlYW4ocC5jb25zdCl9di5UTGl0ZXJhbEJvb2xlYW49UTtmdW5jdGlvbiBhcihwKXtyZXR1cm4gYShwLCJMaXRlcmFsIikmJloocC4kaWQpJiYoZS5Jc0Jvb2xlYW4ocC5jb25zdCl8fGUuSXNOdW1iZXIocC5jb25zdCl8fGUuSXNTdHJpbmcocC5jb25zdCkpfXYuVExpdGVyYWw9YXI7ZnVuY3Rpb24gVHIocCl7cmV0dXJuIGEocCwiTmV2ZXIiKSYmZS5Jc09iamVjdChwLm5vdCkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHAubm90KS5sZW5ndGg9PT0wfXYuVE5ldmVyPVRyO2Z1bmN0aW9uIGJyKHApe3JldHVybiBhKHAsIk5vdCIpJiZJcihwLm5vdCl9di5UTm90PWJyO2Z1bmN0aW9uIHZyKHApe3JldHVybiBhKHAsIk51bGwiKSYmcC50eXBlPT09Im51bGwiJiZaKHAuJGlkKX12LlROdWxsPXZyO2Z1bmN0aW9uIEVyKHApe3JldHVybiBhKHAsIk51bWJlciIpJiZwLnR5cGU9PT0ibnVtYmVyIiYmWihwLiRpZCkmJmoocC5tdWx0aXBsZU9mKSYmaihwLm1pbmltdW0pJiZqKHAubWF4aW11bSkmJmoocC5leGNsdXNpdmVNaW5pbXVtKSYmaihwLmV4Y2x1c2l2ZU1heGltdW0pfXYuVE51bWJlcj1FcjtmdW5jdGlvbiBkcihwKXtpZighKGEocCwiT2JqZWN0IikmJnAudHlwZT09PSJvYmplY3QiJiZaKHAuJGlkKSYmZS5Jc09iamVjdChwLnByb3BlcnRpZXMpJiZfKHAuYWRkaXRpb25hbFByb3BlcnRpZXMpJiZqKHAubWluUHJvcGVydGllcykmJmoocC5tYXhQcm9wZXJ0aWVzKSkpcmV0dXJuITE7Zm9yKGxldFtvcixBcl1vZiBPYmplY3QuZW50cmllcyhwLnByb3BlcnRpZXMpKXtpZigheShvcikpcmV0dXJuITE7aWYoIUlyKEFyKSlyZXR1cm4hMX1yZXR1cm4hMH12LlRPYmplY3Q9ZHI7ZnVuY3Rpb24gSShwKXtyZXR1cm4gYShwLCJQcm9taXNlIikmJnAudHlwZT09PSJQcm9taXNlIiYmWihwLiRpZCkmJklyKHAuaXRlbSl9di5UUHJvbWlzZT1JO2Z1bmN0aW9uIGlyKHApe2lmKCEoYShwLCJSZWNvcmQiKSYmcC50eXBlPT09Im9iamVjdCImJloocC4kaWQpJiZfKHAuYWRkaXRpb25hbFByb3BlcnRpZXMpJiZlLklzT2JqZWN0KHAucGF0dGVyblByb3BlcnRpZXMpKSlyZXR1cm4hMTtjb25zdCBvcj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhwLnBhdHRlcm5Qcm9wZXJ0aWVzKTtpZihvci5sZW5ndGghPT0xKXJldHVybiExO2lmKCFrKG9yWzBdKSlyZXR1cm4hMTtpZighSXIocC5wYXR0ZXJuUHJvcGVydGllc1tvclswXV0pKXJldHVybiExO3JldHVybiEwfXYuVFJlY29yZD1pcjtmdW5jdGlvbiBXKHApe3JldHVybiBhKHAsIlJlZiIpJiZaKHAuJGlkKSYmZS5Jc1N0cmluZyhwLiRyZWYpfXYuVFJlZj1XO2Z1bmN0aW9uIGcocCl7cmV0dXJuIGEocCwiU3RyaW5nIikmJnAudHlwZT09PSJzdHJpbmciJiZaKHAuJGlkKSYmaihwLm1pbkxlbmd0aCkmJmoocC5tYXhMZW5ndGgpJiZZKHAucGF0dGVybikmJkQocC5mb3JtYXQpfXYuVFN0cmluZz1nO2Z1bmN0aW9uIE0ocCl7cmV0dXJuIGEocCwiU3ltYm9sIikmJnAudHlwZT09PSJzeW1ib2wiJiZaKHAuJGlkKX12LlRTeW1ib2w9TTtmdW5jdGlvbiBkKHApe3JldHVybiBhKHAsIlRlbXBsYXRlTGl0ZXJhbCIpJiZwLnR5cGU9PT0ic3RyaW5nIiYmZS5Jc1N0cmluZyhwLnBhdHRlcm4pJiZwLnBhdHRlcm5bMF09PT0iXiImJnAucGF0dGVybltwLnBhdHRlcm4ubGVuZ3RoLTFdPT09IiQifXYuVFRlbXBsYXRlTGl0ZXJhbD1kO2Z1bmN0aW9uIGxyKHApe3JldHVybiBhKHAsIlRoaXMiKSYmWihwLiRpZCkmJmUuSXNTdHJpbmcocC4kcmVmKX12LlRUaGlzPWxyO2Z1bmN0aW9uIGZyKHApe2lmKCEoYShwLCJUdXBsZSIpJiZwLnR5cGU9PT0iYXJyYXkiJiZaKHAuJGlkKSYmZS5Jc051bWJlcihwLm1pbkl0ZW1zKSYmZS5Jc051bWJlcihwLm1heEl0ZW1zKSYmcC5taW5JdGVtcz09PXAubWF4SXRlbXMpKXJldHVybiExO2lmKGUuSXNVbmRlZmluZWQocC5pdGVtcykmJmUuSXNVbmRlZmluZWQocC5hZGRpdGlvbmFsSXRlbXMpJiZwLm1pbkl0ZW1zPT09MClyZXR1cm4hMDtpZighZS5Jc0FycmF5KHAuaXRlbXMpKXJldHVybiExO2ZvcihsZXQgb3Igb2YgcC5pdGVtcylpZighSXIob3IpKXJldHVybiExO3JldHVybiEwfXYuVFR1cGxlPWZyO2Z1bmN0aW9uIHJyKHApe3JldHVybiBhKHAsIlVuZGVmaW5lZCIpJiZwLnR5cGU9PT0idW5kZWZpbmVkIiYmWihwLiRpZCl9di5UVW5kZWZpbmVkPXJyO2Z1bmN0aW9uIGdyKHApe3JldHVybiBqcihwKSYmcC5hbnlPZi5ldmVyeSgob3IpPT5sKG9yKXx8QihvcikpfXYuVFVuaW9uTGl0ZXJhbD1ncjtmdW5jdGlvbiBqcihwKXtpZighKGEocCwiVW5pb24iKSYmZS5Jc0FycmF5KHAuYW55T2YpJiZaKHAuJGlkKSkpcmV0dXJuITE7Zm9yKGxldCBvciBvZiBwLmFueU9mKWlmKCFJcihvcikpcmV0dXJuITE7cmV0dXJuITB9di5UVW5pb249anI7ZnVuY3Rpb24gU3IocCl7cmV0dXJuIGEocCwiVWludDhBcnJheSIpJiZwLnR5cGU9PT0iVWludDhBcnJheSImJloocC4kaWQpJiZqKHAubWluQnl0ZUxlbmd0aCkmJmoocC5tYXhCeXRlTGVuZ3RoKX12LlRVaW50OEFycmF5PVNyO2Z1bmN0aW9uIHlyKHApe3JldHVybiBhKHAsIlVua25vd24iKSYmWihwLiRpZCl9di5UVW5rbm93bj15cjtmdW5jdGlvbiBScihwKXtyZXR1cm4gYShwLCJVbnNhZmUiKX12LlRVbnNhZmU9UnI7ZnVuY3Rpb24gUHIocCl7cmV0dXJuIGEocCwiVm9pZCIpJiZwLnR5cGU9PT0idm9pZCImJloocC4kaWQpfXYuVFZvaWQ9UHI7ZnVuY3Rpb24gbXIocCl7cmV0dXJuIGUuSXNPYmplY3QocCkmJnBbci5SZWFkb25seV09PT0iUmVhZG9ubHkifXYuVFJlYWRvbmx5PW1yO2Z1bmN0aW9uIGcwKHApe3JldHVybiBlLklzT2JqZWN0KHApJiZwW3IuT3B0aW9uYWxdPT09Ik9wdGlvbmFsIn12LlRPcHRpb25hbD1nMDtmdW5jdGlvbiBJcihwKXtyZXR1cm4gZS5Jc09iamVjdChwKSYmKG5yKHApfHxjcihwKXx8dXIocCl8fCQocCl8fFUocCl8fHRyKHApfHxtKHApfHxocihwKXx8YyhwKXx8aShwKXx8bihwKXx8YXIocCl8fFRyKHApfHxicihwKXx8dnIocCl8fEVyKHApfHxkcihwKXx8SShwKXx8aXIocCl8fFcocCl8fGcocCl8fE0ocCl8fGQocCl8fGxyKHApfHxmcihwKXx8cnIocCl8fGpyKHApfHxTcihwKXx8eXIocCl8fFJyKHApfHxQcihwKXx8YihwKSYmdC5IYXMocFtyLktpbmRdKSl9di5UU2NoZW1hPUlyfSkodXx8KHIuVHlwZUd1YXJkPXU9e30pKTt2YXIgTzsoZnVuY3Rpb24odil7ZnVuY3Rpb24gayh5KXtpZih5W3IuS2luZF09PT0iVW5kZWZpbmVkIilyZXR1cm4hMDtpZih5W3IuS2luZF09PT0iTm90IilyZXR1cm4hayh5Lm5vdCk7aWYoeVtyLktpbmRdPT09IkludGVyc2VjdCIpcmV0dXJuIHkuYWxsT2YuZXZlcnkoKF8pPT5rKF8pKTtpZih5W3IuS2luZF09PT0iVW5pb24iKXJldHVybiB5LmFueU9mLnNvbWUoKF8pPT5rKF8pKTtyZXR1cm4hMX12LkNoZWNrPWt9KShPfHwoci5FeHRlbmRzVW5kZWZpbmVkPU89e30pKTt2YXIgVDsoZnVuY3Rpb24odil7dlt2LlVuaW9uPTBdPSJVbmlvbiIsdlt2LlRydWU9MV09IlRydWUiLHZbdi5GYWxzZT0yXT0iRmFsc2UifSkoVHx8KHIuVHlwZUV4dGVuZHNSZXN1bHQ9VD17fSkpO3ZhciBFOyhmdW5jdGlvbih2KXtmdW5jdGlvbiBrKHMpe3JldHVybiBzPT09VC5GYWxzZT9ULkZhbHNlOlQuVHJ1ZX1mdW5jdGlvbiB5KHMpe3JldHVybiB1LlROZXZlcihzKXx8dS5USW50ZXJzZWN0KHMpfHx1LlRVbmlvbihzKXx8dS5UVW5rbm93bihzKXx8dS5UQW55KHMpfWZ1bmN0aW9uIF8ocyxoKXtpZih1LlROZXZlcihoKSlyZXR1cm4gbihzLGgpO2lmKHUuVEludGVyc2VjdChoKSlyZXR1cm4gbShzLGgpO2lmKHUuVFVuaW9uKGgpKXJldHVybiBWMChzLGgpO2lmKHUuVFVua25vd24oaCkpcmV0dXJuIEwwKHMsaCk7aWYodS5UQW55KGgpKXJldHVybiBTKHMsaCk7dGhyb3cgRXJyb3IoIlR5cGVFeHRlbmRzOiBTdHJ1Y3R1cmFsUmlnaHQiKX1mdW5jdGlvbiBTKHMsaCl7cmV0dXJuIFQuVHJ1ZX1mdW5jdGlvbiBqKHMsaCl7aWYodS5USW50ZXJzZWN0KGgpKXJldHVybiBtKHMsaCk7aWYodS5UVW5pb24oaCkmJmguYW55T2Yuc29tZSgocHIpPT51LlRBbnkocHIpfHx1LlRVbmtub3duKHByKSkpcmV0dXJuIFQuVHJ1ZTtpZih1LlRVbmlvbihoKSlyZXR1cm4gVC5VbmlvbjtpZih1LlRVbmtub3duKGgpKXJldHVybiBULlRydWU7aWYodS5UQW55KGgpKXJldHVybiBULlRydWU7cmV0dXJuIFQuVW5pb259ZnVuY3Rpb24gTihzLGgpe2lmKHUuVFVua25vd24ocykpcmV0dXJuIFQuRmFsc2U7aWYodS5UQW55KHMpKXJldHVybiBULlVuaW9uO2lmKHUuVE5ldmVyKHMpKXJldHVybiBULlRydWU7cmV0dXJuIFQuRmFsc2V9ZnVuY3Rpb24gWihzLGgpe2lmKHkoaCkpcmV0dXJuIF8ocyxoKTtpZih1LlRPYmplY3QoaCkmJmQoaCkpcmV0dXJuIFQuVHJ1ZTtpZighdS5UQXJyYXkoaCkpcmV0dXJuIFQuRmFsc2U7cmV0dXJuIGsoVnIocy5pdGVtcyxoLml0ZW1zKSl9ZnVuY3Rpb24gWShzLGgpe2lmKHkoaCkpcmV0dXJuIF8ocyxoKTtpZighdS5UQXN5bmNJdGVyYXRvcihoKSlyZXR1cm4gVC5GYWxzZTtyZXR1cm4gayhWcihzLml0ZW1zLGguaXRlbXMpKX1mdW5jdGlvbiBEKHMsaCl7aWYoeShoKSlyZXR1cm4gXyhzLGgpO2lmKHUuVE9iamVjdChoKSlyZXR1cm4gcnIocyxoKTtpZih1LlRSZWNvcmQoaCkpcmV0dXJuIFJyKHMsaCk7cmV0dXJuIHUuVEJpZ0ludChoKT9ULlRydWU6VC5GYWxzZX1mdW5jdGlvbiBKKHMsaCl7aWYodS5UTGl0ZXJhbChzKSYmZS5Jc0Jvb2xlYW4ocy5jb25zdCkpcmV0dXJuIFQuVHJ1ZTtyZXR1cm4gdS5UQm9vbGVhbihzKT9ULlRydWU6VC5GYWxzZX1mdW5jdGlvbiBucihzLGgpe2lmKHkoaCkpcmV0dXJuIF8ocyxoKTtpZih1LlRPYmplY3QoaCkpcmV0dXJuIHJyKHMsaCk7aWYodS5UUmVjb3JkKGgpKXJldHVybiBScihzLGgpO3JldHVybiB1LlRCb29sZWFuKGgpP1QuVHJ1ZTpULkZhbHNlfWZ1bmN0aW9uIGNyKHMsaCl7aWYoeShoKSlyZXR1cm4gXyhzLGgpO2lmKHUuVE9iamVjdChoKSlyZXR1cm4gcnIocyxoKTtpZighdS5UQ29uc3RydWN0b3IoaCkpcmV0dXJuIFQuRmFsc2U7aWYocy5wYXJhbWV0ZXJzLmxlbmd0aD5oLnBhcmFtZXRlcnMubGVuZ3RoKXJldHVybiBULkZhbHNlO2lmKCFzLnBhcmFtZXRlcnMuZXZlcnkoKHByLEdyKT0+ayhWcihoLnBhcmFtZXRlcnNbR3JdLHByKSk9PT1ULlRydWUpKXJldHVybiBULkZhbHNlO3JldHVybiBrKFZyKHMucmV0dXJucyxoLnJldHVybnMpKX1mdW5jdGlvbiBVKHMsaCl7aWYoeShoKSlyZXR1cm4gXyhzLGgpO2lmKHUuVE9iamVjdChoKSlyZXR1cm4gcnIocyxoKTtpZih1LlRSZWNvcmQoaCkpcmV0dXJuIFJyKHMsaCk7cmV0dXJuIHUuVERhdGUoaCk/VC5UcnVlOlQuRmFsc2V9ZnVuY3Rpb24gJChzLGgpe2lmKHkoaCkpcmV0dXJuIF8ocyxoKTtpZih1LlRPYmplY3QoaCkpcmV0dXJuIHJyKHMsaCk7aWYoIXUuVEZ1bmN0aW9uKGgpKXJldHVybiBULkZhbHNlO2lmKHMucGFyYW1ldGVycy5sZW5ndGg+aC5wYXJhbWV0ZXJzLmxlbmd0aClyZXR1cm4gVC5GYWxzZTtpZighcy5wYXJhbWV0ZXJzLmV2ZXJ5KChwcixHcik9PmsoVnIoaC5wYXJhbWV0ZXJzW0dyXSxwcikpPT09VC5UcnVlKSlyZXR1cm4gVC5GYWxzZTtyZXR1cm4gayhWcihzLnJldHVybnMsaC5yZXR1cm5zKSl9ZnVuY3Rpb24gdXIocyxoKXtpZih1LlRMaXRlcmFsKHMpJiZlLklzTnVtYmVyKHMuY29uc3QpKXJldHVybiBULlRydWU7cmV0dXJuIHUuVE51bWJlcihzKXx8dS5USW50ZWdlcihzKT9ULlRydWU6VC5GYWxzZX1mdW5jdGlvbiB0cihzLGgpe2lmKHkoaCkpcmV0dXJuIF8ocyxoKTtpZih1LlRPYmplY3QoaCkpcmV0dXJuIHJyKHMsaCk7aWYodS5UUmVjb3JkKGgpKXJldHVybiBScihzLGgpO3JldHVybiB1LlRJbnRlZ2VyKGgpfHx1LlROdW1iZXIoaCk/VC5UcnVlOlQuRmFsc2V9ZnVuY3Rpb24gbShzLGgpe3JldHVybiBoLmFsbE9mLmV2ZXJ5KChwcik9PlZyKHMscHIpPT09VC5UcnVlKT9ULlRydWU6VC5GYWxzZX1mdW5jdGlvbiBocihzLGgpe3JldHVybiBzLmFsbE9mLnNvbWUoKHByKT0+VnIocHIsaCk9PT1ULlRydWUpP1QuVHJ1ZTpULkZhbHNlfWZ1bmN0aW9uIGMocyxoKXtpZih5KGgpKXJldHVybiBfKHMsaCk7aWYoIXUuVEl0ZXJhdG9yKGgpKXJldHVybiBULkZhbHNlO3JldHVybiBrKFZyKHMuaXRlbXMsaC5pdGVtcykpfWZ1bmN0aW9uIGkocyxoKXtpZih5KGgpKXJldHVybiBfKHMsaCk7aWYodS5UT2JqZWN0KGgpKXJldHVybiBycihzLGgpO2lmKHUuVFJlY29yZChoKSlyZXR1cm4gUnIocyxoKTtpZih1LlRTdHJpbmcoaCkpcmV0dXJuIG1yKHMsaCk7aWYodS5UTnVtYmVyKGgpKXJldHVybiBRKHMsaCk7aWYodS5USW50ZWdlcihoKSlyZXR1cm4gdXIocyxoKTtpZih1LlRCb29sZWFuKGgpKXJldHVybiBKKHMsaCk7cmV0dXJuIHUuVExpdGVyYWwoaCkmJmguY29uc3Q9PT1zLmNvbnN0P1QuVHJ1ZTpULkZhbHNlfWZ1bmN0aW9uIG4ocyxoKXtyZXR1cm4gVC5GYWxzZX1mdW5jdGlvbiBhKHMsaCl7cmV0dXJuIFQuVHJ1ZX1mdW5jdGlvbiBiKHMpe2xldFtoLHByXT1bcywwXTt3aGlsZSghMCl7aWYoIXUuVE5vdChoKSlicmVhaztoPWgubm90LHByKz0xfXJldHVybiBwciUyPT09MD9oOnIuVHlwZS5Vbmtub3duKCl9ZnVuY3Rpb24gbChzLGgpe2lmKHUuVE5vdChzKSlyZXR1cm4gVnIoYihzKSxoKTtpZih1LlROb3QoaCkpcmV0dXJuIFZyKHMsYihoKSk7dGhyb3cgbmV3IEVycm9yKCJUeXBlRXh0ZW5kczogSW52YWxpZCBmYWxsdGhyb3VnaCBmb3IgTm90Iil9ZnVuY3Rpb24gQihzLGgpe2lmKHkoaCkpcmV0dXJuIF8ocyxoKTtpZih1LlRPYmplY3QoaCkpcmV0dXJuIHJyKHMsaCk7aWYodS5UUmVjb3JkKGgpKXJldHVybiBScihzLGgpO3JldHVybiB1LlROdWxsKGgpP1QuVHJ1ZTpULkZhbHNlfWZ1bmN0aW9uIFEocyxoKXtpZih1LlRMaXRlcmFsTnVtYmVyKHMpKXJldHVybiBULlRydWU7cmV0dXJuIHUuVE51bWJlcihzKXx8dS5USW50ZWdlcihzKT9ULlRydWU6VC5GYWxzZX1mdW5jdGlvbiBhcihzLGgpe2lmKHkoaCkpcmV0dXJuIF8ocyxoKTtpZih1LlRPYmplY3QoaCkpcmV0dXJuIHJyKHMsaCk7aWYodS5UUmVjb3JkKGgpKXJldHVybiBScihzLGgpO3JldHVybiB1LlRJbnRlZ2VyKGgpfHx1LlROdW1iZXIoaCk/VC5UcnVlOlQuRmFsc2V9ZnVuY3Rpb24gVHIocyxoKXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocy5wcm9wZXJ0aWVzKS5sZW5ndGg9PT1ofWZ1bmN0aW9uIGJyKHMpe3JldHVybiBkKHMpfWZ1bmN0aW9uIHZyKHMpe3JldHVybiBUcihzLDApfHxUcihzLDEpJiYoImRlc2NyaXB0aW9uImluIHMucHJvcGVydGllcykmJnUuVFVuaW9uKHMucHJvcGVydGllcy5kZXNjcmlwdGlvbikmJnMucHJvcGVydGllcy5kZXNjcmlwdGlvbi5hbnlPZi5sZW5ndGg9PT0yJiYodS5UU3RyaW5nKHMucHJvcGVydGllcy5kZXNjcmlwdGlvbi5hbnlPZlswXSkmJnUuVFVuZGVmaW5lZChzLnByb3BlcnRpZXMuZGVzY3JpcHRpb24uYW55T2ZbMV0pfHx1LlRTdHJpbmcocy5wcm9wZXJ0aWVzLmRlc2NyaXB0aW9uLmFueU9mWzFdKSYmdS5UVW5kZWZpbmVkKHMucHJvcGVydGllcy5kZXNjcmlwdGlvbi5hbnlPZlswXSkpfWZ1bmN0aW9uIEVyKHMpe3JldHVybiBUcihzLDApfWZ1bmN0aW9uIGRyKHMpe3JldHVybiBUcihzLDApfWZ1bmN0aW9uIEkocyl7cmV0dXJuIFRyKHMsMCl9ZnVuY3Rpb24gaXIocyl7cmV0dXJuIFRyKHMsMCl9ZnVuY3Rpb24gVyhzKXtyZXR1cm4gZChzKX1mdW5jdGlvbiBnKHMpe2NvbnN0IGg9ci5UeXBlLk51bWJlcigpO3JldHVybiBUcihzLDApfHxUcihzLDEpJiYoImxlbmd0aCJpbiBzLnByb3BlcnRpZXMpJiZrKFZyKHMucHJvcGVydGllcy5sZW5ndGgsaCkpPT09VC5UcnVlfWZ1bmN0aW9uIE0ocyl7cmV0dXJuIFRyKHMsMCl9ZnVuY3Rpb24gZChzKXtjb25zdCBoPXIuVHlwZS5OdW1iZXIoKTtyZXR1cm4gVHIocywwKXx8VHIocywxKSYmKCJsZW5ndGgiaW4gcy5wcm9wZXJ0aWVzKSYmayhWcihzLnByb3BlcnRpZXMubGVuZ3RoLGgpKT09PVQuVHJ1ZX1mdW5jdGlvbiBscihzKXtjb25zdCBoPXIuVHlwZS5GdW5jdGlvbihbci5UeXBlLkFueSgpXSxyLlR5cGUuQW55KCkpO3JldHVybiBUcihzLDApfHxUcihzLDEpJiYoInRoZW4iaW4gcy5wcm9wZXJ0aWVzKSYmayhWcihzLnByb3BlcnRpZXMudGhlbixoKSk9PT1ULlRydWV9ZnVuY3Rpb24gZnIocyxoKXtpZihWcihzLGgpPT09VC5GYWxzZSlyZXR1cm4gVC5GYWxzZTtpZih1LlRPcHRpb25hbChzKSYmIXUuVE9wdGlvbmFsKGgpKXJldHVybiBULkZhbHNlO3JldHVybiBULlRydWV9ZnVuY3Rpb24gcnIocyxoKXtpZih1LlRVbmtub3duKHMpKXJldHVybiBULkZhbHNlO2lmKHUuVEFueShzKSlyZXR1cm4gVC5VbmlvbjtpZih1LlROZXZlcihzKSlyZXR1cm4gVC5UcnVlO2lmKHUuVExpdGVyYWxTdHJpbmcocykmJmJyKGgpKXJldHVybiBULlRydWU7aWYodS5UTGl0ZXJhbE51bWJlcihzKSYmRXIoaCkpcmV0dXJuIFQuVHJ1ZTtpZih1LlRMaXRlcmFsQm9vbGVhbihzKSYmZHIoaCkpcmV0dXJuIFQuVHJ1ZTtpZih1LlRTeW1ib2wocykmJnZyKGgpKXJldHVybiBULlRydWU7aWYodS5UQmlnSW50KHMpJiZJKGgpKXJldHVybiBULlRydWU7aWYodS5UU3RyaW5nKHMpJiZicihoKSlyZXR1cm4gVC5UcnVlO2lmKHUuVFN5bWJvbChzKSYmdnIoaCkpcmV0dXJuIFQuVHJ1ZTtpZih1LlROdW1iZXIocykmJkVyKGgpKXJldHVybiBULlRydWU7aWYodS5USW50ZWdlcihzKSYmRXIoaCkpcmV0dXJuIFQuVHJ1ZTtpZih1LlRCb29sZWFuKHMpJiZkcihoKSlyZXR1cm4gVC5UcnVlO2lmKHUuVFVpbnQ4QXJyYXkocykmJlcoaCkpcmV0dXJuIFQuVHJ1ZTtpZih1LlREYXRlKHMpJiZpcihoKSlyZXR1cm4gVC5UcnVlO2lmKHUuVENvbnN0cnVjdG9yKHMpJiZNKGgpKXJldHVybiBULlRydWU7aWYodS5URnVuY3Rpb24ocykmJmcoaCkpcmV0dXJuIFQuVHJ1ZTtpZih1LlRSZWNvcmQocykmJnUuVFN0cmluZyhTcihzKSkpcmV0dXJuIGhbci5IaW50XT09PSJSZWNvcmQiP1QuVHJ1ZTpULkZhbHNlO2lmKHUuVFJlY29yZChzKSYmdS5UTnVtYmVyKFNyKHMpKSlyZXR1cm4gVHIoaCwwKT9ULlRydWU6VC5GYWxzZTtyZXR1cm4gVC5GYWxzZX1mdW5jdGlvbiBncihzLGgpe2lmKHkoaCkpcmV0dXJuIF8ocyxoKTtpZih1LlRSZWNvcmQoaCkpcmV0dXJuIFJyKHMsaCk7aWYoIXUuVE9iamVjdChoKSlyZXR1cm4gVC5GYWxzZTtmb3IobGV0IHByIG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGgucHJvcGVydGllcykpe2lmKCEocHIgaW4gcy5wcm9wZXJ0aWVzKSlyZXR1cm4gVC5GYWxzZTtpZihmcihzLnByb3BlcnRpZXNbcHJdLGgucHJvcGVydGllc1twcl0pPT09VC5GYWxzZSlyZXR1cm4gVC5GYWxzZX1yZXR1cm4gVC5UcnVlfWZ1bmN0aW9uIGpyKHMsaCl7aWYoeShoKSlyZXR1cm4gXyhzLGgpO2lmKHUuVE9iamVjdChoKSYmbHIoaCkpcmV0dXJuIFQuVHJ1ZTtpZighdS5UUHJvbWlzZShoKSlyZXR1cm4gVC5GYWxzZTtyZXR1cm4gayhWcihzLml0ZW0saC5pdGVtKSl9ZnVuY3Rpb24gU3Iocyl7aWYoci5QYXR0ZXJuTnVtYmVyRXhhY3QgaW4gcy5wYXR0ZXJuUHJvcGVydGllcylyZXR1cm4gci5UeXBlLk51bWJlcigpO2lmKHIuUGF0dGVyblN0cmluZ0V4YWN0IGluIHMucGF0dGVyblByb3BlcnRpZXMpcmV0dXJuIHIuVHlwZS5TdHJpbmcoKTt0aHJvdyBFcnJvcigiVHlwZUV4dGVuZHM6IENhbm5vdCBnZXQgcmVjb3JkIGtleSIpfWZ1bmN0aW9uIHlyKHMpe2lmKHIuUGF0dGVybk51bWJlckV4YWN0IGluIHMucGF0dGVyblByb3BlcnRpZXMpcmV0dXJuIHMucGF0dGVyblByb3BlcnRpZXNbci5QYXR0ZXJuTnVtYmVyRXhhY3RdO2lmKHIuUGF0dGVyblN0cmluZ0V4YWN0IGluIHMucGF0dGVyblByb3BlcnRpZXMpcmV0dXJuIHMucGF0dGVyblByb3BlcnRpZXNbci5QYXR0ZXJuU3RyaW5nRXhhY3RdO3Rocm93IEVycm9yKCJUeXBlRXh0ZW5kczogQ2Fubm90IGdldCByZWNvcmQgdmFsdWUiKX1mdW5jdGlvbiBScihzLGgpe2NvbnN0IHByPVNyKGgpLEdyPXlyKGgpO2lmKHUuVExpdGVyYWxTdHJpbmcocykmJnUuVE51bWJlcihwcikmJmsoVnIocyxHcikpPT09VC5UcnVlKXJldHVybiBULlRydWU7aWYodS5UVWludDhBcnJheShzKSYmdS5UTnVtYmVyKHByKSlyZXR1cm4gVnIocyxHcik7aWYodS5UU3RyaW5nKHMpJiZ1LlROdW1iZXIocHIpKXJldHVybiBWcihzLEdyKTtpZih1LlRBcnJheShzKSYmdS5UTnVtYmVyKHByKSlyZXR1cm4gVnIocyxHcik7aWYodS5UT2JqZWN0KHMpKXtmb3IobGV0IHNuIG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHMucHJvcGVydGllcykpaWYoZnIoR3Iscy5wcm9wZXJ0aWVzW3NuXSk9PT1ULkZhbHNlKXJldHVybiBULkZhbHNlO3JldHVybiBULlRydWV9cmV0dXJuIFQuRmFsc2V9ZnVuY3Rpb24gUHIocyxoKXtjb25zdCBwcj15cihzKTtpZih5KGgpKXJldHVybiBfKHMsaCk7aWYodS5UT2JqZWN0KGgpKXJldHVybiBycihzLGgpO2lmKCF1LlRSZWNvcmQoaCkpcmV0dXJuIFQuRmFsc2U7cmV0dXJuIFZyKHByLHlyKGgpKX1mdW5jdGlvbiBtcihzLGgpe2lmKHUuVExpdGVyYWwocykmJmUuSXNTdHJpbmcocy5jb25zdCkpcmV0dXJuIFQuVHJ1ZTtyZXR1cm4gdS5UU3RyaW5nKHMpP1QuVHJ1ZTpULkZhbHNlfWZ1bmN0aW9uIGcwKHMsaCl7aWYoeShoKSlyZXR1cm4gXyhzLGgpO2lmKHUuVE9iamVjdChoKSlyZXR1cm4gcnIocyxoKTtpZih1LlRSZWNvcmQoaCkpcmV0dXJuIFJyKHMsaCk7cmV0dXJuIHUuVFN0cmluZyhoKT9ULlRydWU6VC5GYWxzZX1mdW5jdGlvbiBJcihzLGgpe2lmKHkoaCkpcmV0dXJuIF8ocyxoKTtpZih1LlRPYmplY3QoaCkpcmV0dXJuIHJyKHMsaCk7aWYodS5UUmVjb3JkKGgpKXJldHVybiBScihzLGgpO3JldHVybiB1LlRTeW1ib2woaCk/VC5UcnVlOlQuRmFsc2V9ZnVuY3Rpb24gcChzLGgpe2lmKHUuVFRlbXBsYXRlTGl0ZXJhbChzKSlyZXR1cm4gVnIoRi5SZXNvbHZlKHMpLGgpO2lmKHUuVFRlbXBsYXRlTGl0ZXJhbChoKSlyZXR1cm4gVnIocyxGLlJlc29sdmUoaCkpO3Rocm93IG5ldyBFcnJvcigiVHlwZUV4dGVuZHM6IEludmFsaWQgZmFsbHRocm91Z2ggZm9yIFRlbXBsYXRlTGl0ZXJhbCIpfWZ1bmN0aW9uIG9yKHMsaCl7cmV0dXJuIHUuVEFycmF5KGgpJiZzLml0ZW1zIT09dm9pZCAwJiZzLml0ZW1zLmV2ZXJ5KChwcik9PlZyKHByLGguaXRlbXMpPT09VC5UcnVlKX1mdW5jdGlvbiBBcihzLGgpe2lmKHUuVE5ldmVyKHMpKXJldHVybiBULlRydWU7aWYodS5UVW5rbm93bihzKSlyZXR1cm4gVC5GYWxzZTtpZih1LlRBbnkocykpcmV0dXJuIFQuVW5pb247cmV0dXJuIFQuRmFsc2V9ZnVuY3Rpb24gdW4ocyxoKXtpZih5KGgpKXJldHVybiBfKHMsaCk7aWYodS5UT2JqZWN0KGgpJiZkKGgpKXJldHVybiBULlRydWU7aWYodS5UQXJyYXkoaCkmJm9yKHMsaCkpcmV0dXJuIFQuVHJ1ZTtpZighdS5UVHVwbGUoaCkpcmV0dXJuIFQuRmFsc2U7aWYoZS5Jc1VuZGVmaW5lZChzLml0ZW1zKSYmIWUuSXNVbmRlZmluZWQoaC5pdGVtcyl8fCFlLklzVW5kZWZpbmVkKHMuaXRlbXMpJiZlLklzVW5kZWZpbmVkKGguaXRlbXMpKXJldHVybiBULkZhbHNlO2lmKGUuSXNVbmRlZmluZWQocy5pdGVtcykmJiFlLklzVW5kZWZpbmVkKGguaXRlbXMpKXJldHVybiBULlRydWU7cmV0dXJuIHMuaXRlbXMuZXZlcnkoKHByLEdyKT0+VnIocHIsaC5pdGVtc1tHcl0pPT09VC5UcnVlKT9ULlRydWU6VC5GYWxzZX1mdW5jdGlvbiBlbihzLGgpe2lmKHkoaCkpcmV0dXJuIF8ocyxoKTtpZih1LlRPYmplY3QoaCkpcmV0dXJuIHJyKHMsaCk7aWYodS5UUmVjb3JkKGgpKXJldHVybiBScihzLGgpO3JldHVybiB1LlRVaW50OEFycmF5KGgpP1QuVHJ1ZTpULkZhbHNlfWZ1bmN0aW9uIGZuKHMsaCl7aWYoeShoKSlyZXR1cm4gXyhzLGgpO2lmKHUuVE9iamVjdChoKSlyZXR1cm4gcnIocyxoKTtpZih1LlRSZWNvcmQoaCkpcmV0dXJuIFJyKHMsaCk7aWYodS5UVm9pZChoKSlyZXR1cm4gY24ocyxoKTtyZXR1cm4gdS5UVW5kZWZpbmVkKGgpP1QuVHJ1ZTpULkZhbHNlfWZ1bmN0aW9uIFYwKHMsaCl7cmV0dXJuIGguYW55T2Yuc29tZSgocHIpPT5WcihzLHByKT09PVQuVHJ1ZSk/VC5UcnVlOlQuRmFsc2V9ZnVuY3Rpb24gVG4ocyxoKXtyZXR1cm4gcy5hbnlPZi5ldmVyeSgocHIpPT5WcihwcixoKT09PVQuVHJ1ZSk/VC5UcnVlOlQuRmFsc2V9ZnVuY3Rpb24gTDAocyxoKXtyZXR1cm4gVC5UcnVlfWZ1bmN0aW9uIGFuKHMsaCl7aWYodS5UTmV2ZXIoaCkpcmV0dXJuIG4ocyxoKTtpZih1LlRJbnRlcnNlY3QoaCkpcmV0dXJuIG0ocyxoKTtpZih1LlRVbmlvbihoKSlyZXR1cm4gVjAocyxoKTtpZih1LlRBbnkoaCkpcmV0dXJuIFMocyxoKTtpZih1LlRTdHJpbmcoaCkpcmV0dXJuIG1yKHMsaCk7aWYodS5UTnVtYmVyKGgpKXJldHVybiBRKHMsaCk7aWYodS5USW50ZWdlcihoKSlyZXR1cm4gdXIocyxoKTtpZih1LlRCb29sZWFuKGgpKXJldHVybiBKKHMsaCk7aWYodS5UQXJyYXkoaCkpcmV0dXJuIE4ocyxoKTtpZih1LlRUdXBsZShoKSlyZXR1cm4gQXIocyxoKTtpZih1LlRPYmplY3QoaCkpcmV0dXJuIHJyKHMsaCk7cmV0dXJuIHUuVFVua25vd24oaCk/VC5UcnVlOlQuRmFsc2V9ZnVuY3Rpb24gY24ocyxoKXtpZih1LlRVbmRlZmluZWQocykpcmV0dXJuIFQuVHJ1ZTtyZXR1cm4gdS5UVW5kZWZpbmVkKHMpP1QuVHJ1ZTpULkZhbHNlfWZ1bmN0aW9uIGxuKHMsaCl7aWYodS5USW50ZXJzZWN0KGgpKXJldHVybiBtKHMsaCk7aWYodS5UVW5pb24oaCkpcmV0dXJuIFYwKHMsaCk7aWYodS5UVW5rbm93bihoKSlyZXR1cm4gTDAocyxoKTtpZih1LlRBbnkoaCkpcmV0dXJuIFMocyxoKTtpZih1LlRPYmplY3QoaCkpcmV0dXJuIHJyKHMsaCk7cmV0dXJuIHUuVFZvaWQoaCk/VC5UcnVlOlQuRmFsc2V9ZnVuY3Rpb24gVnIocyxoKXtpZih1LlRUZW1wbGF0ZUxpdGVyYWwocyl8fHUuVFRlbXBsYXRlTGl0ZXJhbChoKSlyZXR1cm4gcChzLGgpO2lmKHUuVE5vdChzKXx8dS5UTm90KGgpKXJldHVybiBsKHMsaCk7aWYodS5UQW55KHMpKXJldHVybiBqKHMsaCk7aWYodS5UQXJyYXkocykpcmV0dXJuIFoocyxoKTtpZih1LlRCaWdJbnQocykpcmV0dXJuIEQocyxoKTtpZih1LlRCb29sZWFuKHMpKXJldHVybiBucihzLGgpO2lmKHUuVEFzeW5jSXRlcmF0b3IocykpcmV0dXJuIFkocyxoKTtpZih1LlRDb25zdHJ1Y3RvcihzKSlyZXR1cm4gY3IocyxoKTtpZih1LlREYXRlKHMpKXJldHVybiBVKHMsaCk7aWYodS5URnVuY3Rpb24ocykpcmV0dXJuICQocyxoKTtpZih1LlRJbnRlZ2VyKHMpKXJldHVybiB0cihzLGgpO2lmKHUuVEludGVyc2VjdChzKSlyZXR1cm4gaHIocyxoKTtpZih1LlRJdGVyYXRvcihzKSlyZXR1cm4gYyhzLGgpO2lmKHUuVExpdGVyYWwocykpcmV0dXJuIGkocyxoKTtpZih1LlROZXZlcihzKSlyZXR1cm4gYShzLGgpO2lmKHUuVE51bGwocykpcmV0dXJuIEIocyxoKTtpZih1LlROdW1iZXIocykpcmV0dXJuIGFyKHMsaCk7aWYodS5UT2JqZWN0KHMpKXJldHVybiBncihzLGgpO2lmKHUuVFJlY29yZChzKSlyZXR1cm4gUHIocyxoKTtpZih1LlRTdHJpbmcocykpcmV0dXJuIGcwKHMsaCk7aWYodS5UU3ltYm9sKHMpKXJldHVybiBJcihzLGgpO2lmKHUuVFR1cGxlKHMpKXJldHVybiB1bihzLGgpO2lmKHUuVFByb21pc2UocykpcmV0dXJuIGpyKHMsaCk7aWYodS5UVWludDhBcnJheShzKSlyZXR1cm4gZW4ocyxoKTtpZih1LlRVbmRlZmluZWQocykpcmV0dXJuIGZuKHMsaCk7aWYodS5UVW5pb24ocykpcmV0dXJuIFRuKHMsaCk7aWYodS5UVW5rbm93bihzKSlyZXR1cm4gYW4ocyxoKTtpZih1LlRWb2lkKHMpKXJldHVybiBsbihzLGgpO3Rocm93IEVycm9yKGBUeXBlRXh0ZW5kczogVW5rbm93biBsZWZ0IHR5cGUgb3BlcmFuZCAnJHtzW3IuS2luZF19J2ApfWZ1bmN0aW9uIGhuKHMsaCl7cmV0dXJuIFZyKHMsaCl9di5FeHRlbmRzPWhufSkoRXx8KHIuVHlwZUV4dGVuZHM9RT17fSkpO3ZhciBSOyhmdW5jdGlvbih2KXtmdW5jdGlvbiBrKGope2NvbnN0IE49T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoaikucmVkdWNlKChZLEQpPT4oey4uLlksW0RdOl8oaltEXSl9KSx7fSksWj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGopLnJlZHVjZSgoWSxEKT0+KHsuLi5ZLFtEXTpfKGpbRF0pfSkse30pO3JldHVybnsuLi5OLC4uLlp9fWZ1bmN0aW9uIHkoail7cmV0dXJuIGoubWFwKChOKT0+XyhOKSl9ZnVuY3Rpb24gXyhqKXtpZihlLklzQXJyYXkoaikpcmV0dXJuIHkoaik7aWYoZS5Jc09iamVjdChqKSlyZXR1cm4gayhqKTtyZXR1cm4gan1mdW5jdGlvbiBTKGosTj17fSl7cmV0dXJuey4uLl8oaiksLi4uTn19di5DbG9uZT1TfSkoUnx8KHIuVHlwZUNsb25lPVI9e30pKTt2YXIgQzsoZnVuY3Rpb24odil7ZnVuY3Rpb24gayhVKXtyZXR1cm4gVS5tYXAoKCQpPT57Y29uc3R7W3IuT3B0aW9uYWxdOnVyLC4uLnRyfT1SLkNsb25lKCQpO3JldHVybiB0cn0pfWZ1bmN0aW9uIHkoVSl7cmV0dXJuIFUuZXZlcnkoKCQpPT51LlRPcHRpb25hbCgkKSl9ZnVuY3Rpb24gXyhVKXtyZXR1cm4gVS5zb21lKCgkKT0+dS5UT3B0aW9uYWwoJCkpfWZ1bmN0aW9uIFMoVSl7cmV0dXJuIHkoVS5hbGxPZik/ci5UeXBlLk9wdGlvbmFsKHIuVHlwZS5JbnRlcnNlY3QoayhVLmFsbE9mKSkpOlV9ZnVuY3Rpb24gaihVKXtyZXR1cm4gXyhVLmFueU9mKT9yLlR5cGUuT3B0aW9uYWwoci5UeXBlLlVuaW9uKGsoVS5hbnlPZikpKTpVfWZ1bmN0aW9uIE4oVSl7aWYoVVtyLktpbmRdPT09IkludGVyc2VjdCIpcmV0dXJuIFMoVSk7aWYoVVtyLktpbmRdPT09IlVuaW9uIilyZXR1cm4gaihVKTtyZXR1cm4gVX1mdW5jdGlvbiBaKFUsJCl7Y29uc3QgdXI9VS5hbGxPZi5yZWR1Y2UoKHRyLG0pPT57Y29uc3QgaHI9bnIobSwkKTtyZXR1cm4gaHJbci5LaW5kXT09PSJOZXZlciI/dHI6Wy4uLnRyLGhyXX0sW10pO3JldHVybiBOKHIuVHlwZS5JbnRlcnNlY3QodXIpKX1mdW5jdGlvbiBZKFUsJCl7Y29uc3QgdXI9VS5hbnlPZi5tYXAoKHRyKT0+bnIodHIsJCkpO3JldHVybiBOKHIuVHlwZS5Vbmlvbih1cikpfWZ1bmN0aW9uIEQoVSwkKXtjb25zdCB1cj1VLnByb3BlcnRpZXNbJF07cmV0dXJuIGUuSXNVbmRlZmluZWQodXIpP3IuVHlwZS5OZXZlcigpOnIuVHlwZS5VbmlvbihbdXJdKX1mdW5jdGlvbiBKKFUsJCl7Y29uc3QgdXI9VS5pdGVtcztpZihlLklzVW5kZWZpbmVkKHVyKSlyZXR1cm4gci5UeXBlLk5ldmVyKCk7Y29uc3QgdHI9dXJbJF07aWYoZS5Jc1VuZGVmaW5lZCh0cikpcmV0dXJuIHIuVHlwZS5OZXZlcigpO3JldHVybiB0cn1mdW5jdGlvbiBucihVLCQpe2lmKFVbci5LaW5kXT09PSJJbnRlcnNlY3QiKXJldHVybiBaKFUsJCk7aWYoVVtyLktpbmRdPT09IlVuaW9uIilyZXR1cm4gWShVLCQpO2lmKFVbci5LaW5kXT09PSJPYmplY3QiKXJldHVybiBEKFUsJCk7aWYoVVtyLktpbmRdPT09IlR1cGxlIilyZXR1cm4gSihVLCQpO3JldHVybiByLlR5cGUuTmV2ZXIoKX1mdW5jdGlvbiBjcihVLCQsdXI9e30pe2NvbnN0IHRyPSQubWFwKChtKT0+bnIoVSxtLnRvU3RyaW5nKCkpKTtyZXR1cm4gTihyLlR5cGUuVW5pb24odHIsdXIpKX12LlJlc29sdmU9Y3J9KShDfHwoci5JbmRleGVkQWNjZXNzb3I9Qz17fSkpO3ZhciB4OyhmdW5jdGlvbih2KXtmdW5jdGlvbiBrKEope2NvbnN0W25yLGNyXT1bSi5zbGljZSgwLDEpLEouc2xpY2UoMSldO3JldHVybmAke25yLnRvTG93ZXJDYXNlKCl9JHtjcn1gfWZ1bmN0aW9uIHkoSil7Y29uc3RbbnIsY3JdPVtKLnNsaWNlKDAsMSksSi5zbGljZSgxKV07cmV0dXJuYCR7bnIudG9VcHBlckNhc2UoKX0ke2NyfWB9ZnVuY3Rpb24gXyhKKXtyZXR1cm4gSi50b1VwcGVyQ2FzZSgpfWZ1bmN0aW9uIFMoSil7cmV0dXJuIEoudG9Mb3dlckNhc2UoKX1mdW5jdGlvbiBqKEosbnIpe2NvbnN0IGNyPUwuUGFyc2VFeGFjdChKLnBhdHRlcm4pO2lmKCF6LkNoZWNrKGNyKSlyZXR1cm57Li4uSixwYXR0ZXJuOk4oSi5wYXR0ZXJuLG5yKX07Y29uc3QgVT1bLi4uQS5HZW5lcmF0ZShjcildLm1hcCgodHIpPT5yLlR5cGUuTGl0ZXJhbCh0cikpLCQ9WihVLG5yKSx1cj1yLlR5cGUuVW5pb24oJCk7cmV0dXJuIHIuVHlwZS5UZW1wbGF0ZUxpdGVyYWwoW3VyXSl9ZnVuY3Rpb24gTihKLG5yKXtyZXR1cm4gdHlwZW9mIEo9PT0ic3RyaW5nIj9ucj09PSJVbmNhcGl0YWxpemUiP2soSik6bnI9PT0iQ2FwaXRhbGl6ZSI/eShKKTpucj09PSJVcHBlcmNhc2UiP18oSik6bnI9PT0iTG93ZXJjYXNlIj9TKEopOko6Si50b1N0cmluZygpfWZ1bmN0aW9uIFooSixucil7aWYoSi5sZW5ndGg9PT0wKXJldHVybltdO2NvbnN0W2NyLC4uLlVdPUo7cmV0dXJuW0QoY3IsbnIpLC4uLlooVSxucildfWZ1bmN0aW9uIFkoSixucil7aWYodS5UVGVtcGxhdGVMaXRlcmFsKEopKXJldHVybiBqKEosbnIpO2lmKHUuVFVuaW9uKEopKXJldHVybiByLlR5cGUuVW5pb24oWihKLmFueU9mLG5yKSk7aWYodS5UTGl0ZXJhbChKKSlyZXR1cm4gci5UeXBlLkxpdGVyYWwoTihKLmNvbnN0LG5yKSk7cmV0dXJuIEp9ZnVuY3Rpb24gRChKLG5yKXtyZXR1cm4gWShKLG5yKX12Lk1hcD1EfSkoeHx8KHIuSW50cmluc2ljPXg9e30pKTt2YXIgbzsoZnVuY3Rpb24odil7ZnVuY3Rpb24gayhOLFope3JldHVybiByLlR5cGUuSW50ZXJzZWN0KE4uYWxsT2YubWFwKChZKT0+UyhZLFopKSx7Li4uTn0pfWZ1bmN0aW9uIHkoTixaKXtyZXR1cm4gci5UeXBlLlVuaW9uKE4uYW55T2YubWFwKChZKT0+UyhZLFopKSx7Li4uTn0pfWZ1bmN0aW9uIF8oTixaKXtyZXR1cm4gWihOKX1mdW5jdGlvbiBTKE4sWil7aWYoTltyLktpbmRdPT09IkludGVyc2VjdCIpcmV0dXJuIGsoTixaKTtpZihOW3IuS2luZF09PT0iVW5pb24iKXJldHVybiB5KE4sWik7aWYoTltyLktpbmRdPT09Ik9iamVjdCIpcmV0dXJuIF8oTixaKTtyZXR1cm4gTn1mdW5jdGlvbiBqKE4sWixZKXtyZXR1cm57Li4uUyhSLkNsb25lKE4pLFopLC4uLll9fXYuTWFwPWp9KShvfHwoci5PYmplY3RNYXA9bz17fSkpO3ZhciBHOyhmdW5jdGlvbih2KXtmdW5jdGlvbiBrKEQpe3JldHVybiBEWzBdPT09Il4iJiZEW0QubGVuZ3RoLTFdPT09IiQiP0Quc2xpY2UoMSxELmxlbmd0aC0xKTpEfWZ1bmN0aW9uIHkoRCxKKXtyZXR1cm4gRC5hbGxPZi5yZWR1Y2UoKG5yLGNyKT0+Wy4uLm5yLC4uLk4oY3IsSildLFtdKX1mdW5jdGlvbiBfKEQsSil7Y29uc3QgbnI9RC5hbnlPZi5tYXAoKGNyKT0+TihjcixKKSk7cmV0dXJuWy4uLm5yLnJlZHVjZSgoY3IsVSk9PlUubWFwKCgkKT0+bnIuZXZlcnkoKHVyKT0+dXIuaW5jbHVkZXMoJCkpP2NyLmFkZCgkKTpjcilbMF0sbmV3IFNldCldfWZ1bmN0aW9uIFMoRCxKKXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoRC5wcm9wZXJ0aWVzKX1mdW5jdGlvbiBqKEQsSil7cmV0dXJuIEouaW5jbHVkZVBhdHRlcm5zP09iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKEQucGF0dGVyblByb3BlcnRpZXMpOltdfWZ1bmN0aW9uIE4oRCxKKXtpZih1LlRJbnRlcnNlY3QoRCkpcmV0dXJuIHkoRCxKKTtpZih1LlRVbmlvbihEKSlyZXR1cm4gXyhELEopO2lmKHUuVE9iamVjdChEKSlyZXR1cm4gUyhELEopO2lmKHUuVFJlY29yZChEKSlyZXR1cm4gaihELEopO3JldHVybltdfWZ1bmN0aW9uIFooRCxKKXtyZXR1cm5bLi4ubmV3IFNldChOKEQsSikpXX12LlJlc29sdmVLZXlzPVo7ZnVuY3Rpb24gWShEKXtyZXR1cm5gXigke1ooRCx7aW5jbHVkZVBhdHRlcm5zOiEwfSkubWFwKChKKT0+YCgke2soSil9KWApLmpvaW4oInwiKX0pJGB9di5SZXNvbHZlUGF0dGVybj1ZfSkoR3x8KHIuS2V5UmVzb2x2ZXI9Rz17fSkpO3ZhciBQOyhmdW5jdGlvbih2KXtmdW5jdGlvbiBrKHkpe2lmKEFycmF5LmlzQXJyYXkoeSkpcmV0dXJuIHk7aWYodS5UVW5pb25MaXRlcmFsKHkpKXJldHVybiB5LmFueU9mLm1hcCgoXyk9Pl8uY29uc3QudG9TdHJpbmcoKSk7aWYodS5UTGl0ZXJhbCh5KSlyZXR1cm5beS5jb25zdF07aWYodS5UVGVtcGxhdGVMaXRlcmFsKHkpKXtjb25zdCBfPUwuUGFyc2VFeGFjdCh5LnBhdHRlcm4pO2lmKCF6LkNoZWNrKF8pKXRocm93IEVycm9yKCJLZXlBcnJheVJlc29sdmVyOiBDYW5ub3QgcmVzb2x2ZSBrZXlzIGZyb20gaW5maW5pdGUgdGVtcGxhdGUgZXhwcmVzc2lvbiIpO3JldHVyblsuLi5BLkdlbmVyYXRlKF8pXX1yZXR1cm5bXX12LlJlc29sdmU9a30pKFB8fChyLktleUFycmF5UmVzb2x2ZXI9UD17fSkpO3ZhciB3OyhmdW5jdGlvbih2KXtmdW5jdGlvbiprKF8pe2ZvcihsZXQgUyBvZiBfLmFueU9mKWlmKFNbci5LaW5kXT09PSJVbmlvbiIpeWllbGQqayhTKTtlbHNlIHlpZWxkIFN9ZnVuY3Rpb24geShfKXtyZXR1cm4gci5UeXBlLlVuaW9uKFsuLi5rKF8pXSx7Li4uX30pfXYuUmVzb2x2ZT15fSkod3x8KHIuVW5pb25SZXNvbHZlcj13PXt9KSk7dmFyIHE7KGZ1bmN0aW9uKHYpe2Z1bmN0aW9uIGsoUyl7cmV0dXJuIFMucmVwbGFjZSgvWy4qKz9eJHt9KCl8W1xdXFxdL2csIlxcJCYiKX1mdW5jdGlvbiB5KFMsail7aWYodS5UVGVtcGxhdGVMaXRlcmFsKFMpKXJldHVybiBTLnBhdHRlcm4uc2xpY2UoMSxTLnBhdHRlcm4ubGVuZ3RoLTEpO2Vsc2UgaWYodS5UVW5pb24oUykpcmV0dXJuYCgke1MuYW55T2YubWFwKChOKT0+eShOLGopKS5qb2luKCJ8Iil9KWA7ZWxzZSBpZih1LlROdW1iZXIoUykpcmV0dXJuYCR7an0ke3IuUGF0dGVybk51bWJlcn1gO2Vsc2UgaWYodS5USW50ZWdlcihTKSlyZXR1cm5gJHtqfSR7ci5QYXR0ZXJuTnVtYmVyfWA7ZWxzZSBpZih1LlRCaWdJbnQoUykpcmV0dXJuYCR7an0ke3IuUGF0dGVybk51bWJlcn1gO2Vsc2UgaWYodS5UU3RyaW5nKFMpKXJldHVybmAke2p9JHtyLlBhdHRlcm5TdHJpbmd9YDtlbHNlIGlmKHUuVExpdGVyYWwoUykpcmV0dXJuYCR7an0ke2soUy5jb25zdC50b1N0cmluZygpKX1gO2Vsc2UgaWYodS5UQm9vbGVhbihTKSlyZXR1cm5gJHtqfSR7ci5QYXR0ZXJuQm9vbGVhbn1gO2Vsc2UgaWYodS5UTmV2ZXIoUykpdGhyb3cgRXJyb3IoIlRlbXBsYXRlTGl0ZXJhbFBhdHRlcm46IFRlbXBsYXRlTGl0ZXJhbCBjYW5ub3Qgb3BlcmF0ZSBvbiB0eXBlcyBvZiBUTmV2ZXIiKTtlbHNlIHRocm93IEVycm9yKGBUZW1wbGF0ZUxpdGVyYWxQYXR0ZXJuOiBVbmV4cGVjdGVkIEtpbmQgJyR7U1tyLktpbmRdfSdgKX1mdW5jdGlvbiBfKFMpe3JldHVybmBeJHtTLm1hcCgoaik9PnkoaiwiIikpLmpvaW4oIiIpfVwkYH12LkNyZWF0ZT1ffSkocXx8KHIuVGVtcGxhdGVMaXRlcmFsUGF0dGVybj1xPXt9KSk7dmFyIEY7KGZ1bmN0aW9uKHYpe2Z1bmN0aW9uIGsoeSl7Y29uc3QgXz1MLlBhcnNlRXhhY3QoeS5wYXR0ZXJuKTtpZighei5DaGVjayhfKSlyZXR1cm4gci5UeXBlLlN0cmluZygpO2NvbnN0IFM9Wy4uLkEuR2VuZXJhdGUoXyldLm1hcCgoaik9PnIuVHlwZS5MaXRlcmFsKGopKTtyZXR1cm4gci5UeXBlLlVuaW9uKFMpfXYuUmVzb2x2ZT1rfSkoRnx8KHIuVGVtcGxhdGVMaXRlcmFsUmVzb2x2ZXI9Rj17fSkpO2NsYXNzIEsgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3Rvcih2KXtzdXBlcih2KX19ci5UZW1wbGF0ZUxpdGVyYWxQYXJzZXJFcnJvcj1LO3ZhciBMOyhmdW5jdGlvbih2KXtmdW5jdGlvbiBrKFUsJCx1cil7cmV0dXJuIFVbJF09PT11ciYmVS5jaGFyQ29kZUF0KCQtMSkhPT05Mn1mdW5jdGlvbiB5KFUsJCl7cmV0dXJuIGsoVSwkLCIoIil9ZnVuY3Rpb24gXyhVLCQpe3JldHVybiBrKFUsJCwiKSIpfWZ1bmN0aW9uIFMoVSwkKXtyZXR1cm4gayhVLCQsInwiKX1mdW5jdGlvbiBqKFUpe2lmKCEoeShVLDApJiZfKFUsVS5sZW5ndGgtMSkpKXJldHVybiExO2xldCAkPTA7Zm9yKGxldCB1cj0wO3VyPFUubGVuZ3RoO3VyKyspe2lmKHkoVSx1cikpJCs9MTtpZihfKFUsdXIpKSQtPTE7aWYoJD09PTAmJnVyIT09VS5sZW5ndGgtMSlyZXR1cm4hMX1yZXR1cm4hMH1mdW5jdGlvbiBOKFUpe3JldHVybiBVLnNsaWNlKDEsVS5sZW5ndGgtMSl9ZnVuY3Rpb24gWihVKXtsZXQgJD0wO2ZvcihsZXQgdXI9MDt1cjxVLmxlbmd0aDt1cisrKXtpZih5KFUsdXIpKSQrPTE7aWYoXyhVLHVyKSkkLT0xO2lmKFMoVSx1cikmJiQ9PT0wKXJldHVybiEwfXJldHVybiExfWZ1bmN0aW9uIFkoVSl7Zm9yKGxldCAkPTA7JDxVLmxlbmd0aDskKyspaWYoeShVLCQpKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIEQoVSl7bGV0WyQsdXJdPVswLDBdO2NvbnN0IHRyPVtdO2ZvcihsZXQgaHI9MDtocjxVLmxlbmd0aDtocisrKXtpZih5KFUsaHIpKSQrPTE7aWYoXyhVLGhyKSkkLT0xO2lmKFMoVSxocikmJiQ9PT0wKXtjb25zdCBjPVUuc2xpY2UodXIsaHIpO2lmKGMubGVuZ3RoPjApdHIucHVzaChucihjKSk7dXI9aHIrMX19Y29uc3QgbT1VLnNsaWNlKHVyKTtpZihtLmxlbmd0aD4wKXRyLnB1c2gobnIobSkpO2lmKHRyLmxlbmd0aD09PTApcmV0dXJue3R5cGU6ImNvbnN0Iixjb25zdDoiIn07aWYodHIubGVuZ3RoPT09MSlyZXR1cm4gdHJbMF07cmV0dXJue3R5cGU6Im9yIixleHByOnRyfX1mdW5jdGlvbiBKKFUpe2Z1bmN0aW9uICQobSxocil7aWYoIXkobSxocikpdGhyb3cgbmV3IEsoIlRlbXBsYXRlTGl0ZXJhbFBhcnNlcjogSW5kZXggbXVzdCBwb2ludCB0byBvcGVuIHBhcmVucyIpO2xldCBjPTA7Zm9yKGxldCBpPWhyO2k8bS5sZW5ndGg7aSsrKXtpZih5KG0saSkpYys9MTtpZihfKG0saSkpYy09MTtpZihjPT09MClyZXR1cm5baHIsaV19dGhyb3cgbmV3IEsoIlRlbXBsYXRlTGl0ZXJhbFBhcnNlcjogVW5jbG9zZWQgZ3JvdXAgcGFyZW5zIGluIGV4cHJlc3Npb24iKX1mdW5jdGlvbiB1cihtLGhyKXtmb3IobGV0IGM9aHI7YzxtLmxlbmd0aDtjKyspaWYoeShtLGMpKXJldHVybltocixjXTtyZXR1cm5baHIsbS5sZW5ndGhdfWNvbnN0IHRyPVtdO2ZvcihsZXQgbT0wO208VS5sZW5ndGg7bSsrKWlmKHkoVSxtKSl7Y29uc3RbaHIsY109JChVLG0pLGk9VS5zbGljZShocixjKzEpO3RyLnB1c2gobnIoaSkpLG09Y31lbHNle2NvbnN0W2hyLGNdPXVyKFUsbSksaT1VLnNsaWNlKGhyLGMpO2lmKGkubGVuZ3RoPjApdHIucHVzaChucihpKSk7bT1jLTF9aWYodHIubGVuZ3RoPT09MClyZXR1cm57dHlwZToiY29uc3QiLGNvbnN0OiIifTtpZih0ci5sZW5ndGg9PT0xKXJldHVybiB0clswXTtyZXR1cm57dHlwZToiYW5kIixleHByOnRyfX1mdW5jdGlvbiBucihVKXtpZihqKFUpKXJldHVybiBucihOKFUpKTtpZihaKFUpKXJldHVybiBEKFUpO2lmKFkoVSkpcmV0dXJuIEooVSk7cmV0dXJue3R5cGU6ImNvbnN0Iixjb25zdDpVfX12LlBhcnNlPW5yO2Z1bmN0aW9uIGNyKFUpe3JldHVybiBucihVLnNsaWNlKDEsVS5sZW5ndGgtMSkpfXYuUGFyc2VFeGFjdD1jcn0pKEx8fChyLlRlbXBsYXRlTGl0ZXJhbFBhcnNlcj1MPXt9KSk7dmFyIHo7KGZ1bmN0aW9uKHYpe2Z1bmN0aW9uIGsoail7cmV0dXJuIGoudHlwZT09PSJvciImJmouZXhwci5sZW5ndGg9PT0yJiZqLmV4cHJbMF0udHlwZT09PSJjb25zdCImJmouZXhwclswXS5jb25zdD09PSIwIiYmai5leHByWzFdLnR5cGU9PT0iY29uc3QiJiZqLmV4cHJbMV0uY29uc3Q9PT0iWzEtOV1bMC05XSoifWZ1bmN0aW9uIHkoail7cmV0dXJuIGoudHlwZT09PSJvciImJmouZXhwci5sZW5ndGg9PT0yJiZqLmV4cHJbMF0udHlwZT09PSJjb25zdCImJmouZXhwclswXS5jb25zdD09PSJ0cnVlIiYmai5leHByWzFdLnR5cGU9PT0iY29uc3QiJiZqLmV4cHJbMV0uY29uc3Q9PT0iZmFsc2UifWZ1bmN0aW9uIF8oail7cmV0dXJuIGoudHlwZT09PSJjb25zdCImJmouY29uc3Q9PT0iLioifWZ1bmN0aW9uIFMoail7aWYoeShqKSlyZXR1cm4hMDtpZihrKGopfHxfKGopKXJldHVybiExO2lmKGoudHlwZT09PSJhbmQiKXJldHVybiBqLmV4cHIuZXZlcnkoKE4pPT5TKE4pKTtpZihqLnR5cGU9PT0ib3IiKXJldHVybiBqLmV4cHIuZXZlcnkoKE4pPT5TKE4pKTtpZihqLnR5cGU9PT0iY29uc3QiKXJldHVybiEwO3Rocm93IEVycm9yKCJUZW1wbGF0ZUxpdGVyYWxGaW5pdGU6IFVua25vd24gZXhwcmVzc2lvbiB0eXBlIil9di5DaGVjaz1TfSkoenx8KHIuVGVtcGxhdGVMaXRlcmFsRmluaXRlPXo9e30pKTt2YXIgQTsoZnVuY3Rpb24odil7ZnVuY3Rpb24qayhOKXtpZihOLmxlbmd0aD09PTEpcmV0dXJuIHlpZWxkKk5bMF07Zm9yKGxldCBaIG9mIE5bMF0pZm9yKGxldCBZIG9mIGsoTi5zbGljZSgxKSkpeWllbGRgJHtafSR7WX1gfWZ1bmN0aW9uKnkoTil7cmV0dXJuIHlpZWxkKmsoTi5leHByLm1hcCgoWik9PlsuLi5qKFopXSkpfWZ1bmN0aW9uKl8oTil7Zm9yKGxldCBaIG9mIE4uZXhwcil5aWVsZCpqKFopfWZ1bmN0aW9uKlMoTil7cmV0dXJuIHlpZWxkIE4uY29uc3R9ZnVuY3Rpb24qaihOKXtpZihOLnR5cGU9PT0iYW5kIilyZXR1cm4geWllbGQqeShOKTtpZihOLnR5cGU9PT0ib3IiKXJldHVybiB5aWVsZCpfKE4pO2lmKE4udHlwZT09PSJjb25zdCIpcmV0dXJuIHlpZWxkKlMoTik7dGhyb3cgRXJyb3IoIlRlbXBsYXRlTGl0ZXJhbEdlbmVyYXRvcjogVW5rbm93biBleHByZXNzaW9uIil9di5HZW5lcmF0ZT1qfSkoQXx8KHIuVGVtcGxhdGVMaXRlcmFsR2VuZXJhdG9yPUE9e30pKTt2YXIgZXI7KGZ1bmN0aW9uKHYpe2Z1bmN0aW9uKmsoail7Y29uc3QgTj1qLnRyaW0oKS5yZXBsYWNlKC8ifCcvZywiIik7aWYoTj09PSJib29sZWFuIilyZXR1cm4geWllbGQgci5UeXBlLkJvb2xlYW4oKTtpZihOPT09Im51bWJlciIpcmV0dXJuIHlpZWxkIHIuVHlwZS5OdW1iZXIoKTtpZihOPT09ImJpZ2ludCIpcmV0dXJuIHlpZWxkIHIuVHlwZS5CaWdJbnQoKTtpZihOPT09InN0cmluZyIpcmV0dXJuIHlpZWxkIHIuVHlwZS5TdHJpbmcoKTtjb25zdCBaPU4uc3BsaXQoInwiKS5tYXAoKFkpPT5yLlR5cGUuTGl0ZXJhbChZLnRyaW0oKSkpO3JldHVybiB5aWVsZCBaLmxlbmd0aD09PTA/ci5UeXBlLk5ldmVyKCk6Wi5sZW5ndGg9PT0xP1pbMF06ci5UeXBlLlVuaW9uKFopfWZ1bmN0aW9uKnkoail7aWYoalsxXSE9PSJ7Iil7Y29uc3QgTj1yLlR5cGUuTGl0ZXJhbCgiJCIpLFo9XyhqLnNsaWNlKDEpKTtyZXR1cm4geWllbGQqW04sLi4uWl19Zm9yKGxldCBOPTI7TjxqLmxlbmd0aDtOKyspaWYoaltOXT09PSJ9Iil7Y29uc3QgWj1rKGouc2xpY2UoMixOKSksWT1fKGouc2xpY2UoTisxKSk7cmV0dXJuIHlpZWxkKlsuLi5aLC4uLlldfXlpZWxkIHIuVHlwZS5MaXRlcmFsKGopfWZ1bmN0aW9uKl8oail7Zm9yKGxldCBOPTA7TjxqLmxlbmd0aDtOKyspaWYoaltOXT09PSIkIil7Y29uc3QgWj1yLlR5cGUuTGl0ZXJhbChqLnNsaWNlKDAsTikpLFk9eShqLnNsaWNlKE4pKTtyZXR1cm4geWllbGQqW1osLi4uWV19eWllbGQgci5UeXBlLkxpdGVyYWwoail9ZnVuY3Rpb24gUyhqKXtyZXR1cm5bLi4uXyhqKV19di5QYXJzZT1TfSkoZXJ8fChyLlRlbXBsYXRlTGl0ZXJhbERzbFBhcnNlcj1lcj17fSkpO3ZhciBPcj0wO2NsYXNzIFh7Q3JlYXRlKHYpe3JldHVybiB2fURpc2NhcmQodixrKXtjb25zdHtba106eSwuLi5ffT12O3JldHVybiBffVN0cmljdCh2KXtyZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh2KSl9fXIuVHlwZUJ1aWxkZXI9WDtjbGFzcyBIIGV4dGVuZHMgWHtSZWFkb25seU9wdGlvbmFsKHYpe3JldHVybiB0aGlzLlJlYWRvbmx5KHRoaXMuT3B0aW9uYWwodikpfVJlYWRvbmx5KHYpe3JldHVybnsuLi5SLkNsb25lKHYpLFtyLlJlYWRvbmx5XToiUmVhZG9ubHkifX1PcHRpb25hbCh2KXtyZXR1cm57Li4uUi5DbG9uZSh2KSxbci5PcHRpb25hbF06Ik9wdGlvbmFsIn19QW55KHY9e30pe3JldHVybiB0aGlzLkNyZWF0ZSh7Li4udixbci5LaW5kXToiQW55In0pfUFycmF5KHYsaz17fSl7cmV0dXJuIHRoaXMuQ3JlYXRlKHsuLi5rLFtyLktpbmRdOiJBcnJheSIsdHlwZToiYXJyYXkiLGl0ZW1zOlIuQ2xvbmUodil9KX1Cb29sZWFuKHY9e30pe3JldHVybiB0aGlzLkNyZWF0ZSh7Li4udixbci5LaW5kXToiQm9vbGVhbiIsdHlwZToiYm9vbGVhbiJ9KX1DYXBpdGFsaXplKHYsaz17fSl7cmV0dXJuey4uLnguTWFwKFIuQ2xvbmUodiksIkNhcGl0YWxpemUiKSwuLi5rfX1Db21wb3NpdGUodixrKXtjb25zdCB5PXIuVHlwZS5JbnRlcnNlY3Qodix7fSksXz1HLlJlc29sdmVLZXlzKHkse2luY2x1ZGVQYXR0ZXJuczohMX0pLnJlZHVjZSgoUyxqKT0+KHsuLi5TLFtqXTpyLlR5cGUuSW5kZXgoeSxbal0pfSkse30pO3JldHVybiByLlR5cGUuT2JqZWN0KF8sayl9RW51bSh2LGs9e30pe2NvbnN0IHk9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModikuZmlsdGVyKChfKT0+aXNOYU4oXykpLm1hcCgoXyk9PnZbX10pLm1hcCgoXyk9PmUuSXNTdHJpbmcoXyk/e1tyLktpbmRdOiJMaXRlcmFsIix0eXBlOiJzdHJpbmciLGNvbnN0Ol99Ontbci5LaW5kXToiTGl0ZXJhbCIsdHlwZToibnVtYmVyIixjb25zdDpffSk7cmV0dXJuIHRoaXMuQ3JlYXRlKHsuLi5rLFtyLktpbmRdOiJVbmlvbiIsYW55T2Y6eX0pfUV4dGVuZHModixrLHksXyxTPXt9KXtzd2l0Y2goRS5FeHRlbmRzKHYsaykpe2Nhc2UgVC5VbmlvbjpyZXR1cm4gdGhpcy5VbmlvbihbUi5DbG9uZSh5LFMpLFIuQ2xvbmUoXyxTKV0pO2Nhc2UgVC5UcnVlOnJldHVybiBSLkNsb25lKHksUyk7Y2FzZSBULkZhbHNlOnJldHVybiBSLkNsb25lKF8sUyl9fUV4Y2x1ZGUodixrLHk9e30pe2lmKHUuVFRlbXBsYXRlTGl0ZXJhbCh2KSlyZXR1cm4gdGhpcy5FeGNsdWRlKEYuUmVzb2x2ZSh2KSxrLHkpO2lmKHUuVFRlbXBsYXRlTGl0ZXJhbChrKSlyZXR1cm4gdGhpcy5FeGNsdWRlKHYsRi5SZXNvbHZlKGspLHkpO2lmKHUuVFVuaW9uKHYpKXtjb25zdCBfPXYuYW55T2YuZmlsdGVyKChTKT0+RS5FeHRlbmRzKFMsayk9PT1ULkZhbHNlKTtyZXR1cm4gXy5sZW5ndGg9PT0xP1IuQ2xvbmUoX1swXSx5KTp0aGlzLlVuaW9uKF8seSl9ZWxzZSByZXR1cm4gRS5FeHRlbmRzKHYsaykhPT1ULkZhbHNlP3RoaXMuTmV2ZXIoeSk6Ui5DbG9uZSh2LHkpfUV4dHJhY3QodixrLHk9e30pe2lmKHUuVFRlbXBsYXRlTGl0ZXJhbCh2KSlyZXR1cm4gdGhpcy5FeHRyYWN0KEYuUmVzb2x2ZSh2KSxrLHkpO2lmKHUuVFRlbXBsYXRlTGl0ZXJhbChrKSlyZXR1cm4gdGhpcy5FeHRyYWN0KHYsRi5SZXNvbHZlKGspLHkpO2lmKHUuVFVuaW9uKHYpKXtjb25zdCBfPXYuYW55T2YuZmlsdGVyKChTKT0+RS5FeHRlbmRzKFMsaykhPT1ULkZhbHNlKTtyZXR1cm4gXy5sZW5ndGg9PT0xP1IuQ2xvbmUoX1swXSx5KTp0aGlzLlVuaW9uKF8seSl9ZWxzZSByZXR1cm4gRS5FeHRlbmRzKHYsaykhPT1ULkZhbHNlP1IuQ2xvbmUodix5KTp0aGlzLk5ldmVyKHkpfUluZGV4KHYsayx5PXt9KXtpZih1LlRBcnJheSh2KSYmdS5UTnVtYmVyKGspKXJldHVybiBSLkNsb25lKHYuaXRlbXMseSk7ZWxzZSBpZih1LlRUdXBsZSh2KSYmdS5UTnVtYmVyKGspKXtjb25zdCBfPShlLklzVW5kZWZpbmVkKHYuaXRlbXMpP1tdOnYuaXRlbXMpLm1hcCgoUyk9PlIuQ2xvbmUoUykpO3JldHVybiB0aGlzLlVuaW9uKF8seSl9ZWxzZXtjb25zdCBfPVAuUmVzb2x2ZShrKSxTPVIuQ2xvbmUodik7cmV0dXJuIEMuUmVzb2x2ZShTLF8seSl9fUludGVnZXIodj17fSl7cmV0dXJuIHRoaXMuQ3JlYXRlKHsuLi52LFtyLktpbmRdOiJJbnRlZ2VyIix0eXBlOiJpbnRlZ2VyIn0pfUludGVyc2VjdCh2LGs9e30pe2lmKHYubGVuZ3RoPT09MClyZXR1cm4gci5UeXBlLk5ldmVyKCk7aWYodi5sZW5ndGg9PT0xKXJldHVybiBSLkNsb25lKHZbMF0sayk7Y29uc3QgeT12LmV2ZXJ5KChqKT0+dS5UT2JqZWN0KGopKSxfPXYubWFwKChqKT0+Ui5DbG9uZShqKSksUz11LlRTY2hlbWEoay51bmV2YWx1YXRlZFByb3BlcnRpZXMpP3t1bmV2YWx1YXRlZFByb3BlcnRpZXM6Ui5DbG9uZShrLnVuZXZhbHVhdGVkUHJvcGVydGllcyl9Ont9O2lmKGsudW5ldmFsdWF0ZWRQcm9wZXJ0aWVzPT09ITF8fHUuVFNjaGVtYShrLnVuZXZhbHVhdGVkUHJvcGVydGllcyl8fHkpcmV0dXJuIHRoaXMuQ3JlYXRlKHsuLi5rLC4uLlMsW3IuS2luZF06IkludGVyc2VjdCIsdHlwZToib2JqZWN0IixhbGxPZjpffSk7ZWxzZSByZXR1cm4gdGhpcy5DcmVhdGUoey4uLmssLi4uUyxbci5LaW5kXToiSW50ZXJzZWN0IixhbGxPZjpffSl9S2V5T2YodixrPXt9KXtpZih1LlRSZWNvcmQodikpe2NvbnN0IHk9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModi5wYXR0ZXJuUHJvcGVydGllcylbMF07aWYoeT09PXIuUGF0dGVybk51bWJlckV4YWN0KXJldHVybiB0aGlzLk51bWJlcihrKTtpZih5PT09ci5QYXR0ZXJuU3RyaW5nRXhhY3QpcmV0dXJuIHRoaXMuU3RyaW5nKGspO3Rocm93IEVycm9yKCJTdGFuZGFyZFR5cGVCdWlsZGVyOiBVbmFibGUgdG8gcmVzb2x2ZSBrZXkgdHlwZSBmcm9tIFJlY29yZCBrZXkgcGF0dGVybiIpfWVsc2UgaWYodS5UVHVwbGUodikpe2NvbnN0IHk9KGUuSXNVbmRlZmluZWQodi5pdGVtcyk/W106di5pdGVtcykubWFwKChfLFMpPT5yLlR5cGUuTGl0ZXJhbChTKSk7cmV0dXJuIHRoaXMuVW5pb24oeSxrKX1lbHNlIGlmKHUuVEFycmF5KHYpKXJldHVybiB0aGlzLk51bWJlcihrKTtlbHNle2NvbnN0IHk9Ry5SZXNvbHZlS2V5cyh2LHtpbmNsdWRlUGF0dGVybnM6ITF9KTtpZih5Lmxlbmd0aD09PTApcmV0dXJuIHRoaXMuTmV2ZXIoayk7Y29uc3QgXz15Lm1hcCgoUyk9PnRoaXMuTGl0ZXJhbChTKSk7cmV0dXJuIHRoaXMuVW5pb24oXyxrKX19TGl0ZXJhbCh2LGs9e30pe3JldHVybiB0aGlzLkNyZWF0ZSh7Li4uayxbci5LaW5kXToiTGl0ZXJhbCIsY29uc3Q6dix0eXBlOnR5cGVvZiB2fSl9TG93ZXJjYXNlKHYsaz17fSl7cmV0dXJuey4uLnguTWFwKFIuQ2xvbmUodiksIkxvd2VyY2FzZSIpLC4uLmt9fU5ldmVyKHY9e30pe3JldHVybiB0aGlzLkNyZWF0ZSh7Li4udixbci5LaW5kXToiTmV2ZXIiLG5vdDp7fX0pfU5vdCh2LGspe3JldHVybiB0aGlzLkNyZWF0ZSh7Li4uayxbci5LaW5kXToiTm90Iixub3Q6Ui5DbG9uZSh2KX0pfU51bGwodj17fSl7cmV0dXJuIHRoaXMuQ3JlYXRlKHsuLi52LFtyLktpbmRdOiJOdWxsIix0eXBlOiJudWxsIn0pfU51bWJlcih2PXt9KXtyZXR1cm4gdGhpcy5DcmVhdGUoey4uLnYsW3IuS2luZF06Ik51bWJlciIsdHlwZToibnVtYmVyIn0pfU9iamVjdCh2LGs9e30pe2NvbnN0IHk9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModiksXz15LmZpbHRlcigoWik9PnUuVE9wdGlvbmFsKHZbWl0pKSxTPXkuZmlsdGVyKChaKT0+IV8uaW5jbHVkZXMoWikpLGo9dS5UU2NoZW1hKGsuYWRkaXRpb25hbFByb3BlcnRpZXMpP3thZGRpdGlvbmFsUHJvcGVydGllczpSLkNsb25lKGsuYWRkaXRpb25hbFByb3BlcnRpZXMpfTp7fSxOPXkucmVkdWNlKChaLFkpPT4oey4uLlosW1ldOlIuQ2xvbmUodltZXSl9KSx7fSk7aWYoUy5sZW5ndGg+MClyZXR1cm4gdGhpcy5DcmVhdGUoey4uLmssLi4uaixbci5LaW5kXToiT2JqZWN0Iix0eXBlOiJvYmplY3QiLHByb3BlcnRpZXM6TixyZXF1aXJlZDpTfSk7ZWxzZSByZXR1cm4gdGhpcy5DcmVhdGUoey4uLmssLi4uaixbci5LaW5kXToiT2JqZWN0Iix0eXBlOiJvYmplY3QiLHByb3BlcnRpZXM6Tn0pfU9taXQodixrLHk9e30pe2NvbnN0IF89UC5SZXNvbHZlKGspO3JldHVybiBvLk1hcChSLkNsb25lKHYpLChTKT0+e2lmKGUuSXNBcnJheShTLnJlcXVpcmVkKSl7aWYoUy5yZXF1aXJlZD1TLnJlcXVpcmVkLmZpbHRlcigoaik9PiFfLmluY2x1ZGVzKGopKSxTLnJlcXVpcmVkLmxlbmd0aD09PTApZGVsZXRlIFMucmVxdWlyZWR9Zm9yKGxldCBqIG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKFMucHJvcGVydGllcykpaWYoXy5pbmNsdWRlcyhqKSlkZWxldGUgUy5wcm9wZXJ0aWVzW2pdO3JldHVybiB0aGlzLkNyZWF0ZShTKX0seSl9UGFydGlhbCh2LGs9e30pe3JldHVybiBvLk1hcCh2LCh5KT0+e2NvbnN0IF89T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoeS5wcm9wZXJ0aWVzKS5yZWR1Y2UoKFMsaik9PntyZXR1cm57Li4uUyxbal06dGhpcy5PcHRpb25hbCh5LnByb3BlcnRpZXNbal0pfX0se30pO3JldHVybiB0aGlzLk9iamVjdChfLHRoaXMuRGlzY2FyZCh5LCJyZXF1aXJlZCIpKX0sayl9UGljayh2LGsseT17fSl7Y29uc3QgXz1QLlJlc29sdmUoayk7cmV0dXJuIG8uTWFwKFIuQ2xvbmUodiksKFMpPT57aWYoZS5Jc0FycmF5KFMucmVxdWlyZWQpKXtpZihTLnJlcXVpcmVkPVMucmVxdWlyZWQuZmlsdGVyKChqKT0+Xy5pbmNsdWRlcyhqKSksUy5yZXF1aXJlZC5sZW5ndGg9PT0wKWRlbGV0ZSBTLnJlcXVpcmVkfWZvcihsZXQgaiBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhTLnByb3BlcnRpZXMpKWlmKCFfLmluY2x1ZGVzKGopKWRlbGV0ZSBTLnByb3BlcnRpZXNbal07cmV0dXJuIHRoaXMuQ3JlYXRlKFMpfSx5KX1SZWNvcmQodixrLHk9e30pe2lmKHUuVFRlbXBsYXRlTGl0ZXJhbCh2KSl7Y29uc3QgXz1MLlBhcnNlRXhhY3Qodi5wYXR0ZXJuKTtyZXR1cm4gei5DaGVjayhfKT90aGlzLk9iamVjdChbLi4uQS5HZW5lcmF0ZShfKV0ucmVkdWNlKChTLGopPT4oey4uLlMsW2pdOlIuQ2xvbmUoayl9KSx7fSkseSk6dGhpcy5DcmVhdGUoey4uLnksW3IuS2luZF06IlJlY29yZCIsdHlwZToib2JqZWN0IixwYXR0ZXJuUHJvcGVydGllczp7W3YucGF0dGVybl06Ui5DbG9uZShrKX19KX1lbHNlIGlmKHUuVFVuaW9uKHYpKXtjb25zdCBfPXcuUmVzb2x2ZSh2KTtpZih1LlRVbmlvbkxpdGVyYWwoXykpe2NvbnN0IFM9Xy5hbnlPZi5yZWR1Y2UoKGosTik9Pih7Li4uaixbTi5jb25zdF06Ui5DbG9uZShrKX0pLHt9KTtyZXR1cm4gdGhpcy5PYmplY3QoUyx7Li4ueSxbci5IaW50XToiUmVjb3JkIn0pfWVsc2UgdGhyb3cgRXJyb3IoIlN0YW5kYXJkVHlwZUJ1aWxkZXI6IFJlY29yZCBrZXkgb2YgdHlwZSB1bmlvbiBjb250YWlucyBub24tbGl0ZXJhbCB0eXBlcyIpfWVsc2UgaWYodS5UTGl0ZXJhbCh2KSlpZihlLklzU3RyaW5nKHYuY29uc3QpfHxlLklzTnVtYmVyKHYuY29uc3QpKXJldHVybiB0aGlzLk9iamVjdCh7W3YuY29uc3RdOlIuQ2xvbmUoayl9LHkpO2Vsc2UgdGhyb3cgRXJyb3IoIlN0YW5kYXJkVHlwZUJ1aWxkZXI6IFJlY29yZCBrZXkgb2YgdHlwZSBsaXRlcmFsIGlzIG5vdCBvZiB0eXBlIHN0cmluZyBvciBudW1iZXIiKTtlbHNlIGlmKHUuVEludGVnZXIodil8fHUuVE51bWJlcih2KSlyZXR1cm4gdGhpcy5DcmVhdGUoey4uLnksW3IuS2luZF06IlJlY29yZCIsdHlwZToib2JqZWN0IixwYXR0ZXJuUHJvcGVydGllczp7W3IuUGF0dGVybk51bWJlckV4YWN0XTpSLkNsb25lKGspfX0pO2Vsc2UgaWYodS5UU3RyaW5nKHYpKXtjb25zdCBfPWUuSXNVbmRlZmluZWQodi5wYXR0ZXJuKT9yLlBhdHRlcm5TdHJpbmdFeGFjdDp2LnBhdHRlcm47cmV0dXJuIHRoaXMuQ3JlYXRlKHsuLi55LFtyLktpbmRdOiJSZWNvcmQiLHR5cGU6Im9iamVjdCIscGF0dGVyblByb3BlcnRpZXM6e1tfXTpSLkNsb25lKGspfX0pfWVsc2UgdGhyb3cgRXJyb3IoIlN0YW5kYXJkVHlwZUJ1aWxkZXI6IFJlY29yZCBrZXkgaXMgYW4gaW52YWxpZCB0eXBlIil9UmVjdXJzaXZlKHYsaz17fSl7aWYoZS5Jc1VuZGVmaW5lZChrLiRpZCkpay4kaWQ9YFQke09yKyt9YDtjb25zdCB5PXYoe1tyLktpbmRdOiJUaGlzIiwkcmVmOmAke2suJGlkfWB9KTtyZXR1cm4geS4kaWQ9ay4kaWQsdGhpcy5DcmVhdGUoey4uLmssW3IuSGludF06IlJlY3Vyc2l2ZSIsLi4ueX0pfVJlZih2LGs9e30pe2lmKGUuSXNTdHJpbmcodikpcmV0dXJuIHRoaXMuQ3JlYXRlKHsuLi5rLFtyLktpbmRdOiJSZWYiLCRyZWY6dn0pO2lmKGUuSXNVbmRlZmluZWQodi4kaWQpKXRocm93IEVycm9yKCJTdGFuZGFyZFR5cGVCdWlsZGVyLlJlZjogVGFyZ2V0IHR5cGUgbXVzdCBzcGVjaWZ5IGFuICRpZCIpO3JldHVybiB0aGlzLkNyZWF0ZSh7Li4uayxbci5LaW5kXToiUmVmIiwkcmVmOnYuJGlkfSl9UmVxdWlyZWQodixrPXt9KXtyZXR1cm4gby5NYXAodiwoeSk9Pntjb25zdCBfPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHkucHJvcGVydGllcykucmVkdWNlKChTLGopPT57cmV0dXJuey4uLlMsW2pdOnRoaXMuRGlzY2FyZCh5LnByb3BlcnRpZXNbal0sci5PcHRpb25hbCl9fSx7fSk7cmV0dXJuIHRoaXMuT2JqZWN0KF8seSl9LGspfVJlc3Qodil7aWYodS5UVHVwbGUodikpe2lmKGUuSXNVbmRlZmluZWQodi5pdGVtcykpcmV0dXJuW107cmV0dXJuIHYuaXRlbXMubWFwKChrKT0+Ui5DbG9uZShrKSl9ZWxzZSByZXR1cm5bUi5DbG9uZSh2KV19U3RyaW5nKHY9e30pe3JldHVybiB0aGlzLkNyZWF0ZSh7Li4udixbci5LaW5kXToiU3RyaW5nIix0eXBlOiJzdHJpbmcifSl9VGVtcGxhdGVMaXRlcmFsKHYsaz17fSl7Y29uc3QgeT1lLklzU3RyaW5nKHYpP3EuQ3JlYXRlKGVyLlBhcnNlKHYpKTpxLkNyZWF0ZSh2KTtyZXR1cm4gdGhpcy5DcmVhdGUoey4uLmssW3IuS2luZF06IlRlbXBsYXRlTGl0ZXJhbCIsdHlwZToic3RyaW5nIixwYXR0ZXJuOnl9KX1UdXBsZSh2LGs9e30pe2NvbnN0W3ksXyxTXT1bITEsdi5sZW5ndGgsdi5sZW5ndGhdLGo9di5tYXAoKFopPT5SLkNsb25lKFopKSxOPXYubGVuZ3RoPjA/ey4uLmssW3IuS2luZF06IlR1cGxlIix0eXBlOiJhcnJheSIsaXRlbXM6aixhZGRpdGlvbmFsSXRlbXM6eSxtaW5JdGVtczpfLG1heEl0ZW1zOlN9OnsuLi5rLFtyLktpbmRdOiJUdXBsZSIsdHlwZToiYXJyYXkiLG1pbkl0ZW1zOl8sbWF4SXRlbXM6U307cmV0dXJuIHRoaXMuQ3JlYXRlKE4pfVVuY2FwaXRhbGl6ZSh2LGs9e30pe3JldHVybnsuLi54Lk1hcChSLkNsb25lKHYpLCJVbmNhcGl0YWxpemUiKSwuLi5rfX1Vbmlvbih2LGs9e30pe2lmKHUuVFRlbXBsYXRlTGl0ZXJhbCh2KSlyZXR1cm4gRi5SZXNvbHZlKHYpO2Vsc2V7Y29uc3QgeT12O2lmKHkubGVuZ3RoPT09MClyZXR1cm4gdGhpcy5OZXZlcihrKTtpZih5Lmxlbmd0aD09PTEpcmV0dXJuIHRoaXMuQ3JlYXRlKFIuQ2xvbmUoeVswXSxrKSk7Y29uc3QgXz15Lm1hcCgoUyk9PlIuQ2xvbmUoUykpO3JldHVybiB0aGlzLkNyZWF0ZSh7Li4uayxbci5LaW5kXToiVW5pb24iLGFueU9mOl99KX19VW5rbm93bih2PXt9KXtyZXR1cm4gdGhpcy5DcmVhdGUoey4uLnYsW3IuS2luZF06IlVua25vd24ifSl9VW5zYWZlKHY9e30pe3JldHVybiB0aGlzLkNyZWF0ZSh7Li4udixbci5LaW5kXTp2W3IuS2luZF18fCJVbnNhZmUifSl9VXBwZXJjYXNlKHYsaz17fSl7cmV0dXJuey4uLnguTWFwKFIuQ2xvbmUodiksIlVwcGVyY2FzZSIpLC4uLmt9fX1yLlN0YW5kYXJkVHlwZUJ1aWxkZXI9SDtjbGFzcyBzciBleHRlbmRzIEh7QXN5bmNJdGVyYXRvcih2LGs9e30pe3JldHVybiB0aGlzLkNyZWF0ZSh7Li4uayxbci5LaW5kXToiQXN5bmNJdGVyYXRvciIsdHlwZToiQXN5bmNJdGVyYXRvciIsaXRlbXM6Ui5DbG9uZSh2KX0pfUF3YWl0ZWQodixrPXt9KXtjb25zdCB5PShfKT0+e2lmKF8ubGVuZ3RoPT09MClyZXR1cm4gXztjb25zdFtTLC4uLmpdPV87cmV0dXJuW3RoaXMuQXdhaXRlZChTKSwuLi55KGopXX07cmV0dXJuIHUuVEludGVyc2VjdCh2KT9yLlR5cGUuSW50ZXJzZWN0KHkodi5hbGxPZikpOnUuVFVuaW9uKHYpP3IuVHlwZS5Vbmlvbih5KHYuYW55T2YpKTp1LlRQcm9taXNlKHYpP3RoaXMuQXdhaXRlZCh2Lml0ZW0pOlIuQ2xvbmUodixrKX1CaWdJbnQodj17fSl7cmV0dXJuIHRoaXMuQ3JlYXRlKHsuLi52LFtyLktpbmRdOiJCaWdJbnQiLHR5cGU6ImJpZ2ludCJ9KX1Db25zdHJ1Y3RvclBhcmFtZXRlcnModixrPXt9KXtyZXR1cm4gdGhpcy5UdXBsZShbLi4udi5wYXJhbWV0ZXJzXSx7Li4ua30pfUNvbnN0cnVjdG9yKHYsayx5KXtjb25zdCBfPVIuQ2xvbmUoayksUz12Lm1hcCgoaik9PlIuQ2xvbmUoaikpO3JldHVybiB0aGlzLkNyZWF0ZSh7Li4ueSxbci5LaW5kXToiQ29uc3RydWN0b3IiLHR5cGU6ImNvbnN0cnVjdG9yIixwYXJhbWV0ZXJzOlMscmV0dXJuczpffSl9RGF0ZSh2PXt9KXtyZXR1cm4gdGhpcy5DcmVhdGUoey4uLnYsW3IuS2luZF06IkRhdGUiLHR5cGU6IkRhdGUifSl9RnVuY3Rpb24odixrLHkpe2NvbnN0IF89Ui5DbG9uZShrLHt9KSxTPXYubWFwKChqKT0+Ui5DbG9uZShqKSk7cmV0dXJuIHRoaXMuQ3JlYXRlKHsuLi55LFtyLktpbmRdOiJGdW5jdGlvbiIsdHlwZToiZnVuY3Rpb24iLHBhcmFtZXRlcnM6UyxyZXR1cm5zOl99KX1JbnN0YW5jZVR5cGUodixrPXt9KXtyZXR1cm4gUi5DbG9uZSh2LnJldHVybnMsayl9SXRlcmF0b3IodixrPXt9KXtyZXR1cm4gdGhpcy5DcmVhdGUoey4uLmssW3IuS2luZF06Ikl0ZXJhdG9yIix0eXBlOiJJdGVyYXRvciIsaXRlbXM6Ui5DbG9uZSh2KX0pfVBhcmFtZXRlcnModixrPXt9KXtyZXR1cm4gdGhpcy5UdXBsZSh2LnBhcmFtZXRlcnMsey4uLmt9KX1Qcm9taXNlKHYsaz17fSl7cmV0dXJuIHRoaXMuQ3JlYXRlKHsuLi5rLFtyLktpbmRdOiJQcm9taXNlIix0eXBlOiJQcm9taXNlIixpdGVtOlIuQ2xvbmUodil9KX1SZWdFeHAodixrPXt9KXtjb25zdCB5PWUuSXNTdHJpbmcodik/djp2LnNvdXJjZTtyZXR1cm4gdGhpcy5DcmVhdGUoey4uLmssW3IuS2luZF06IlN0cmluZyIsdHlwZToic3RyaW5nIixwYXR0ZXJuOnl9KX1SZWdFeCh2LGs9e30pe3JldHVybiB0aGlzLlJlZ0V4cCh2LGspfVJldHVyblR5cGUodixrPXt9KXtyZXR1cm4gUi5DbG9uZSh2LnJldHVybnMsayl9U3ltYm9sKHYpe3JldHVybiB0aGlzLkNyZWF0ZSh7Li4udixbci5LaW5kXToiU3ltYm9sIix0eXBlOiJzeW1ib2wifSl9VW5kZWZpbmVkKHY9e30pe3JldHVybiB0aGlzLkNyZWF0ZSh7Li4udixbci5LaW5kXToiVW5kZWZpbmVkIix0eXBlOiJ1bmRlZmluZWQifSl9VWludDhBcnJheSh2PXt9KXtyZXR1cm4gdGhpcy5DcmVhdGUoey4uLnYsW3IuS2luZF06IlVpbnQ4QXJyYXkiLHR5cGU6IlVpbnQ4QXJyYXkifSl9Vm9pZCh2PXt9KXtyZXR1cm4gdGhpcy5DcmVhdGUoey4uLnYsW3IuS2luZF06IlZvaWQiLHR5cGU6InZvaWQifSl9fXIuRXh0ZW5kZWRUeXBlQnVpbGRlcj1zcixyLlN0YW5kYXJkVHlwZT1uZXcgSCxyLlR5cGU9bmV3IHNyfSksUm49a3IoKHIpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuVHlwZVN5c3RlbT1yLlR5cGVTeXN0ZW1EdXBsaWNhdGVGb3JtYXQ9ci5UeXBlU3lzdGVtRHVwbGljYXRlVHlwZUtpbmQ9dm9pZCAwO3ZhciB0PXdyKCk7Y2xhc3MgZiBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKHUpe3N1cGVyKGBEdXBsaWNhdGUgdHlwZSBraW5kICcke3V9JyBkZXRlY3RlZGApfX1yLlR5cGVTeXN0ZW1EdXBsaWNhdGVUeXBlS2luZD1mO2NsYXNzIGUgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3Rvcih1KXtzdXBlcihgRHVwbGljYXRlIHN0cmluZyBmb3JtYXQgJyR7dX0nIGRldGVjdGVkYCl9fXIuVHlwZVN5c3RlbUR1cGxpY2F0ZUZvcm1hdD1lO3ZhciBWOyhmdW5jdGlvbih1KXt1LkV4YWN0T3B0aW9uYWxQcm9wZXJ0eVR5cGVzPSExLHUuQWxsb3dBcnJheU9iamVjdHM9ITEsdS5BbGxvd05hTj0hMSx1LkFsbG93Vm9pZE51bGw9ITE7ZnVuY3Rpb24gTyhFLFIpe2lmKHQuVHlwZVJlZ2lzdHJ5LkhhcyhFKSl0aHJvdyBuZXcgZihFKTtyZXR1cm4gdC5UeXBlUmVnaXN0cnkuU2V0KEUsUiksKEM9e30pPT50LlR5cGUuVW5zYWZlKHsuLi5DLFt0LktpbmRdOkV9KX11LlR5cGU9TztmdW5jdGlvbiBUKEUsUil7aWYodC5Gb3JtYXRSZWdpc3RyeS5IYXMoRSkpdGhyb3cgbmV3IGUoRSk7cmV0dXJuIHQuRm9ybWF0UmVnaXN0cnkuU2V0KEUsUiksRX11LkZvcm1hdD1UfSkoVnx8KHIuVHlwZVN5c3RlbT1WPXt9KSl9KSxUMD1rcigocik9Pnt2YXIgdD1yJiZyLl9fY3JlYXRlQmluZGluZ3x8KE9iamVjdC5jcmVhdGU/ZnVuY3Rpb24oZSxWLHUsTyl7aWYoTz09PXZvaWQgMClPPXU7dmFyIFQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihWLHUpO2lmKCFUfHwoImdldCJpbiBUPyFWLl9fZXNNb2R1bGU6VC53cml0YWJsZXx8VC5jb25maWd1cmFibGUpKVQ9e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFZbdV19fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxPLFQpfTpmdW5jdGlvbihlLFYsdSxPKXtpZihPPT09dm9pZCAwKU89dTtlW09dPVZbdV19KSxmPXImJnIuX19leHBvcnRTdGFyfHxmdW5jdGlvbihlLFYpe2Zvcih2YXIgdSBpbiBlKWlmKHUhPT0iZGVmYXVsdCImJiFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoVix1KSl0KFYsZSx1KX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLGYoUm4oKSxyKX0pLHhyPWtyKChyKT0+e3ZhciB0PWZ1bmN0aW9uKEEpe3JldHVybiBSKEEpJiYoU3ltYm9sLmFzeW5jSXRlcmF0b3IgaW4gQSl9LGY9ZnVuY3Rpb24oQSl7cmV0dXJuIFIoQSkmJihTeW1ib2wuaXRlcmF0b3IgaW4gQSl9LGU9ZnVuY3Rpb24oQSl7cmV0dXJuIEFycmF5QnVmZmVyLmlzVmlldyhBKX0sVj1mdW5jdGlvbihBKXtyZXR1cm4gQSBpbnN0YW5jZW9mIFByb21pc2V9LHU9ZnVuY3Rpb24oQSl7cmV0dXJuIEEgaW5zdGFuY2VvZiBVaW50OEFycmF5fSxPPWZ1bmN0aW9uKEEpe3JldHVybiBBIGluc3RhbmNlb2YgRGF0ZX0sVD1mdW5jdGlvbihBLGVyKXtyZXR1cm4gZXIgaW4gQX0sRT1mdW5jdGlvbihBKXtyZXR1cm4gUihBKSYmSyhBLmNvbnN0cnVjdG9yKSYmQS5jb25zdHJ1Y3Rvci5uYW1lPT09Ik9iamVjdCJ9LFI9ZnVuY3Rpb24oQSl7cmV0dXJuIEEhPT1udWxsJiZ0eXBlb2YgQT09PSJvYmplY3QifSxDPWZ1bmN0aW9uKEEpe3JldHVybiBBcnJheS5pc0FycmF5KEEpJiYhQXJyYXlCdWZmZXIuaXNWaWV3KEEpfSx4PWZ1bmN0aW9uKEEpe3JldHVybiBBPT09dm9pZCAwfSxvPWZ1bmN0aW9uKEEpe3JldHVybiBBPT09bnVsbH0sRz1mdW5jdGlvbihBKXtyZXR1cm4gdHlwZW9mIEE9PT0iYm9vbGVhbiJ9LFA9ZnVuY3Rpb24oQSl7cmV0dXJuIHR5cGVvZiBBPT09Im51bWJlciJ9LHc9ZnVuY3Rpb24oQSl7cmV0dXJuIFAoQSkmJk51bWJlci5pc0ludGVnZXIoQSl9LHE9ZnVuY3Rpb24oQSl7cmV0dXJuIHR5cGVvZiBBPT09ImJpZ2ludCJ9LEY9ZnVuY3Rpb24oQSl7cmV0dXJuIHR5cGVvZiBBPT09InN0cmluZyJ9LEs9ZnVuY3Rpb24oQSl7cmV0dXJuIHR5cGVvZiBBPT09ImZ1bmN0aW9uIn0sTD1mdW5jdGlvbihBKXtyZXR1cm4gdHlwZW9mIEE9PT0ic3ltYm9sIn0sej1mdW5jdGlvbihBKXtyZXR1cm4gcShBKXx8RyhBKXx8byhBKXx8UChBKXx8RihBKXx8TChBKXx8eChBKX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuSXNWYWx1ZVR5cGU9ci5Jc1N5bWJvbD1yLklzRnVuY3Rpb249ci5Jc1N0cmluZz1yLklzQmlnSW50PXIuSXNJbnRlZ2VyPXIuSXNOdW1iZXI9ci5Jc0Jvb2xlYW49ci5Jc051bGw9ci5Jc1VuZGVmaW5lZD1yLklzQXJyYXk9ci5Jc09iamVjdD1yLklzUGxhaW5PYmplY3Q9ci5IYXNQcm9wZXJ0eUtleT1yLklzRGF0ZT1yLklzVWludDhBcnJheT1yLklzUHJvbWlzZT1yLklzVHlwZWRBcnJheT1yLklzSXRlcmF0b3I9ci5Jc0FzeW5jSXRlcmF0b3I9dm9pZCAwLHIuSXNBc3luY0l0ZXJhdG9yPXQsci5Jc0l0ZXJhdG9yPWYsci5Jc1R5cGVkQXJyYXk9ZSxyLklzUHJvbWlzZT1WLHIuSXNVaW50OEFycmF5PXUsci5Jc0RhdGU9TyxyLkhhc1Byb3BlcnR5S2V5PVQsci5Jc1BsYWluT2JqZWN0PUUsci5Jc09iamVjdD1SLHIuSXNBcnJheT1DLHIuSXNVbmRlZmluZWQ9eCxyLklzTnVsbD1vLHIuSXNCb29sZWFuPUcsci5Jc051bWJlcj1QLHIuSXNJbnRlZ2VyPXcsci5Jc0JpZ0ludD1xLHIuSXNTdHJpbmc9RixyLklzRnVuY3Rpb249SyxyLklzU3ltYm9sPUwsci5Jc1ZhbHVlVHlwZT16fSksYTA9a3IoKHIpPT57dmFyIHQ9ZnVuY3Rpb24oSCl7RyhGLkFycmF5KTtmb3IobGV0IHNyIG9mIEgpbyhzcil9LGY9ZnVuY3Rpb24oSCl7RyhGLkJvb2xlYW4pLEcoSD8xOjApfSxlPWZ1bmN0aW9uKEgpe0coRi5CaWdJbnQpLE9yLnNldEJpZ0ludDY0KDAsSCk7Zm9yKGxldCBzciBvZiBYKUcoc3IpfSxWPWZ1bmN0aW9uKEgpe0coRi5EYXRlKSxvKEguZ2V0VGltZSgpKX0sdT1mdW5jdGlvbihIKXtHKEYuTnVsbCl9LE89ZnVuY3Rpb24oSCl7RyhGLk51bWJlciksT3Iuc2V0RmxvYXQ2NCgwLEgpO2ZvcihsZXQgc3Igb2YgWClHKHNyKX0sVD1mdW5jdGlvbihIKXtHKEYuT2JqZWN0KTtmb3IobGV0IHNyIG9mIGdsb2JhbFRoaXMuT2JqZWN0LmtleXMoSCkuc29ydCgpKW8oc3IpLG8oSFtzcl0pfSxFPWZ1bmN0aW9uKEgpe0coRi5TdHJpbmcpO2ZvcihsZXQgc3I9MDtzcjxILmxlbmd0aDtzcisrKUcoSC5jaGFyQ29kZUF0KHNyKSl9LFI9ZnVuY3Rpb24oSCl7RyhGLlN5bWJvbCksbyhILmRlc2NyaXB0aW9uKX0sQz1mdW5jdGlvbihIKXtHKEYuVWludDhBcnJheSk7Zm9yKGxldCBzcj0wO3NyPEgubGVuZ3RoO3NyKyspRyhIW3NyXSl9LHg9ZnVuY3Rpb24oSCl7cmV0dXJuIEcoRi5VbmRlZmluZWQpfSxvPWZ1bmN0aW9uKEgpe2lmKHcuSXNBcnJheShIKSlyZXR1cm4gdChIKTtpZih3LklzQm9vbGVhbihIKSlyZXR1cm4gZihIKTtpZih3LklzQmlnSW50KEgpKXJldHVybiBlKEgpO2lmKHcuSXNEYXRlKEgpKXJldHVybiBWKEgpO2lmKHcuSXNOdWxsKEgpKXJldHVybiB1KEgpO2lmKHcuSXNOdW1iZXIoSCkpcmV0dXJuIE8oSCk7aWYody5Jc1BsYWluT2JqZWN0KEgpKXJldHVybiBUKEgpO2lmKHcuSXNTdHJpbmcoSCkpcmV0dXJuIEUoSCk7aWYody5Jc1N5bWJvbChIKSlyZXR1cm4gUihIKTtpZih3LklzVWludDhBcnJheShIKSlyZXR1cm4gQyhIKTtpZih3LklzVW5kZWZpbmVkKEgpKXJldHVybiB4KEgpO3Rocm93IG5ldyBxKEgpfSxHPWZ1bmN0aW9uKEgpe0s9S15BW0hdLEs9SypMJXp9LFA9ZnVuY3Rpb24oSCl7cmV0dXJuIEs9QmlnSW50KCIxNDY5NTk4MTAzOTM0NjY1NjAzNyIpLG8oSCksS307T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuSGFzaD1yLkJ5dGVNYXJrZXI9ci5WYWx1ZUhhc2hFcnJvcj12b2lkIDA7dmFyIHc9eHIoKTtjbGFzcyBxIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoSCl7c3VwZXIoIkhhc2g6IFVuYWJsZSB0byBoYXNoIHZhbHVlIik7dGhpcy52YWx1ZT1IfX1yLlZhbHVlSGFzaEVycm9yPXE7dmFyIEY7KGZ1bmN0aW9uKEgpe0hbSC5VbmRlZmluZWQ9MF09IlVuZGVmaW5lZCIsSFtILk51bGw9MV09Ik51bGwiLEhbSC5Cb29sZWFuPTJdPSJCb29sZWFuIixIW0guTnVtYmVyPTNdPSJOdW1iZXIiLEhbSC5TdHJpbmc9NF09IlN0cmluZyIsSFtILk9iamVjdD01XT0iT2JqZWN0IixIW0guQXJyYXk9Nl09IkFycmF5IixIW0guRGF0ZT03XT0iRGF0ZSIsSFtILlVpbnQ4QXJyYXk9OF09IlVpbnQ4QXJyYXkiLEhbSC5TeW1ib2w9OV09IlN5bWJvbCIsSFtILkJpZ0ludD0xMF09IkJpZ0ludCJ9KShGfHwoci5CeXRlTWFya2VyPUY9e30pKTt2YXIgSz1CaWdJbnQoIjE0Njk1OTgxMDM5MzQ2NjU2MDM3IiksW0wsel09W0JpZ0ludCgiMTA5OTUxMTYyODIxMSIpLEJpZ0ludCgiMiIpKipCaWdJbnQoIjY0IildLEE9QXJyYXkuZnJvbSh7bGVuZ3RoOjI1Nn0pLm1hcCgoSCxzcik9PkJpZ0ludChzcikpLGVyPW5ldyBGbG9hdDY0QXJyYXkoMSksT3I9bmV3IERhdGFWaWV3KGVyLmJ1ZmZlciksWD1uZXcgVWludDhBcnJheShlci5idWZmZXIpO3IuSGFzaD1QfSksb249a3IoKHIpPT57dmFyIHQ9ZnVuY3Rpb24obil7cmV0dXJuIG4hPT12b2lkIDB9LGY9ZnVuY3Rpb24obixhKXtyZXR1cm4gVS5UeXBlU3lzdGVtLkV4YWN0T3B0aW9uYWxQcm9wZXJ0eVR5cGVzP2EgaW4gbjpuW2FdIT09dm9pZCAwfSxlPWZ1bmN0aW9uKG4pe2NvbnN0IGE9dHIuSXNPYmplY3Qobik7cmV0dXJuIFUuVHlwZVN5c3RlbS5BbGxvd0FycmF5T2JqZWN0cz9hOmEmJiF0ci5Jc0FycmF5KG4pfSxWPWZ1bmN0aW9uKG4pe3JldHVybiBlKG4pJiYhKG4gaW5zdGFuY2VvZiBEYXRlKSYmIShuIGluc3RhbmNlb2YgVWludDhBcnJheSl9LHU9ZnVuY3Rpb24obil7Y29uc3QgYT10ci5Jc051bWJlcihuKTtyZXR1cm4gVS5UeXBlU3lzdGVtLkFsbG93TmFOP2E6YSYmTnVtYmVyLmlzRmluaXRlKG4pfSxPPWZ1bmN0aW9uKG4pe2NvbnN0IGE9dHIuSXNVbmRlZmluZWQobik7cmV0dXJuIFUuVHlwZVN5c3RlbS5BbGxvd1ZvaWROdWxsP2F8fG49PT1udWxsOmF9O2Z1bmN0aW9uKlQobixhLGIsbCl7fWZ1bmN0aW9uKkUobixhLGIsbCl7aWYoIXRyLklzQXJyYXkobCkpcmV0dXJuIHlpZWxke3R5cGU6bS5BcnJheSxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJFeHBlY3RlZCBhcnJheSJ9O2lmKHQobi5taW5JdGVtcykmJiEobC5sZW5ndGg+PW4ubWluSXRlbXMpKXlpZWxke3R5cGU6bS5BcnJheU1pbkl0ZW1zLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIGFycmF5IGxlbmd0aCB0byBiZSBncmVhdGVyIG9yIGVxdWFsIHRvICR7bi5taW5JdGVtc31gfTtpZih0KG4ubWF4SXRlbXMpJiYhKGwubGVuZ3RoPD1uLm1heEl0ZW1zKSl5aWVsZHt0eXBlOm0uQXJyYXlNaW5JdGVtcyxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOmBFeHBlY3RlZCBhcnJheSBsZW5ndGggdG8gYmUgbGVzcyBvciBlcXVhbCB0byAke24ubWF4SXRlbXN9YH07Zm9yKGxldCBhcj0wO2FyPGwubGVuZ3RoO2FyKyspeWllbGQqbnIobi5pdGVtcyxhLGAke2J9LyR7YXJ9YCxsW2FyXSk7aWYobi51bmlxdWVJdGVtcz09PSEwJiYhZnVuY3Rpb24oKXtjb25zdCBhcj1uZXcgU2V0O2ZvcihsZXQgVHIgb2YgbCl7Y29uc3QgYnI9dXIuSGFzaChUcik7aWYoYXIuaGFzKGJyKSlyZXR1cm4hMTtlbHNlIGFyLmFkZChicil9cmV0dXJuITB9KCkpeWllbGR7dHlwZTptLkFycmF5VW5pcXVlSXRlbXMsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZToiRXhwZWN0ZWQgYXJyYXkgZWxlbWVudHMgdG8gYmUgdW5pcXVlIn07aWYoISh0KG4uY29udGFpbnMpfHx1KG4ubWluQ29udGFpbnMpfHx1KG4ubWF4Q29udGFpbnMpKSlyZXR1cm47Y29uc3QgQj10KG4uY29udGFpbnMpP24uY29udGFpbnM6JC5UeXBlLk5ldmVyKCksUT1sLnJlZHVjZSgoYXIsVHIsYnIpPT5ucihCLGEsYCR7Yn0ke2JyfWAsVHIpLm5leHQoKS5kb25lPT09ITA/YXIrMTphciwwKTtpZihRPT09MCl5aWVsZHt0eXBlOm0uQXJyYXlDb250YWlucyxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJFeHBlY3RlZCBhcnJheSB0byBjb250YWluIGF0IGxlYXN0IG9uZSBtYXRjaGluZyB0eXBlIn07aWYodHIuSXNOdW1iZXIobi5taW5Db250YWlucykmJlE8bi5taW5Db250YWlucyl5aWVsZHt0eXBlOm0uQXJyYXlNaW5Db250YWlucyxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOmBFeHBlY3RlZCBhcnJheSB0byBjb250YWluIGF0IGxlYXN0ICR7bi5taW5Db250YWluc30gbWF0Y2hpbmcgdHlwZXNgfTtpZih0ci5Jc051bWJlcihuLm1heENvbnRhaW5zKSYmUT5uLm1heENvbnRhaW5zKXlpZWxke3R5cGU6bS5BcnJheU1heENvbnRhaW5zLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIGFycmF5IHRvIGNvbnRhaW4gbm8gbW9yZSB0aGFuICR7bi5tYXhDb250YWluc30gbWF0Y2hpbmcgdHlwZXNgfX1mdW5jdGlvbipSKG4sYSxiLGwpe2lmKCF0ci5Jc0FzeW5jSXRlcmF0b3IobCkpeWllbGR7dHlwZTptLkFzeW5jSXRlcmF0b3Isc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZToiRXhwZWN0ZWQgdmFsdWUgdG8gYmUgYW4gYXN5bmMgaXRlcmF0b3IifX1mdW5jdGlvbipDKG4sYSxiLGwpe2lmKCF0ci5Jc0JpZ0ludChsKSlyZXR1cm4geWllbGR7dHlwZTptLkJpZ0ludCxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJFeHBlY3RlZCBiaWdpbnQifTtpZih0KG4ubXVsdGlwbGVPZikmJmwlbi5tdWx0aXBsZU9mIT09QmlnSW50KDApKXlpZWxke3R5cGU6bS5CaWdJbnRNdWx0aXBsZU9mLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIGJpZ2ludCB0byBiZSBhIG11bHRpcGxlIG9mICR7bi5tdWx0aXBsZU9mfWB9O2lmKHQobi5leGNsdXNpdmVNaW5pbXVtKSYmIShsPm4uZXhjbHVzaXZlTWluaW11bSkpeWllbGR7dHlwZTptLkJpZ0ludEV4Y2x1c2l2ZU1pbmltdW0sc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgYmlnaW50IHRvIGJlIGdyZWF0ZXIgdGhhbiAke24uZXhjbHVzaXZlTWluaW11bX1gfTtpZih0KG4uZXhjbHVzaXZlTWF4aW11bSkmJiEobDxuLmV4Y2x1c2l2ZU1heGltdW0pKXlpZWxke3R5cGU6bS5CaWdJbnRFeGNsdXNpdmVNYXhpbXVtLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIGJpZ2ludCB0byBiZSBsZXNzIHRoYW4gJHtuLmV4Y2x1c2l2ZU1heGltdW19YH07aWYodChuLm1pbmltdW0pJiYhKGw+PW4ubWluaW11bSkpeWllbGR7dHlwZTptLkJpZ0ludE1pbmltdW0sc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgYmlnaW50IHRvIGJlIGdyZWF0ZXIgb3IgZXF1YWwgdG8gJHtuLm1pbmltdW19YH07aWYodChuLm1heGltdW0pJiYhKGw8PW4ubWF4aW11bSkpeWllbGR7dHlwZTptLkJpZ0ludE1heGltdW0sc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgYmlnaW50IHRvIGJlIGxlc3Mgb3IgZXF1YWwgdG8gJHtuLm1heGltdW19YH19ZnVuY3Rpb24qeChuLGEsYixsKXtpZighdHIuSXNCb29sZWFuKGwpKXJldHVybiB5aWVsZHt0eXBlOm0uQm9vbGVhbixzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJFeHBlY3RlZCBib29sZWFuIn19ZnVuY3Rpb24qbyhuLGEsYixsKXt5aWVsZCpucihuLnJldHVybnMsYSxiLGwucHJvdG90eXBlKX1mdW5jdGlvbipHKG4sYSxiLGwpe2lmKCF0ci5Jc0RhdGUobCkpcmV0dXJuIHlpZWxke3R5cGU6bS5EYXRlLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6IkV4cGVjdGVkIERhdGUgb2JqZWN0In07aWYoIWlzRmluaXRlKGwuZ2V0VGltZSgpKSlyZXR1cm4geWllbGR7dHlwZTptLkRhdGUsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZToiSW52YWxpZCBEYXRlIn07aWYodChuLmV4Y2x1c2l2ZU1pbmltdW1UaW1lc3RhbXApJiYhKGwuZ2V0VGltZSgpPm4uZXhjbHVzaXZlTWluaW11bVRpbWVzdGFtcCkpeWllbGR7dHlwZTptLkRhdGVFeGNsdXNpdmVNaW5pbXVtVGltZXN0YW1wLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIERhdGUgdGltZXN0YW1wIHRvIGJlIGdyZWF0ZXIgdGhhbiAke24uZXhjbHVzaXZlTWluaW11bX1gfTtpZih0KG4uZXhjbHVzaXZlTWF4aW11bVRpbWVzdGFtcCkmJiEobC5nZXRUaW1lKCk8bi5leGNsdXNpdmVNYXhpbXVtVGltZXN0YW1wKSl5aWVsZHt0eXBlOm0uRGF0ZUV4Y2x1c2l2ZU1heGltdW1UaW1lc3RhbXAsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgRGF0ZSB0aW1lc3RhbXAgdG8gYmUgbGVzcyB0aGFuICR7bi5leGNsdXNpdmVNYXhpbXVtfWB9O2lmKHQobi5taW5pbXVtVGltZXN0YW1wKSYmIShsLmdldFRpbWUoKT49bi5taW5pbXVtVGltZXN0YW1wKSl5aWVsZHt0eXBlOm0uRGF0ZU1pbmltdW1UaW1lc3RhbXAsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgRGF0ZSB0aW1lc3RhbXAgdG8gYmUgZ3JlYXRlciBvciBlcXVhbCB0byAke24ubWluaW11bX1gfTtpZih0KG4ubWF4aW11bVRpbWVzdGFtcCkmJiEobC5nZXRUaW1lKCk8PW4ubWF4aW11bVRpbWVzdGFtcCkpeWllbGR7dHlwZTptLkRhdGVNYXhpbXVtVGltZXN0YW1wLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIERhdGUgdGltZXN0YW1wIHRvIGJlIGxlc3Mgb3IgZXF1YWwgdG8gJHtuLm1heGltdW19YH19ZnVuY3Rpb24qUChuLGEsYixsKXtpZighdHIuSXNGdW5jdGlvbihsKSlyZXR1cm4geWllbGR7dHlwZTptLkZ1bmN0aW9uLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6IkV4cGVjdGVkIGZ1bmN0aW9uIn19ZnVuY3Rpb24qdyhuLGEsYixsKXtpZighdHIuSXNJbnRlZ2VyKGwpKXJldHVybiB5aWVsZHt0eXBlOm0uSW50ZWdlcixzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJFeHBlY3RlZCBpbnRlZ2VyIn07aWYodChuLm11bHRpcGxlT2YpJiZsJW4ubXVsdGlwbGVPZiE9PTApeWllbGR7dHlwZTptLkludGVnZXJNdWx0aXBsZU9mLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIGludGVnZXIgdG8gYmUgYSBtdWx0aXBsZSBvZiAke24ubXVsdGlwbGVPZn1gfTtpZih0KG4uZXhjbHVzaXZlTWluaW11bSkmJiEobD5uLmV4Y2x1c2l2ZU1pbmltdW0pKXlpZWxke3R5cGU6bS5JbnRlZ2VyRXhjbHVzaXZlTWluaW11bSxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOmBFeHBlY3RlZCBpbnRlZ2VyIHRvIGJlIGdyZWF0ZXIgdGhhbiAke24uZXhjbHVzaXZlTWluaW11bX1gfTtpZih0KG4uZXhjbHVzaXZlTWF4aW11bSkmJiEobDxuLmV4Y2x1c2l2ZU1heGltdW0pKXlpZWxke3R5cGU6bS5JbnRlZ2VyRXhjbHVzaXZlTWF4aW11bSxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOmBFeHBlY3RlZCBpbnRlZ2VyIHRvIGJlIGxlc3MgdGhhbiAke24uZXhjbHVzaXZlTWF4aW11bX1gfTtpZih0KG4ubWluaW11bSkmJiEobD49bi5taW5pbXVtKSl5aWVsZHt0eXBlOm0uSW50ZWdlck1pbmltdW0sc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgaW50ZWdlciB0byBiZSBncmVhdGVyIG9yIGVxdWFsIHRvICR7bi5taW5pbXVtfWB9O2lmKHQobi5tYXhpbXVtKSYmIShsPD1uLm1heGltdW0pKXlpZWxke3R5cGU6bS5JbnRlZ2VyTWF4aW11bSxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOmBFeHBlY3RlZCBpbnRlZ2VyIHRvIGJlIGxlc3Mgb3IgZXF1YWwgdG8gJHtuLm1heGltdW19YH19ZnVuY3Rpb24qcShuLGEsYixsKXtmb3IobGV0IEIgb2Ygbi5hbGxPZil7Y29uc3QgUT1ucihCLGEsYixsKS5uZXh0KCk7aWYoIVEuZG9uZSl7eWllbGQgUS52YWx1ZSx5aWVsZHt0eXBlOm0uSW50ZXJzZWN0LHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6IkV4cGVjdGVkIGFsbCBzdWIgc2NoZW1hcyB0byBiZSB2YWxpZCJ9O3JldHVybn19aWYobi51bmV2YWx1YXRlZFByb3BlcnRpZXM9PT0hMSl7Y29uc3QgQj1uZXcgUmVnRXhwKCQuS2V5UmVzb2x2ZXIuUmVzb2x2ZVBhdHRlcm4obikpO2ZvcihsZXQgUSBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhsKSlpZighQi50ZXN0KFEpKXlpZWxke3R5cGU6bS5JbnRlcnNlY3RVbmV2YWx1YXRlZFByb3BlcnRpZXMsc2NoZW1hOm4scGF0aDpgJHtifS8ke1F9YCx2YWx1ZTpsLG1lc3NhZ2U6IlVuZXhwZWN0ZWQgcHJvcGVydHkifX1pZih0eXBlb2Ygbi51bmV2YWx1YXRlZFByb3BlcnRpZXM9PT0ib2JqZWN0Iil7Y29uc3QgQj1uZXcgUmVnRXhwKCQuS2V5UmVzb2x2ZXIuUmVzb2x2ZVBhdHRlcm4obikpO2ZvcihsZXQgUSBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhsKSlpZighQi50ZXN0KFEpKXtjb25zdCBhcj1ucihuLnVuZXZhbHVhdGVkUHJvcGVydGllcyxhLGAke2J9LyR7UX1gLGxbUV0pLm5leHQoKTtpZighYXIuZG9uZSl7eWllbGQgYXIudmFsdWUseWllbGR7dHlwZTptLkludGVyc2VjdFVuZXZhbHVhdGVkUHJvcGVydGllcyxzY2hlbWE6bixwYXRoOmAke2J9LyR7UX1gLHZhbHVlOmwsbWVzc2FnZToiSW52YWxpZCBhZGRpdGlvbmFsIHByb3BlcnR5In07cmV0dXJufX19fWZ1bmN0aW9uKkYobixhLGIsbCl7aWYoIShlKGwpJiYoU3ltYm9sLml0ZXJhdG9yIGluIGwpKSl5aWVsZHt0eXBlOm0uSXRlcmF0b3Isc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZToiRXhwZWN0ZWQgdmFsdWUgdG8gYmUgYW4gaXRlcmF0b3IifX1mdW5jdGlvbipLKG4sYSxiLGwpe2lmKGwhPT1uLmNvbnN0KXtjb25zdCBCPXR5cGVvZiBuLmNvbnN0PT09InN0cmluZyI/YCcke24uY29uc3R9J2A6bi5jb25zdDtyZXR1cm4geWllbGR7dHlwZTptLkxpdGVyYWwsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgJHtCfWB9fX1mdW5jdGlvbipMKG4sYSxiLGwpe3lpZWxke3R5cGU6bS5OZXZlcixzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJWYWx1ZSBjYW5ub3QgYmUgdmFsaWRhdGVkIn19ZnVuY3Rpb24qeihuLGEsYixsKXtpZihucihuLm5vdCxhLGIsbCkubmV4dCgpLmRvbmU9PT0hMCl5aWVsZHt0eXBlOm0uTm90LHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6IlZhbHVlIHNob3VsZCBub3QgdmFsaWRhdGUifX1mdW5jdGlvbipBKG4sYSxiLGwpe2lmKCF0ci5Jc051bGwobCkpcmV0dXJuIHlpZWxke3R5cGU6bS5OdWxsLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6IkV4cGVjdGVkIG51bGwifX1mdW5jdGlvbiplcihuLGEsYixsKXtpZighdShsKSlyZXR1cm4geWllbGR7dHlwZTptLk51bWJlcixzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJFeHBlY3RlZCBudW1iZXIifTtpZih0KG4ubXVsdGlwbGVPZikmJmwlbi5tdWx0aXBsZU9mIT09MCl5aWVsZHt0eXBlOm0uTnVtYmVyTXVsdGlwbGVPZixzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOmBFeHBlY3RlZCBudW1iZXIgdG8gYmUgYSBtdWx0aXBsZSBvZiAke24ubXVsdGlwbGVPZn1gfTtpZih0KG4uZXhjbHVzaXZlTWluaW11bSkmJiEobD5uLmV4Y2x1c2l2ZU1pbmltdW0pKXlpZWxke3R5cGU6bS5OdW1iZXJFeGNsdXNpdmVNaW5pbXVtLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIG51bWJlciB0byBiZSBncmVhdGVyIHRoYW4gJHtuLmV4Y2x1c2l2ZU1pbmltdW19YH07aWYodChuLmV4Y2x1c2l2ZU1heGltdW0pJiYhKGw8bi5leGNsdXNpdmVNYXhpbXVtKSl5aWVsZHt0eXBlOm0uTnVtYmVyRXhjbHVzaXZlTWF4aW11bSxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOmBFeHBlY3RlZCBudW1iZXIgdG8gYmUgbGVzcyB0aGFuICR7bi5leGNsdXNpdmVNYXhpbXVtfWB9O2lmKHQobi5taW5pbXVtKSYmIShsPj1uLm1pbmltdW0pKXlpZWxke3R5cGU6bS5OdW1iZXJNaW5pbXVtLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIG51bWJlciB0byBiZSBncmVhdGVyIG9yIGVxdWFsIHRvICR7bi5taW5pbXVtfWB9O2lmKHQobi5tYXhpbXVtKSYmIShsPD1uLm1heGltdW0pKXlpZWxke3R5cGU6bS5OdW1iZXJNYXhpbXVtLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIG51bWJlciB0byBiZSBsZXNzIG9yIGVxdWFsIHRvICR7bi5tYXhpbXVtfWB9fWZ1bmN0aW9uKk9yKG4sYSxiLGwpe2lmKCFlKGwpKXJldHVybiB5aWVsZHt0eXBlOm0uT2JqZWN0LHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6IkV4cGVjdGVkIG9iamVjdCJ9O2lmKHQobi5taW5Qcm9wZXJ0aWVzKSYmIShPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhsKS5sZW5ndGg+PW4ubWluUHJvcGVydGllcykpeWllbGR7dHlwZTptLk9iamVjdE1pblByb3BlcnRpZXMsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgb2JqZWN0IHRvIGhhdmUgYXQgbGVhc3QgJHtuLm1pblByb3BlcnRpZXN9IHByb3BlcnRpZXNgfTtpZih0KG4ubWF4UHJvcGVydGllcykmJiEoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMobCkubGVuZ3RoPD1uLm1heFByb3BlcnRpZXMpKXlpZWxke3R5cGU6bS5PYmplY3RNYXhQcm9wZXJ0aWVzLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIG9iamVjdCB0byBoYXZlIG5vIG1vcmUgdGhhbiAke24ubWF4UHJvcGVydGllc30gcHJvcGVydGllc2B9O2NvbnN0IEI9QXJyYXkuaXNBcnJheShuLnJlcXVpcmVkKT9uLnJlcXVpcmVkOltdLFE9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMobi5wcm9wZXJ0aWVzKSxhcj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhsKTtmb3IobGV0IFRyIG9mIFEpe2NvbnN0IGJyPW4ucHJvcGVydGllc1tUcl07aWYobi5yZXF1aXJlZCYmbi5yZXF1aXJlZC5pbmNsdWRlcyhUcikpe2lmKHlpZWxkKm5yKGJyLGEsYCR7Yn0vJHtUcn1gLGxbVHJdKSwkLkV4dGVuZHNVbmRlZmluZWQuQ2hlY2sobikmJiEoVHIgaW4gbCkpeWllbGR7dHlwZTptLk9iamVjdFJlcXVpcmVkUHJvcGVydGllcyxzY2hlbWE6YnIscGF0aDpgJHtifS8ke1RyfWAsdmFsdWU6dm9pZCAwLG1lc3NhZ2U6IkV4cGVjdGVkIHJlcXVpcmVkIHByb3BlcnR5In19ZWxzZSBpZihmKGwsVHIpKXlpZWxkKm5yKGJyLGEsYCR7Yn0vJHtUcn1gLGxbVHJdKX1mb3IobGV0IFRyIG9mIEIpe2lmKGFyLmluY2x1ZGVzKFRyKSljb250aW51ZTt5aWVsZHt0eXBlOm0uT2JqZWN0UmVxdWlyZWRQcm9wZXJ0aWVzLHNjaGVtYTpuLnByb3BlcnRpZXNbVHJdLHBhdGg6YCR7Yn0vJHtUcn1gLHZhbHVlOnZvaWQgMCxtZXNzYWdlOiJFeHBlY3RlZCByZXF1aXJlZCBwcm9wZXJ0eSJ9fWlmKG4uYWRkaXRpb25hbFByb3BlcnRpZXM9PT0hMSl7Zm9yKGxldCBUciBvZiBhcilpZighUS5pbmNsdWRlcyhUcikpeWllbGR7dHlwZTptLk9iamVjdEFkZGl0aW9uYWxQcm9wZXJ0aWVzLHNjaGVtYTpuLHBhdGg6YCR7Yn0vJHtUcn1gLHZhbHVlOmxbVHJdLG1lc3NhZ2U6IlVuZXhwZWN0ZWQgcHJvcGVydHkifX1pZih0eXBlb2Ygbi5hZGRpdGlvbmFsUHJvcGVydGllcz09PSJvYmplY3QiKWZvcihsZXQgVHIgb2YgYXIpe2lmKFEuaW5jbHVkZXMoVHIpKWNvbnRpbnVlO3lpZWxkKm5yKG4uYWRkaXRpb25hbFByb3BlcnRpZXMsYSxgJHtifS8ke1RyfWAsbFtUcl0pfX1mdW5jdGlvbipYKG4sYSxiLGwpe2lmKCF0ci5Jc1Byb21pc2UobCkpeWllbGR7dHlwZTptLlByb21pc2Usc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZToiRXhwZWN0ZWQgUHJvbWlzZSJ9fWZ1bmN0aW9uKkgobixhLGIsbCl7aWYoIVYobCkpcmV0dXJuIHlpZWxke3R5cGU6bS5PYmplY3Qsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZToiRXhwZWN0ZWQgcmVjb3JkIG9iamVjdCJ9O2lmKHQobi5taW5Qcm9wZXJ0aWVzKSYmIShPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhsKS5sZW5ndGg+PW4ubWluUHJvcGVydGllcykpeWllbGR7dHlwZTptLk9iamVjdE1pblByb3BlcnRpZXMsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgb2JqZWN0IHRvIGhhdmUgYXQgbGVhc3QgJHtuLm1pblByb3BlcnRpZXN9IHByb3BlcnRpZXNgfTtpZih0KG4ubWF4UHJvcGVydGllcykmJiEoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMobCkubGVuZ3RoPD1uLm1heFByb3BlcnRpZXMpKXlpZWxke3R5cGU6bS5PYmplY3RNYXhQcm9wZXJ0aWVzLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIG9iamVjdCB0byBoYXZlIG5vIG1vcmUgdGhhbiAke24ubWF4UHJvcGVydGllc30gcHJvcGVydGllc2B9O2NvbnN0W0IsUV09T2JqZWN0LmVudHJpZXMobi5wYXR0ZXJuUHJvcGVydGllcylbMF0sYXI9bmV3IFJlZ0V4cChCKTtmb3IobGV0W1RyLGJyXW9mIE9iamVjdC5lbnRyaWVzKGwpKXtpZihhci50ZXN0KFRyKSl7eWllbGQqbnIoUSxhLGAke2J9LyR7VHJ9YCxicik7Y29udGludWV9aWYodHlwZW9mIG4uYWRkaXRpb25hbFByb3BlcnRpZXM9PT0ib2JqZWN0Iil5aWVsZCpucihuLmFkZGl0aW9uYWxQcm9wZXJ0aWVzLGEsYCR7Yn0vJHtUcn1gLGJyKTtpZihuLmFkZGl0aW9uYWxQcm9wZXJ0aWVzPT09ITEpe2NvbnN0IHZyPWAke2J9LyR7VHJ9YCxFcj1gVW5leHBlY3RlZCBwcm9wZXJ0eSAnJHt2cn0nYDtyZXR1cm4geWllbGR7dHlwZTptLk9iamVjdEFkZGl0aW9uYWxQcm9wZXJ0aWVzLHNjaGVtYTpuLHBhdGg6dnIsdmFsdWU6YnIsbWVzc2FnZTpFcn19fX1mdW5jdGlvbipzcihuLGEsYixsKXtjb25zdCBCPWEuZmluZEluZGV4KChhcik9PmFyLiRpZD09PW4uJHJlZik7aWYoQj09PS0xKXRocm93IG5ldyBpKG4pO2NvbnN0IFE9YVtCXTt5aWVsZCpucihRLGEsYixsKX1mdW5jdGlvbip2KG4sYSxiLGwpe2lmKCF0ci5Jc1N0cmluZyhsKSlyZXR1cm4geWllbGR7dHlwZTptLlN0cmluZyxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJFeHBlY3RlZCBzdHJpbmcifTtpZih0KG4ubWluTGVuZ3RoKSYmIShsLmxlbmd0aD49bi5taW5MZW5ndGgpKXlpZWxke3R5cGU6bS5TdHJpbmdNaW5MZW5ndGgsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgc3RyaW5nIGxlbmd0aCBncmVhdGVyIG9yIGVxdWFsIHRvICR7bi5taW5MZW5ndGh9YH07aWYodChuLm1heExlbmd0aCkmJiEobC5sZW5ndGg8PW4ubWF4TGVuZ3RoKSl5aWVsZHt0eXBlOm0uU3RyaW5nTWF4TGVuZ3RoLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIHN0cmluZyBsZW5ndGggbGVzcyBvciBlcXVhbCB0byAke24ubWF4TGVuZ3RofWB9O2lmKHRyLklzU3RyaW5nKG4ucGF0dGVybikpe2lmKCFuZXcgUmVnRXhwKG4ucGF0dGVybikudGVzdChsKSl5aWVsZHt0eXBlOm0uU3RyaW5nUGF0dGVybixzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOmBFeHBlY3RlZCBzdHJpbmcgdG8gbWF0Y2ggcGF0dGVybiAke24ucGF0dGVybn1gfX1pZih0ci5Jc1N0cmluZyhuLmZvcm1hdCkpe2lmKCEkLkZvcm1hdFJlZ2lzdHJ5LkhhcyhuLmZvcm1hdCkpeWllbGR7dHlwZTptLlN0cmluZ0Zvcm1hdFVua25vd24sc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgVW5rbm93biBzdHJpbmcgZm9ybWF0ICcke24uZm9ybWF0fSdgfTtlbHNlIGlmKCEkLkZvcm1hdFJlZ2lzdHJ5LkdldChuLmZvcm1hdCkobCkpeWllbGR7dHlwZTptLlN0cmluZ0Zvcm1hdCxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOmBFeHBlY3RlZCBzdHJpbmcgdG8gbWF0Y2ggZm9ybWF0ICcke24uZm9ybWF0fSdgfX19ZnVuY3Rpb24qayhuLGEsYixsKXtpZighdHIuSXNTeW1ib2wobCkpcmV0dXJuIHlpZWxke3R5cGU6bS5TeW1ib2wsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZToiRXhwZWN0ZWQgc3ltYm9sIn19ZnVuY3Rpb24qeShuLGEsYixsKXtpZighdHIuSXNTdHJpbmcobCkpcmV0dXJuIHlpZWxke3R5cGU6bS5TdHJpbmcsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZToiRXhwZWN0ZWQgc3RyaW5nIn07aWYoIW5ldyBSZWdFeHAobi5wYXR0ZXJuKS50ZXN0KGwpKXlpZWxke3R5cGU6bS5TdHJpbmdQYXR0ZXJuLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6YEV4cGVjdGVkIHN0cmluZyB0byBtYXRjaCBwYXR0ZXJuICR7bi5wYXR0ZXJufWB9fWZ1bmN0aW9uKl8obixhLGIsbCl7Y29uc3QgQj1hLmZpbmRJbmRleCgoYXIpPT5hci4kaWQ9PT1uLiRyZWYpO2lmKEI9PT0tMSl0aHJvdyBuZXcgaShuKTtjb25zdCBRPWFbQl07eWllbGQqbnIoUSxhLGIsbCl9ZnVuY3Rpb24qUyhuLGEsYixsKXtpZighdHIuSXNBcnJheShsKSlyZXR1cm4geWllbGR7dHlwZTptLkFycmF5LHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6IkV4cGVjdGVkIEFycmF5In07aWYobi5pdGVtcz09PXZvaWQgMCYmbC5sZW5ndGghPT0wKXJldHVybiB5aWVsZHt0eXBlOm0uVHVwbGVaZXJvTGVuZ3RoLHNjaGVtYTpuLHBhdGg6Yix2YWx1ZTpsLG1lc3NhZ2U6IkV4cGVjdGVkIHR1cGxlIHRvIGhhdmUgMCBlbGVtZW50cyJ9O2lmKGwubGVuZ3RoIT09bi5tYXhJdGVtcyl5aWVsZHt0eXBlOm0uVHVwbGVMZW5ndGgsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgdHVwbGUgdG8gaGF2ZSAke24ubWF4SXRlbXN9IGVsZW1lbnRzYH07aWYoIW4uaXRlbXMpcmV0dXJuO2ZvcihsZXQgQj0wO0I8bi5pdGVtcy5sZW5ndGg7QisrKXlpZWxkKm5yKG4uaXRlbXNbQl0sYSxgJHtifS8ke0J9YCxsW0JdKX1mdW5jdGlvbipqKG4sYSxiLGwpe2lmKGwhPT12b2lkIDApeWllbGR7dHlwZTptLlVuZGVmaW5lZCxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJFeHBlY3RlZCB1bmRlZmluZWQifX1mdW5jdGlvbipOKG4sYSxiLGwpe2NvbnN0IEI9W107Zm9yKGxldCBRIG9mIG4uYW55T2Ype2NvbnN0IGFyPVsuLi5ucihRLGEsYixsKV07aWYoYXIubGVuZ3RoPT09MClyZXR1cm47Qi5wdXNoKC4uLmFyKX1pZihCLmxlbmd0aD4wKXlpZWxke3R5cGU6bS5VbmlvbixzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJFeHBlY3RlZCB2YWx1ZSBvZiB1bmlvbiJ9O2ZvcihsZXQgUSBvZiBCKXlpZWxkIFF9ZnVuY3Rpb24qWihuLGEsYixsKXtpZighdHIuSXNVaW50OEFycmF5KGwpKXJldHVybiB5aWVsZHt0eXBlOm0uVWludDhBcnJheSxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJFeHBlY3RlZCBVaW50OEFycmF5In07aWYodChuLm1heEJ5dGVMZW5ndGgpJiYhKGwubGVuZ3RoPD1uLm1heEJ5dGVMZW5ndGgpKXlpZWxke3R5cGU6bS5VaW50OEFycmF5TWF4Qnl0ZUxlbmd0aCxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOmBFeHBlY3RlZCBVaW50OEFycmF5IHRvIGhhdmUgYSBieXRlIGxlbmd0aCBsZXNzIG9yIGVxdWFsIHRvICR7bi5tYXhCeXRlTGVuZ3RofWB9O2lmKHQobi5taW5CeXRlTGVuZ3RoKSYmIShsLmxlbmd0aD49bi5taW5CeXRlTGVuZ3RoKSl5aWVsZHt0eXBlOm0uVWludDhBcnJheU1pbkJ5dGVMZW5ndGgsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQgVWludDhBcnJheSB0byBoYXZlIGEgYnl0ZSBsZW5ndGggZ3JlYXRlciBvciBlcXVhbCB0byAke24ubWF4Qnl0ZUxlbmd0aH1gfX1mdW5jdGlvbipZKG4sYSxiLGwpe31mdW5jdGlvbipEKG4sYSxiLGwpe2lmKCFPKGwpKXJldHVybiB5aWVsZHt0eXBlOm0uVm9pZCxzY2hlbWE6bixwYXRoOmIsdmFsdWU6bCxtZXNzYWdlOiJFeHBlY3RlZCB2b2lkIn19ZnVuY3Rpb24qSihuLGEsYixsKXtpZighJC5UeXBlUmVnaXN0cnkuR2V0KG5bJC5LaW5kXSkobixsKSlyZXR1cm4geWllbGR7dHlwZTptLktpbmQsc2NoZW1hOm4scGF0aDpiLHZhbHVlOmwsbWVzc2FnZTpgRXhwZWN0ZWQga2luZCAke25bJC5LaW5kXX1gfX1mdW5jdGlvbipucihuLGEsYixsKXtjb25zdCBCPXQobi4kaWQpP1suLi5hLG5dOmEsUT1uO3N3aXRjaChRWyQuS2luZF0pe2Nhc2UiQW55IjpyZXR1cm4geWllbGQqVChRLEIsYixsKTtjYXNlIkFycmF5IjpyZXR1cm4geWllbGQqRShRLEIsYixsKTtjYXNlIkFzeW5jSXRlcmF0b3IiOnJldHVybiB5aWVsZCpSKFEsQixiLGwpO2Nhc2UiQmlnSW50IjpyZXR1cm4geWllbGQqQyhRLEIsYixsKTtjYXNlIkJvb2xlYW4iOnJldHVybiB5aWVsZCp4KFEsQixiLGwpO2Nhc2UiQ29uc3RydWN0b3IiOnJldHVybiB5aWVsZCpvKFEsQixiLGwpO2Nhc2UiRGF0ZSI6cmV0dXJuIHlpZWxkKkcoUSxCLGIsbCk7Y2FzZSJGdW5jdGlvbiI6cmV0dXJuIHlpZWxkKlAoUSxCLGIsbCk7Y2FzZSJJbnRlZ2VyIjpyZXR1cm4geWllbGQqdyhRLEIsYixsKTtjYXNlIkludGVyc2VjdCI6cmV0dXJuIHlpZWxkKnEoUSxCLGIsbCk7Y2FzZSJJdGVyYXRvciI6cmV0dXJuIHlpZWxkKkYoUSxCLGIsbCk7Y2FzZSJMaXRlcmFsIjpyZXR1cm4geWllbGQqSyhRLEIsYixsKTtjYXNlIk5ldmVyIjpyZXR1cm4geWllbGQqTChRLEIsYixsKTtjYXNlIk5vdCI6cmV0dXJuIHlpZWxkKnooUSxCLGIsbCk7Y2FzZSJOdWxsIjpyZXR1cm4geWllbGQqQShRLEIsYixsKTtjYXNlIk51bWJlciI6cmV0dXJuIHlpZWxkKmVyKFEsQixiLGwpO2Nhc2UiT2JqZWN0IjpyZXR1cm4geWllbGQqT3IoUSxCLGIsbCk7Y2FzZSJQcm9taXNlIjpyZXR1cm4geWllbGQqWChRLEIsYixsKTtjYXNlIlJlY29yZCI6cmV0dXJuIHlpZWxkKkgoUSxCLGIsbCk7Y2FzZSJSZWYiOnJldHVybiB5aWVsZCpzcihRLEIsYixsKTtjYXNlIlN0cmluZyI6cmV0dXJuIHlpZWxkKnYoUSxCLGIsbCk7Y2FzZSJTeW1ib2wiOnJldHVybiB5aWVsZCprKFEsQixiLGwpO2Nhc2UiVGVtcGxhdGVMaXRlcmFsIjpyZXR1cm4geWllbGQqeShRLEIsYixsKTtjYXNlIlRoaXMiOnJldHVybiB5aWVsZCpfKFEsQixiLGwpO2Nhc2UiVHVwbGUiOnJldHVybiB5aWVsZCpTKFEsQixiLGwpO2Nhc2UiVW5kZWZpbmVkIjpyZXR1cm4geWllbGQqaihRLEIsYixsKTtjYXNlIlVuaW9uIjpyZXR1cm4geWllbGQqTihRLEIsYixsKTtjYXNlIlVpbnQ4QXJyYXkiOnJldHVybiB5aWVsZCpaKFEsQixiLGwpO2Nhc2UiVW5rbm93biI6cmV0dXJuIHlpZWxkKlkoUSxCLGIsbCk7Y2FzZSJWb2lkIjpyZXR1cm4geWllbGQqRChRLEIsYixsKTtkZWZhdWx0OmlmKCEkLlR5cGVSZWdpc3RyeS5IYXMoUVskLktpbmRdKSl0aHJvdyBuZXcgYyhuKTtyZXR1cm4geWllbGQqSihRLEIsYixsKX19dmFyIGNyPWZ1bmN0aW9uKC4uLm4pe2NvbnN0IGE9bi5sZW5ndGg9PT0zP25yKG5bMF0sblsxXSwiIixuWzJdKTpucihuWzBdLFtdLCIiLG5bMV0pO3JldHVybiBuZXcgaHIoYSl9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLkVycm9ycz1yLlZhbHVlRXJyb3JzRGVyZWZlcmVuY2VFcnJvcj1yLlZhbHVlRXJyb3JzVW5rbm93blR5cGVFcnJvcj1yLlZhbHVlRXJyb3JJdGVyYXRvcj1yLlZhbHVlRXJyb3JUeXBlPXZvaWQgMDt2YXIgVT1UMCgpLCQ9d3IoKSx1cj1hMCgpLHRyPXhyKCksbTsoZnVuY3Rpb24obil7bltuLkFycmF5PTBdPSJBcnJheSIsbltuLkFycmF5TWluSXRlbXM9MV09IkFycmF5TWluSXRlbXMiLG5bbi5BcnJheU1heEl0ZW1zPTJdPSJBcnJheU1heEl0ZW1zIixuW24uQXJyYXlDb250YWlucz0zXT0iQXJyYXlDb250YWlucyIsbltuLkFycmF5TWluQ29udGFpbnM9NF09IkFycmF5TWluQ29udGFpbnMiLG5bbi5BcnJheU1heENvbnRhaW5zPTVdPSJBcnJheU1heENvbnRhaW5zIixuW24uQXJyYXlVbmlxdWVJdGVtcz02XT0iQXJyYXlVbmlxdWVJdGVtcyIsbltuLkFzeW5jSXRlcmF0b3I9N109IkFzeW5jSXRlcmF0b3IiLG5bbi5CaWdJbnQ9OF09IkJpZ0ludCIsbltuLkJpZ0ludE11bHRpcGxlT2Y9OV09IkJpZ0ludE11bHRpcGxlT2YiLG5bbi5CaWdJbnRFeGNsdXNpdmVNaW5pbXVtPTEwXT0iQmlnSW50RXhjbHVzaXZlTWluaW11bSIsbltuLkJpZ0ludEV4Y2x1c2l2ZU1heGltdW09MTFdPSJCaWdJbnRFeGNsdXNpdmVNYXhpbXVtIixuW24uQmlnSW50TWluaW11bT0xMl09IkJpZ0ludE1pbmltdW0iLG5bbi5CaWdJbnRNYXhpbXVtPTEzXT0iQmlnSW50TWF4aW11bSIsbltuLkJvb2xlYW49MTRdPSJCb29sZWFuIixuW24uRGF0ZT0xNV09IkRhdGUiLG5bbi5EYXRlRXhjbHVzaXZlTWluaW11bVRpbWVzdGFtcD0xNl09IkRhdGVFeGNsdXNpdmVNaW5pbXVtVGltZXN0YW1wIixuW24uRGF0ZUV4Y2x1c2l2ZU1heGltdW1UaW1lc3RhbXA9MTddPSJEYXRlRXhjbHVzaXZlTWF4aW11bVRpbWVzdGFtcCIsbltuLkRhdGVNaW5pbXVtVGltZXN0YW1wPTE4XT0iRGF0ZU1pbmltdW1UaW1lc3RhbXAiLG5bbi5EYXRlTWF4aW11bVRpbWVzdGFtcD0xOV09IkRhdGVNYXhpbXVtVGltZXN0YW1wIixuW24uRnVuY3Rpb249MjBdPSJGdW5jdGlvbiIsbltuLkludGVnZXI9MjFdPSJJbnRlZ2VyIixuW24uSW50ZWdlck11bHRpcGxlT2Y9MjJdPSJJbnRlZ2VyTXVsdGlwbGVPZiIsbltuLkludGVnZXJFeGNsdXNpdmVNaW5pbXVtPTIzXT0iSW50ZWdlckV4Y2x1c2l2ZU1pbmltdW0iLG5bbi5JbnRlZ2VyRXhjbHVzaXZlTWF4aW11bT0yNF09IkludGVnZXJFeGNsdXNpdmVNYXhpbXVtIixuW24uSW50ZWdlck1pbmltdW09MjVdPSJJbnRlZ2VyTWluaW11bSIsbltuLkludGVnZXJNYXhpbXVtPTI2XT0iSW50ZWdlck1heGltdW0iLG5bbi5JbnRlcnNlY3Q9MjddPSJJbnRlcnNlY3QiLG5bbi5JbnRlcnNlY3RVbmV2YWx1YXRlZFByb3BlcnRpZXM9MjhdPSJJbnRlcnNlY3RVbmV2YWx1YXRlZFByb3BlcnRpZXMiLG5bbi5JdGVyYXRvcj0yOV09Ikl0ZXJhdG9yIixuW24uTGl0ZXJhbD0zMF09IkxpdGVyYWwiLG5bbi5OZXZlcj0zMV09Ik5ldmVyIixuW24uTm90PTMyXT0iTm90IixuW24uTnVsbD0zM109Ik51bGwiLG5bbi5OdW1iZXI9MzRdPSJOdW1iZXIiLG5bbi5OdW1iZXJNdWx0aXBsZU9mPTM1XT0iTnVtYmVyTXVsdGlwbGVPZiIsbltuLk51bWJlckV4Y2x1c2l2ZU1pbmltdW09MzZdPSJOdW1iZXJFeGNsdXNpdmVNaW5pbXVtIixuW24uTnVtYmVyRXhjbHVzaXZlTWF4aW11bT0zN109Ik51bWJlckV4Y2x1c2l2ZU1heGltdW0iLG5bbi5OdW1iZXJNaW5pbXVtPTM4XT0iTnVtYmVyTWluaW11bSIsbltuLk51bWJlck1heGltdW09MzldPSJOdW1iZXJNYXhpbXVtIixuW24uT2JqZWN0PTQwXT0iT2JqZWN0IixuW24uT2JqZWN0TWluUHJvcGVydGllcz00MV09Ik9iamVjdE1pblByb3BlcnRpZXMiLG5bbi5PYmplY3RNYXhQcm9wZXJ0aWVzPTQyXT0iT2JqZWN0TWF4UHJvcGVydGllcyIsbltuLk9iamVjdEFkZGl0aW9uYWxQcm9wZXJ0aWVzPTQzXT0iT2JqZWN0QWRkaXRpb25hbFByb3BlcnRpZXMiLG5bbi5PYmplY3RSZXF1aXJlZFByb3BlcnRpZXM9NDRdPSJPYmplY3RSZXF1aXJlZFByb3BlcnRpZXMiLG5bbi5Qcm9taXNlPTQ1XT0iUHJvbWlzZSIsbltuLlJlY29yZEtleU51bWVyaWM9NDZdPSJSZWNvcmRLZXlOdW1lcmljIixuW24uUmVjb3JkS2V5U3RyaW5nPTQ3XT0iUmVjb3JkS2V5U3RyaW5nIixuW24uU3RyaW5nPTQ4XT0iU3RyaW5nIixuW24uU3RyaW5nTWluTGVuZ3RoPTQ5XT0iU3RyaW5nTWluTGVuZ3RoIixuW24uU3RyaW5nTWF4TGVuZ3RoPTUwXT0iU3RyaW5nTWF4TGVuZ3RoIixuW24uU3RyaW5nUGF0dGVybj01MV09IlN0cmluZ1BhdHRlcm4iLG5bbi5TdHJpbmdGb3JtYXRVbmtub3duPTUyXT0iU3RyaW5nRm9ybWF0VW5rbm93biIsbltuLlN0cmluZ0Zvcm1hdD01M109IlN0cmluZ0Zvcm1hdCIsbltuLlN5bWJvbD01NF09IlN5bWJvbCIsbltuLlR1cGxlWmVyb0xlbmd0aD01NV09IlR1cGxlWmVyb0xlbmd0aCIsbltuLlR1cGxlTGVuZ3RoPTU2XT0iVHVwbGVMZW5ndGgiLG5bbi5VbmRlZmluZWQ9NTddPSJVbmRlZmluZWQiLG5bbi5Vbmlvbj01OF09IlVuaW9uIixuW24uVWludDhBcnJheT01OV09IlVpbnQ4QXJyYXkiLG5bbi5VaW50OEFycmF5TWluQnl0ZUxlbmd0aD02MF09IlVpbnQ4QXJyYXlNaW5CeXRlTGVuZ3RoIixuW24uVWludDhBcnJheU1heEJ5dGVMZW5ndGg9NjFdPSJVaW50OEFycmF5TWF4Qnl0ZUxlbmd0aCIsbltuLlZvaWQ9NjJdPSJWb2lkIixuW24uS2luZD02M109IktpbmQifSkobXx8KHIuVmFsdWVFcnJvclR5cGU9bT17fSkpO2NsYXNzIGhye2NvbnN0cnVjdG9yKG4pe3RoaXMuaXRlcmF0b3I9bn1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiB0aGlzLml0ZXJhdG9yfUZpcnN0KCl7Y29uc3Qgbj10aGlzLml0ZXJhdG9yLm5leHQoKTtyZXR1cm4gbi5kb25lP3ZvaWQgMDpuLnZhbHVlfX1yLlZhbHVlRXJyb3JJdGVyYXRvcj1ocjtjbGFzcyBjIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3Iobil7c3VwZXIoIlZhbHVlRXJyb3JzOiBVbmtub3duIHR5cGUiKTt0aGlzLnNjaGVtYT1ufX1yLlZhbHVlRXJyb3JzVW5rbm93blR5cGVFcnJvcj1jO2NsYXNzIGkgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihuKXtzdXBlcihgVmFsdWVFcnJvcnM6IFVuYWJsZSB0byBkZXJlZmVyZW5jZSB0eXBlIHdpdGggJGlkICcke24uJHJlZn0nYCk7dGhpcy5zY2hlbWE9bn19ci5WYWx1ZUVycm9yc0RlcmVmZXJlbmNlRXJyb3I9aSxyLkVycm9ycz1jcn0pLGMwPWtyKChyKT0+e3ZhciB0PXImJnIuX19jcmVhdGVCaW5kaW5nfHwoT2JqZWN0LmNyZWF0ZT9mdW5jdGlvbihlLFYsdSxPKXtpZihPPT09dm9pZCAwKU89dTt2YXIgVD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFYsdSk7aWYoIVR8fCgiZ2V0ImluIFQ/IVYuX19lc01vZHVsZTpULndyaXRhYmxlfHxULmNvbmZpZ3VyYWJsZSkpVD17ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gVlt1XX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLE8sVCl9OmZ1bmN0aW9uKGUsVix1LE8pe2lmKE89PT12b2lkIDApTz11O2VbT109Vlt1XX0pLGY9ciYmci5fX2V4cG9ydFN0YXJ8fGZ1bmN0aW9uKGUsVil7Zm9yKHZhciB1IGluIGUpaWYodSE9PSJkZWZhdWx0IiYmIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChWLHUpKXQoVixlLHUpfTtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksZihvbigpLHIpfSksajA9a3IoKHIpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuVmFsdWVQb2ludGVyPXIuVmFsdWVQb2ludGVyUm9vdERlbGV0ZUVycm9yPXIuVmFsdWVQb2ludGVyUm9vdFNldEVycm9yPXZvaWQgMDtjbGFzcyB0IGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoVix1LE8pe3N1cGVyKCJWYWx1ZVBvaW50ZXI6IENhbm5vdCBzZXQgcm9vdCB2YWx1ZSIpO3RoaXMudmFsdWU9Vix0aGlzLnBhdGg9dSx0aGlzLnVwZGF0ZT1PfX1yLlZhbHVlUG9pbnRlclJvb3RTZXRFcnJvcj10O2NsYXNzIGYgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihWLHUpe3N1cGVyKCJWYWx1ZVBvaW50ZXI6IENhbm5vdCBkZWxldGUgcm9vdCB2YWx1ZSIpO3RoaXMudmFsdWU9Vix0aGlzLnBhdGg9dX19ci5WYWx1ZVBvaW50ZXJSb290RGVsZXRlRXJyb3I9Zjt2YXIgZTsoZnVuY3Rpb24oVil7ZnVuY3Rpb24gdSh4KXtyZXR1cm4geC5pbmRleE9mKCJ+Iik9PT0tMT94OngucmVwbGFjZSgvfjEvZywiLyIpLnJlcGxhY2UoL34wL2csIn4iKX1mdW5jdGlvbipPKHgpe2lmKHg9PT0iIilyZXR1cm47bGV0W28sR109WzAsMF07Zm9yKGxldCBQPTA7UDx4Lmxlbmd0aDtQKyspaWYoeC5jaGFyQXQoUCk9PT0iLyIpaWYoUD09PTApbz1QKzE7ZWxzZSBHPVAseWllbGQgdSh4LnNsaWNlKG8sRykpLG89UCsxO2Vsc2UgRz1QO3lpZWxkIHUoeC5zbGljZShvKSl9Vi5Gb3JtYXQ9TztmdW5jdGlvbiBUKHgsbyxHKXtpZihvPT09IiIpdGhyb3cgbmV3IHQoeCxvLEcpO2xldFtQLHcscV09W251bGwseCwiIl07Zm9yKGxldCBGIG9mIE8obykpe2lmKHdbRl09PT12b2lkIDApd1tGXT17fTtQPXcsdz13W0ZdLHE9Rn1QW3FdPUd9Vi5TZXQ9VDtmdW5jdGlvbiBFKHgsbyl7aWYobz09PSIiKXRocm93IG5ldyBmKHgsbyk7bGV0W0csUCx3XT1bbnVsbCx4LCIiXTtmb3IobGV0IHEgb2YgTyhvKSl7aWYoUFtxXT09PXZvaWQgMHx8UFtxXT09PW51bGwpcmV0dXJuO0c9UCxQPVBbcV0sdz1xfWlmKEFycmF5LmlzQXJyYXkoRykpe2NvbnN0IHE9cGFyc2VJbnQodyk7Ry5zcGxpY2UocSwxKX1lbHNlIGRlbGV0ZSBHW3ddfVYuRGVsZXRlPUU7ZnVuY3Rpb24gUih4LG8pe2lmKG89PT0iIilyZXR1cm4hMDtsZXRbRyxQLHddPVtudWxsLHgsIiJdO2ZvcihsZXQgcSBvZiBPKG8pKXtpZihQW3FdPT09dm9pZCAwKXJldHVybiExO0c9UCxQPVBbcV0sdz1xfXJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhHKS5pbmNsdWRlcyh3KX1WLkhhcz1SO2Z1bmN0aW9uIEMoeCxvKXtpZihvPT09IiIpcmV0dXJuIHg7bGV0IEc9eDtmb3IobGV0IFAgb2YgTyhvKSl7aWYoR1tQXT09PXZvaWQgMClyZXR1cm47Rz1HW1BdfXJldHVybiBHfVYuR2V0PUN9KShlfHwoci5WYWx1ZVBvaW50ZXI9ZT17fSkpfSksdTA9a3IoKHIpPT57dmFyIHQ9ZnVuY3Rpb24obyl7cmV0dXJuWy4uLk9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG8pLC4uLk9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMobyldLnJlZHVjZSgoRyxQKT0+KHsuLi5HLFtQXTpDKG9bUF0pfSkse30pfSxmPWZ1bmN0aW9uKG8pe3JldHVybiBvLm1hcCgoRyk9PkMoRykpfSxlPWZ1bmN0aW9uKG8pe3JldHVybiBvLnNsaWNlKCl9LFY9ZnVuY3Rpb24obyl7cmV0dXJuIG5ldyBEYXRlKG8udG9JU09TdHJpbmcoKSl9LHU9ZnVuY3Rpb24obyl7cmV0dXJuIG99LE89ZnVuY3Rpb24obyl7cmV0dXJuIG99LFQ9ZnVuY3Rpb24obyl7cmV0dXJuIG99LEU9ZnVuY3Rpb24obyl7cmV0dXJuIG99LFI9ZnVuY3Rpb24obyl7cmV0dXJuIG99LEM9ZnVuY3Rpb24obyl7aWYoeC5Jc0FycmF5KG8pKXJldHVybiBmKG8pO2lmKHguSXNBc3luY0l0ZXJhdG9yKG8pKXJldHVybiBPKG8pO2lmKHguSXNGdW5jdGlvbihvKSlyZXR1cm4gRShvKTtpZih4LklzSXRlcmF0b3IobykpcmV0dXJuIFQobyk7aWYoeC5Jc1Byb21pc2UobykpcmV0dXJuIFIobyk7aWYoeC5Jc0RhdGUobykpcmV0dXJuIFYobyk7aWYoeC5Jc1BsYWluT2JqZWN0KG8pKXJldHVybiB0KG8pO2lmKHguSXNUeXBlZEFycmF5KG8pKXJldHVybiBlKG8pO2lmKHguSXNWYWx1ZVR5cGUobykpcmV0dXJuIHUobyk7dGhyb3cgbmV3IEVycm9yKCJWYWx1ZUNsb25lOiBVbmFibGUgdG8gY2xvbmUgdmFsdWUiKX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuQ2xvbmU9dm9pZCAwO3ZhciB4PXhyKCk7ci5DbG9uZT1DfSksRDA9a3IoKHIpPT57dmFyIHQ9ZnVuY3Rpb24oTCx6KXtyZXR1cm57dHlwZToidXBkYXRlIixwYXRoOkwsdmFsdWU6en19LGY9ZnVuY3Rpb24oTCx6KXtyZXR1cm57dHlwZToiaW5zZXJ0IixwYXRoOkwsdmFsdWU6en19LGU9ZnVuY3Rpb24oTCl7cmV0dXJue3R5cGU6ImRlbGV0ZSIscGF0aDpMfX07ZnVuY3Rpb24qVihMLHosQSl7aWYoIXcuSXNQbGFpbk9iamVjdChBKSlyZXR1cm4geWllbGQgdChMLEEpO2NvbnN0IGVyPVsuLi5PYmplY3Qua2V5cyh6KSwuLi5PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHopXSxPcj1bLi4uT2JqZWN0LmtleXMoQSksLi4uT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhBKV07Zm9yKGxldCBYIG9mIGVyKXtpZih3LklzU3ltYm9sKFgpKXRocm93IG5ldyBGKFgpO2lmKHcuSXNVbmRlZmluZWQoQVtYXSkmJk9yLmluY2x1ZGVzKFgpKXlpZWxkIHQoYCR7TH0vJHtTdHJpbmcoWCl9YCx2b2lkIDApfWZvcihsZXQgWCBvZiBPcil7aWYody5Jc1VuZGVmaW5lZCh6W1hdKXx8dy5Jc1VuZGVmaW5lZChBW1hdKSljb250aW51ZTtpZih3LklzU3ltYm9sKFgpKXRocm93IG5ldyBGKFgpO3lpZWxkKkUoYCR7TH0vJHtTdHJpbmcoWCl9YCx6W1hdLEFbWF0pfWZvcihsZXQgWCBvZiBPcil7aWYody5Jc1N5bWJvbChYKSl0aHJvdyBuZXcgRihYKTtpZih3LklzVW5kZWZpbmVkKHpbWF0pKXlpZWxkIGYoYCR7TH0vJHtTdHJpbmcoWCl9YCxBW1hdKX1mb3IobGV0IFggb2YgZXIucmV2ZXJzZSgpKXtpZih3LklzU3ltYm9sKFgpKXRocm93IG5ldyBGKFgpO2lmKHcuSXNVbmRlZmluZWQoQVtYXSkmJiFPci5pbmNsdWRlcyhYKSl5aWVsZCBlKGAke0x9LyR7U3RyaW5nKFgpfWApfX1mdW5jdGlvbip1KEwseixBKXtpZighdy5Jc0FycmF5KEEpKXJldHVybiB5aWVsZCB0KEwsQSk7Zm9yKGxldCBlcj0wO2VyPE1hdGgubWluKHoubGVuZ3RoLEEubGVuZ3RoKTtlcisrKXlpZWxkKkUoYCR7TH0vJHtlcn1gLHpbZXJdLEFbZXJdKTtmb3IobGV0IGVyPTA7ZXI8QS5sZW5ndGg7ZXIrKyl7aWYoZXI8ei5sZW5ndGgpY29udGludWU7eWllbGQgZihgJHtMfS8ke2VyfWAsQVtlcl0pfWZvcihsZXQgZXI9ei5sZW5ndGgtMTtlcj49MDtlci0tKXtpZihlcjxBLmxlbmd0aCljb250aW51ZTt5aWVsZCBlKGAke0x9LyR7ZXJ9YCl9fWZ1bmN0aW9uKk8oTCx6LEEpe2lmKCF3LklzVHlwZWRBcnJheShBKXx8ei5sZW5ndGghPT1BLmxlbmd0aHx8T2JqZWN0LmdldFByb3RvdHlwZU9mKHopLmNvbnN0cnVjdG9yLm5hbWUhPT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoQSkuY29uc3RydWN0b3IubmFtZSlyZXR1cm4geWllbGQgdChMLEEpO2ZvcihsZXQgZXI9MDtlcjxNYXRoLm1pbih6Lmxlbmd0aCxBLmxlbmd0aCk7ZXIrKyl5aWVsZCpFKGAke0x9LyR7ZXJ9YCx6W2VyXSxBW2VyXSl9ZnVuY3Rpb24qVChMLHosQSl7aWYoej09PUEpcmV0dXJuO3lpZWxkIHQoTCxBKX1mdW5jdGlvbipFKEwseixBKXtpZih3LklzUGxhaW5PYmplY3QoeikpcmV0dXJuIHlpZWxkKlYoTCx6LEEpO2lmKHcuSXNBcnJheSh6KSlyZXR1cm4geWllbGQqdShMLHosQSk7aWYody5Jc1R5cGVkQXJyYXkoeikpcmV0dXJuIHlpZWxkKk8oTCx6LEEpO2lmKHcuSXNWYWx1ZVR5cGUoeikpcmV0dXJuIHlpZWxkKlQoTCx6LEEpO3Rocm93IG5ldyBLKHopfXZhciBSPWZ1bmN0aW9uKEwseil7cmV0dXJuWy4uLkUoIiIsTCx6KV19LEM9ZnVuY3Rpb24oTCl7cmV0dXJuIEwubGVuZ3RoPjAmJkxbMF0ucGF0aD09PSIiJiZMWzBdLnR5cGU9PT0idXBkYXRlIn0seD1mdW5jdGlvbihMKXtyZXR1cm4gTC5sZW5ndGg9PT0wfSxvPWZ1bmN0aW9uKEwseil7aWYoQyh6KSlyZXR1cm4gcS5DbG9uZSh6WzBdLnZhbHVlKTtpZih4KHopKXJldHVybiBxLkNsb25lKEwpO2NvbnN0IEE9cS5DbG9uZShMKTtmb3IobGV0IGVyIG9mIHopc3dpdGNoKGVyLnR5cGUpe2Nhc2UiaW5zZXJ0Ijp7UC5WYWx1ZVBvaW50ZXIuU2V0KEEsZXIucGF0aCxlci52YWx1ZSk7YnJlYWt9Y2FzZSJ1cGRhdGUiOntQLlZhbHVlUG9pbnRlci5TZXQoQSxlci5wYXRoLGVyLnZhbHVlKTticmVha31jYXNlImRlbGV0ZSI6e1AuVmFsdWVQb2ludGVyLkRlbGV0ZShBLGVyLnBhdGgpO2JyZWFrfX1yZXR1cm4gQX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuUGF0Y2g9ci5EaWZmPXIuVmFsdWVEZWx0YVVuYWJsZVRvRGlmZlVua25vd25WYWx1ZT1yLlZhbHVlRGVsdGFPYmplY3RXaXRoU3ltYm9sS2V5RXJyb3I9ci5FZGl0PXIuRGVsZXRlPXIuVXBkYXRlPXIuSW5zZXJ0PXZvaWQgMDt2YXIgRz13cigpLFA9ajAoKSx3PXhyKCkscT11MCgpO3IuSW5zZXJ0PUcuVHlwZS5PYmplY3Qoe3R5cGU6Ry5UeXBlLkxpdGVyYWwoImluc2VydCIpLHBhdGg6Ry5UeXBlLlN0cmluZygpLHZhbHVlOkcuVHlwZS5Vbmtub3duKCl9KSxyLlVwZGF0ZT1HLlR5cGUuT2JqZWN0KHt0eXBlOkcuVHlwZS5MaXRlcmFsKCJ1cGRhdGUiKSxwYXRoOkcuVHlwZS5TdHJpbmcoKSx2YWx1ZTpHLlR5cGUuVW5rbm93bigpfSksci5EZWxldGU9Ry5UeXBlLk9iamVjdCh7dHlwZTpHLlR5cGUuTGl0ZXJhbCgiZGVsZXRlIikscGF0aDpHLlR5cGUuU3RyaW5nKCl9KSxyLkVkaXQ9Ry5UeXBlLlVuaW9uKFtyLkluc2VydCxyLlVwZGF0ZSxyLkRlbGV0ZV0pO2NsYXNzIEYgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihMKXtzdXBlcigiVmFsdWVEZWx0YTogQ2Fubm90IGRpZmYgb2JqZWN0cyB3aXRoIHN5bWJvbCBrZXlzIik7dGhpcy5rZXk9TH19ci5WYWx1ZURlbHRhT2JqZWN0V2l0aFN5bWJvbEtleUVycm9yPUY7Y2xhc3MgSyBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKEwpe3N1cGVyKCJWYWx1ZURlbHRhOiBVbmFibGUgdG8gY3JlYXRlIGRpZmYgZWRpdHMgZm9yIHVua25vd24gdmFsdWUiKTt0aGlzLnZhbHVlPUx9fXIuVmFsdWVEZWx0YVVuYWJsZVRvRGlmZlVua25vd25WYWx1ZT1LLHIuRGlmZj1SLHIuUGF0Y2g9b30pLE9uPWtyKChyKT0+e3ZhciB0PWZ1bmN0aW9uKFAsdyxxLEYpe2lmKCF4LklzUGxhaW5PYmplY3QocSkpUi5WYWx1ZVBvaW50ZXIuU2V0KFAsdyxDLkNsb25lKEYpKTtlbHNle2NvbnN0IEs9T2JqZWN0LmtleXMocSksTD1PYmplY3Qua2V5cyhGKTtmb3IobGV0IHogb2YgSylpZighTC5pbmNsdWRlcyh6KSlkZWxldGUgcVt6XTtmb3IobGV0IHogb2YgTClpZighSy5pbmNsdWRlcyh6KSlxW3pdPW51bGw7Zm9yKGxldCB6IG9mIEwpdShQLGAke3d9LyR7en1gLHFbel0sRlt6XSl9fSxmPWZ1bmN0aW9uKFAsdyxxLEYpe2lmKCF4LklzQXJyYXkocSkpUi5WYWx1ZVBvaW50ZXIuU2V0KFAsdyxDLkNsb25lKEYpKTtlbHNle2ZvcihsZXQgSz0wO0s8Ri5sZW5ndGg7SysrKXUoUCxgJHt3fS8ke0t9YCxxW0tdLEZbS10pO3Euc3BsaWNlKEYubGVuZ3RoKX19LGU9ZnVuY3Rpb24oUCx3LHEsRil7aWYoeC5Jc1R5cGVkQXJyYXkocSkmJnEubGVuZ3RoPT09Ri5sZW5ndGgpZm9yKGxldCBLPTA7SzxxLmxlbmd0aDtLKyspcVtLXT1GW0tdO2Vsc2UgUi5WYWx1ZVBvaW50ZXIuU2V0KFAsdyxDLkNsb25lKEYpKX0sVj1mdW5jdGlvbihQLHcscSxGKXtpZihxPT09RilyZXR1cm47Ui5WYWx1ZVBvaW50ZXIuU2V0KFAsdyxGKX0sdT1mdW5jdGlvbihQLHcscSxGKXtpZih4LklzQXJyYXkoRikpcmV0dXJuIGYoUCx3LHEsRik7aWYoeC5Jc1R5cGVkQXJyYXkoRikpcmV0dXJuIGUoUCx3LHEsRik7aWYoeC5Jc1BsYWluT2JqZWN0KEYpKXJldHVybiB0KFAsdyxxLEYpO2lmKHguSXNWYWx1ZVR5cGUoRikpcmV0dXJuIFYoUCx3LHEsRil9LE89ZnVuY3Rpb24oUCl7cmV0dXJuIHguSXNUeXBlZEFycmF5KFApfHx4LklzVmFsdWVUeXBlKFApfSxUPWZ1bmN0aW9uKFAsdyl7cmV0dXJuIHguSXNQbGFpbk9iamVjdChQKSYmeC5Jc0FycmF5KHcpfHx4LklzQXJyYXkoUCkmJnguSXNQbGFpbk9iamVjdCh3KX0sRT1mdW5jdGlvbihQLHcpe2lmKE8oUCl8fE8odykpdGhyb3cgbmV3IEc7aWYoVChQLHcpKXRocm93IG5ldyBvO3UoUCwiIixQLHcpfTtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5NdXRhdGU9ci5WYWx1ZU11dGF0ZUludmFsaWRSb290TXV0YXRpb25FcnJvcj1yLlZhbHVlTXV0YXRlVHlwZU1pc21hdGNoRXJyb3I9dm9pZCAwO3ZhciBSPWowKCksQz11MCgpLHg9eHIoKTtjbGFzcyBvIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoKXtzdXBlcigiVmFsdWVNdXRhdGU6IENhbm5vdCBhc3NpZ24gZHVlIHR5cGUgbWlzbWF0Y2ggb2YgYXNzaWduYWJsZSB2YWx1ZXMiKX19ci5WYWx1ZU11dGF0ZVR5cGVNaXNtYXRjaEVycm9yPW87Y2xhc3MgRyBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKCl7c3VwZXIoIlZhbHVlTXV0YXRlOiBPbmx5IG9iamVjdCBhbmQgYXJyYXkgdHlwZXMgY2FuIGJlIG11dGF0ZWQgYXQgdGhlIHJvb3QgbGV2ZWwiKX19ci5WYWx1ZU11dGF0ZUludmFsaWRSb290TXV0YXRpb25FcnJvcj1HLHIuTXV0YXRlPUV9KSxrbj1rcigocik9Pnt2YXIgdD1mdW5jdGlvbihFLFIpe2lmKCFULklzUGxhaW5PYmplY3QoUikpcmV0dXJuITE7Y29uc3QgQz1bLi4uT2JqZWN0LmtleXMoRSksLi4uT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhFKV0seD1bLi4uT2JqZWN0LmtleXMoUiksLi4uT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhSKV07aWYoQy5sZW5ndGghPT14Lmxlbmd0aClyZXR1cm4hMTtyZXR1cm4gQy5ldmVyeSgobyk9Pk8oRVtvXSxSW29dKSl9LGY9ZnVuY3Rpb24oRSxSKXtyZXR1cm4gVC5Jc0RhdGUoUikmJkUuZ2V0VGltZSgpPT09Ui5nZXRUaW1lKCl9LGU9ZnVuY3Rpb24oRSxSKXtpZighVC5Jc0FycmF5KFIpfHxFLmxlbmd0aCE9PVIubGVuZ3RoKXJldHVybiExO3JldHVybiBFLmV2ZXJ5KChDLHgpPT5PKEMsUlt4XSkpfSxWPWZ1bmN0aW9uKEUsUil7aWYoIVQuSXNUeXBlZEFycmF5KFIpfHxFLmxlbmd0aCE9PVIubGVuZ3RofHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoRSkuY29uc3RydWN0b3IubmFtZSE9PU9iamVjdC5nZXRQcm90b3R5cGVPZihSKS5jb25zdHJ1Y3Rvci5uYW1lKXJldHVybiExO3JldHVybiBFLmV2ZXJ5KChDLHgpPT5PKEMsUlt4XSkpfSx1PWZ1bmN0aW9uKEUsUil7cmV0dXJuIEU9PT1SfSxPPWZ1bmN0aW9uKEUsUil7aWYoVC5Jc1BsYWluT2JqZWN0KEUpKXJldHVybiB0KEUsUik7aWYoVC5Jc0RhdGUoRSkpcmV0dXJuIGYoRSxSKTtpZihULklzVHlwZWRBcnJheShFKSlyZXR1cm4gVihFLFIpO2lmKFQuSXNBcnJheShFKSlyZXR1cm4gZShFLFIpO2lmKFQuSXNWYWx1ZVR5cGUoRSkpcmV0dXJuIHUoRSxSKTt0aHJvdyBuZXcgRXJyb3IoIlZhbHVlRXF1YWxzOiBVbmFibGUgdG8gY29tcGFyZSB2YWx1ZSIpfTtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5FcXVhbD12b2lkIDA7dmFyIFQ9eHIoKTtyLkVxdWFsPU99KSxsMD1rcigocik9Pnt2YXIgdD1mdW5jdGlvbihpKXtyZXR1cm4gaVt1ci5LaW5kXT09PSJBbnkifHxpW3VyLktpbmRdPT09IlVua25vd24ifSxmPWZ1bmN0aW9uKGkpe3JldHVybiBpIT09dm9pZCAwfSxlPWZ1bmN0aW9uKGksbil7cmV0dXJuICQuVHlwZVN5c3RlbS5FeGFjdE9wdGlvbmFsUHJvcGVydHlUeXBlcz9uIGluIGk6aVtuXSE9PXZvaWQgMH0sVj1mdW5jdGlvbihpKXtjb25zdCBuPXRyLklzT2JqZWN0KGkpO3JldHVybiAkLlR5cGVTeXN0ZW0uQWxsb3dBcnJheU9iamVjdHM/bjpuJiYhdHIuSXNBcnJheShpKX0sdT1mdW5jdGlvbihpKXtyZXR1cm4gVihpKSYmIShpIGluc3RhbmNlb2YgRGF0ZSkmJiEoaSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpfSxPPWZ1bmN0aW9uKGkpe2NvbnN0IG49dHIuSXNOdW1iZXIoaSk7cmV0dXJuICQuVHlwZVN5c3RlbS5BbGxvd05hTj9uOm4mJk51bWJlci5pc0Zpbml0ZShpKX0sVD1mdW5jdGlvbihpKXtjb25zdCBuPXRyLklzVW5kZWZpbmVkKGkpO3JldHVybiAkLlR5cGVTeXN0ZW0uQWxsb3dWb2lkTnVsbD9ufHxpPT09bnVsbDpufSxFPWZ1bmN0aW9uKGksbixhKXtyZXR1cm4hMH0sUj1mdW5jdGlvbihpLG4sYSl7aWYoIUFycmF5LmlzQXJyYXkoYSkpcmV0dXJuITE7aWYoZihpLm1pbkl0ZW1zKSYmIShhLmxlbmd0aD49aS5taW5JdGVtcykpcmV0dXJuITE7aWYoZihpLm1heEl0ZW1zKSYmIShhLmxlbmd0aDw9aS5tYXhJdGVtcykpcmV0dXJuITE7aWYoIWEuZXZlcnkoKEIpPT5jcihpLml0ZW1zLG4sQikpKXJldHVybiExO2lmKGkudW5pcXVlSXRlbXM9PT0hMCYmIWZ1bmN0aW9uKCl7Y29uc3QgQj1uZXcgU2V0O2ZvcihsZXQgUSBvZiBhKXtjb25zdCBhcj1tLkhhc2goUSk7aWYoQi5oYXMoYXIpKXJldHVybiExO2Vsc2UgQi5hZGQoYXIpfXJldHVybiEwfSgpKXJldHVybiExO2lmKCEoZihpLmNvbnRhaW5zKXx8TyhpLm1pbkNvbnRhaW5zKXx8TyhpLm1heENvbnRhaW5zKSkpcmV0dXJuITA7Y29uc3QgYj1mKGkuY29udGFpbnMpP2kuY29udGFpbnM6dXIuVHlwZS5OZXZlcigpLGw9YS5yZWR1Y2UoKEIsUSk9PmNyKGIsbixRKT9CKzE6QiwwKTtpZihsPT09MClyZXR1cm4hMTtpZihPKGkubWluQ29udGFpbnMpJiZsPGkubWluQ29udGFpbnMpcmV0dXJuITE7aWYoTyhpLm1heENvbnRhaW5zKSYmbD5pLm1heENvbnRhaW5zKXJldHVybiExO3JldHVybiEwfSxDPWZ1bmN0aW9uKGksbixhKXtyZXR1cm4gVihhKSYmKFN5bWJvbC5hc3luY0l0ZXJhdG9yIGluIGEpfSx4PWZ1bmN0aW9uKGksbixhKXtpZighdHIuSXNCaWdJbnQoYSkpcmV0dXJuITE7aWYoZihpLm11bHRpcGxlT2YpJiZhJWkubXVsdGlwbGVPZiE9PUJpZ0ludCgwKSlyZXR1cm4hMTtpZihmKGkuZXhjbHVzaXZlTWluaW11bSkmJiEoYT5pLmV4Y2x1c2l2ZU1pbmltdW0pKXJldHVybiExO2lmKGYoaS5leGNsdXNpdmVNYXhpbXVtKSYmIShhPGkuZXhjbHVzaXZlTWF4aW11bSkpcmV0dXJuITE7aWYoZihpLm1pbmltdW0pJiYhKGE+PWkubWluaW11bSkpcmV0dXJuITE7aWYoZihpLm1heGltdW0pJiYhKGE8PWkubWF4aW11bSkpcmV0dXJuITE7cmV0dXJuITB9LG89ZnVuY3Rpb24oaSxuLGEpe3JldHVybiB0eXBlb2YgYT09PSJib29sZWFuIn0sRz1mdW5jdGlvbihpLG4sYSl7cmV0dXJuIGNyKGkucmV0dXJucyxuLGEucHJvdG90eXBlKX0sUD1mdW5jdGlvbihpLG4sYSl7aWYoIShhIGluc3RhbmNlb2YgRGF0ZSkpcmV0dXJuITE7aWYoIU8oYS5nZXRUaW1lKCkpKXJldHVybiExO2lmKGYoaS5leGNsdXNpdmVNaW5pbXVtVGltZXN0YW1wKSYmIShhLmdldFRpbWUoKT5pLmV4Y2x1c2l2ZU1pbmltdW1UaW1lc3RhbXApKXJldHVybiExO2lmKGYoaS5leGNsdXNpdmVNYXhpbXVtVGltZXN0YW1wKSYmIShhLmdldFRpbWUoKTxpLmV4Y2x1c2l2ZU1heGltdW1UaW1lc3RhbXApKXJldHVybiExO2lmKGYoaS5taW5pbXVtVGltZXN0YW1wKSYmIShhLmdldFRpbWUoKT49aS5taW5pbXVtVGltZXN0YW1wKSlyZXR1cm4hMTtpZihmKGkubWF4aW11bVRpbWVzdGFtcCkmJiEoYS5nZXRUaW1lKCk8PWkubWF4aW11bVRpbWVzdGFtcCkpcmV0dXJuITE7cmV0dXJuITB9LHc9ZnVuY3Rpb24oaSxuLGEpe3JldHVybiB0eXBlb2YgYT09PSJmdW5jdGlvbiJ9LHE9ZnVuY3Rpb24oaSxuLGEpe2lmKCF0ci5Jc0ludGVnZXIoYSkpcmV0dXJuITE7aWYoZihpLm11bHRpcGxlT2YpJiZhJWkubXVsdGlwbGVPZiE9PTApcmV0dXJuITE7aWYoZihpLmV4Y2x1c2l2ZU1pbmltdW0pJiYhKGE+aS5leGNsdXNpdmVNaW5pbXVtKSlyZXR1cm4hMTtpZihmKGkuZXhjbHVzaXZlTWF4aW11bSkmJiEoYTxpLmV4Y2x1c2l2ZU1heGltdW0pKXJldHVybiExO2lmKGYoaS5taW5pbXVtKSYmIShhPj1pLm1pbmltdW0pKXJldHVybiExO2lmKGYoaS5tYXhpbXVtKSYmIShhPD1pLm1heGltdW0pKXJldHVybiExO3JldHVybiEwfSxGPWZ1bmN0aW9uKGksbixhKXtjb25zdCBiPWkuYWxsT2YuZXZlcnkoKGwpPT5jcihsLG4sYSkpO2lmKGkudW5ldmFsdWF0ZWRQcm9wZXJ0aWVzPT09ITEpe2NvbnN0IGw9bmV3IFJlZ0V4cCh1ci5LZXlSZXNvbHZlci5SZXNvbHZlUGF0dGVybihpKSksQj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhhKS5ldmVyeSgoUSk9PmwudGVzdChRKSk7cmV0dXJuIGImJkJ9ZWxzZSBpZih1ci5UeXBlR3VhcmQuVFNjaGVtYShpLnVuZXZhbHVhdGVkUHJvcGVydGllcykpe2NvbnN0IGw9bmV3IFJlZ0V4cCh1ci5LZXlSZXNvbHZlci5SZXNvbHZlUGF0dGVybihpKSksQj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhhKS5ldmVyeSgoUSk9PmwudGVzdChRKXx8Y3IoaS51bmV2YWx1YXRlZFByb3BlcnRpZXMsbixhW1FdKSk7cmV0dXJuIGImJkJ9ZWxzZSByZXR1cm4gYn0sSz1mdW5jdGlvbihpLG4sYSl7cmV0dXJuIFYoYSkmJihTeW1ib2wuaXRlcmF0b3IgaW4gYSl9LEw9ZnVuY3Rpb24oaSxuLGEpe3JldHVybiBhPT09aS5jb25zdH0sej1mdW5jdGlvbihpLG4sYSl7cmV0dXJuITF9LEE9ZnVuY3Rpb24oaSxuLGEpe3JldHVybiFjcihpLm5vdCxuLGEpfSxlcj1mdW5jdGlvbihpLG4sYSl7cmV0dXJuIGE9PT1udWxsfSxPcj1mdW5jdGlvbihpLG4sYSl7aWYoIU8oYSkpcmV0dXJuITE7aWYoZihpLm11bHRpcGxlT2YpJiZhJWkubXVsdGlwbGVPZiE9PTApcmV0dXJuITE7aWYoZihpLmV4Y2x1c2l2ZU1pbmltdW0pJiYhKGE+aS5leGNsdXNpdmVNaW5pbXVtKSlyZXR1cm4hMTtpZihmKGkuZXhjbHVzaXZlTWF4aW11bSkmJiEoYTxpLmV4Y2x1c2l2ZU1heGltdW0pKXJldHVybiExO2lmKGYoaS5taW5pbXVtKSYmIShhPj1pLm1pbmltdW0pKXJldHVybiExO2lmKGYoaS5tYXhpbXVtKSYmIShhPD1pLm1heGltdW0pKXJldHVybiExO3JldHVybiEwfSxYPWZ1bmN0aW9uKGksbixhKXtpZighVihhKSlyZXR1cm4hMTtpZihmKGkubWluUHJvcGVydGllcykmJiEoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoYSkubGVuZ3RoPj1pLm1pblByb3BlcnRpZXMpKXJldHVybiExO2lmKGYoaS5tYXhQcm9wZXJ0aWVzKSYmIShPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhhKS5sZW5ndGg8PWkubWF4UHJvcGVydGllcykpcmV0dXJuITE7Y29uc3QgYj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhpLnByb3BlcnRpZXMpO2ZvcihsZXQgbCBvZiBiKXtjb25zdCBCPWkucHJvcGVydGllc1tsXTtpZihpLnJlcXVpcmVkJiZpLnJlcXVpcmVkLmluY2x1ZGVzKGwpKXtpZighY3IoQixuLGFbbF0pKXJldHVybiExO2lmKCh1ci5FeHRlbmRzVW5kZWZpbmVkLkNoZWNrKEIpfHx0KEIpKSYmIShsIGluIGEpKXJldHVybiExfWVsc2UgaWYoZShhLGwpJiYhY3IoQixuLGFbbF0pKXJldHVybiExfWlmKGkuYWRkaXRpb25hbFByb3BlcnRpZXM9PT0hMSl7Y29uc3QgbD1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhhKTtpZihpLnJlcXVpcmVkJiZpLnJlcXVpcmVkLmxlbmd0aD09PWIubGVuZ3RoJiZsLmxlbmd0aD09PWIubGVuZ3RoKXJldHVybiEwO2Vsc2UgcmV0dXJuIGwuZXZlcnkoKEIpPT5iLmluY2x1ZGVzKEIpKX1lbHNlIGlmKHR5cGVvZiBpLmFkZGl0aW9uYWxQcm9wZXJ0aWVzPT09Im9iamVjdCIpcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGEpLmV2ZXJ5KChsKT0+Yi5pbmNsdWRlcyhsKXx8Y3IoaS5hZGRpdGlvbmFsUHJvcGVydGllcyxuLGFbbF0pKTtlbHNlIHJldHVybiEwfSxIPWZ1bmN0aW9uKGksbixhKXtyZXR1cm4gdHlwZW9mIGE9PT0ib2JqZWN0IiYmdHlwZW9mIGEudGhlbj09PSJmdW5jdGlvbiJ9LHNyPWZ1bmN0aW9uKGksbixhKXtpZighdShhKSlyZXR1cm4hMTtpZihmKGkubWluUHJvcGVydGllcykmJiEoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoYSkubGVuZ3RoPj1pLm1pblByb3BlcnRpZXMpKXJldHVybiExO2lmKGYoaS5tYXhQcm9wZXJ0aWVzKSYmIShPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhhKS5sZW5ndGg8PWkubWF4UHJvcGVydGllcykpcmV0dXJuITE7Y29uc3RbYixsXT1PYmplY3QuZW50cmllcyhpLnBhdHRlcm5Qcm9wZXJ0aWVzKVswXSxCPW5ldyBSZWdFeHAoYik7cmV0dXJuIE9iamVjdC5lbnRyaWVzKGEpLmV2ZXJ5KChbUSxhcl0pPT57aWYoQi50ZXN0KFEpKXJldHVybiBjcihsLG4sYXIpO2lmKHR5cGVvZiBpLmFkZGl0aW9uYWxQcm9wZXJ0aWVzPT09Im9iamVjdCIpcmV0dXJuIGNyKGkuYWRkaXRpb25hbFByb3BlcnRpZXMsbixhcik7aWYoaS5hZGRpdGlvbmFsUHJvcGVydGllcz09PSExKXJldHVybiExO3JldHVybiEwfSl9LHY9ZnVuY3Rpb24oaSxuLGEpe2NvbnN0IGI9bi5maW5kSW5kZXgoKEIpPT5CLiRpZD09PWkuJHJlZik7aWYoYj09PS0xKXRocm93IG5ldyBjKGkpO2NvbnN0IGw9bltiXTtyZXR1cm4gY3IobCxuLGEpfSxrPWZ1bmN0aW9uKGksbixhKXtpZighdHIuSXNTdHJpbmcoYSkpcmV0dXJuITE7aWYoZihpLm1pbkxlbmd0aCkpe2lmKCEoYS5sZW5ndGg+PWkubWluTGVuZ3RoKSlyZXR1cm4hMX1pZihmKGkubWF4TGVuZ3RoKSl7aWYoIShhLmxlbmd0aDw9aS5tYXhMZW5ndGgpKXJldHVybiExfWlmKGYoaS5wYXR0ZXJuKSl7aWYoIW5ldyBSZWdFeHAoaS5wYXR0ZXJuKS50ZXN0KGEpKXJldHVybiExfWlmKGYoaS5mb3JtYXQpKXtpZighdXIuRm9ybWF0UmVnaXN0cnkuSGFzKGkuZm9ybWF0KSlyZXR1cm4hMTtyZXR1cm4gdXIuRm9ybWF0UmVnaXN0cnkuR2V0KGkuZm9ybWF0KShhKX1yZXR1cm4hMH0seT1mdW5jdGlvbihpLG4sYSl7aWYodHlwZW9mIGEhPT0ic3ltYm9sIilyZXR1cm4hMTtyZXR1cm4hMH0sXz1mdW5jdGlvbihpLG4sYSl7aWYoIXRyLklzU3RyaW5nKGEpKXJldHVybiExO3JldHVybiBuZXcgUmVnRXhwKGkucGF0dGVybikudGVzdChhKX0sUz1mdW5jdGlvbihpLG4sYSl7Y29uc3QgYj1uLmZpbmRJbmRleCgoQik9PkIuJGlkPT09aS4kcmVmKTtpZihiPT09LTEpdGhyb3cgbmV3IGMoaSk7Y29uc3QgbD1uW2JdO3JldHVybiBjcihsLG4sYSl9LGo9ZnVuY3Rpb24oaSxuLGEpe2lmKCF0ci5Jc0FycmF5KGEpKXJldHVybiExO2lmKGkuaXRlbXM9PT12b2lkIDAmJmEubGVuZ3RoIT09MClyZXR1cm4hMTtpZihhLmxlbmd0aCE9PWkubWF4SXRlbXMpcmV0dXJuITE7aWYoIWkuaXRlbXMpcmV0dXJuITA7Zm9yKGxldCBiPTA7YjxpLml0ZW1zLmxlbmd0aDtiKyspaWYoIWNyKGkuaXRlbXNbYl0sbixhW2JdKSlyZXR1cm4hMTtyZXR1cm4hMH0sTj1mdW5jdGlvbihpLG4sYSl7cmV0dXJuIGE9PT12b2lkIDB9LFo9ZnVuY3Rpb24oaSxuLGEpe3JldHVybiBpLmFueU9mLnNvbWUoKGIpPT5jcihiLG4sYSkpfSxZPWZ1bmN0aW9uKGksbixhKXtpZighKGEgaW5zdGFuY2VvZiBVaW50OEFycmF5KSlyZXR1cm4hMTtpZihmKGkubWF4Qnl0ZUxlbmd0aCkmJiEoYS5sZW5ndGg8PWkubWF4Qnl0ZUxlbmd0aCkpcmV0dXJuITE7aWYoZihpLm1pbkJ5dGVMZW5ndGgpJiYhKGEubGVuZ3RoPj1pLm1pbkJ5dGVMZW5ndGgpKXJldHVybiExO3JldHVybiEwfSxEPWZ1bmN0aW9uKGksbixhKXtyZXR1cm4hMH0sSj1mdW5jdGlvbihpLG4sYSl7cmV0dXJuIFQoYSl9LG5yPWZ1bmN0aW9uKGksbixhKXtpZighdXIuVHlwZVJlZ2lzdHJ5LkhhcyhpW3VyLktpbmRdKSlyZXR1cm4hMTtyZXR1cm4gdXIuVHlwZVJlZ2lzdHJ5LkdldChpW3VyLktpbmRdKShpLGEpfSxjcj1mdW5jdGlvbihpLG4sYSl7Y29uc3QgYj1mKGkuJGlkKT9bLi4ubixpXTpuLGw9aTtzd2l0Y2gobFt1ci5LaW5kXSl7Y2FzZSJBbnkiOnJldHVybiBFKGwsYixhKTtjYXNlIkFycmF5IjpyZXR1cm4gUihsLGIsYSk7Y2FzZSJBc3luY0l0ZXJhdG9yIjpyZXR1cm4gQyhsLGIsYSk7Y2FzZSJCaWdJbnQiOnJldHVybiB4KGwsYixhKTtjYXNlIkJvb2xlYW4iOnJldHVybiBvKGwsYixhKTtjYXNlIkNvbnN0cnVjdG9yIjpyZXR1cm4gRyhsLGIsYSk7Y2FzZSJEYXRlIjpyZXR1cm4gUChsLGIsYSk7Y2FzZSJGdW5jdGlvbiI6cmV0dXJuIHcobCxiLGEpO2Nhc2UiSW50ZWdlciI6cmV0dXJuIHEobCxiLGEpO2Nhc2UiSW50ZXJzZWN0IjpyZXR1cm4gRihsLGIsYSk7Y2FzZSJJdGVyYXRvciI6cmV0dXJuIEsobCxiLGEpO2Nhc2UiTGl0ZXJhbCI6cmV0dXJuIEwobCxiLGEpO2Nhc2UiTmV2ZXIiOnJldHVybiB6KGwsYixhKTtjYXNlIk5vdCI6cmV0dXJuIEEobCxiLGEpO2Nhc2UiTnVsbCI6cmV0dXJuIGVyKGwsYixhKTtjYXNlIk51bWJlciI6cmV0dXJuIE9yKGwsYixhKTtjYXNlIk9iamVjdCI6cmV0dXJuIFgobCxiLGEpO2Nhc2UiUHJvbWlzZSI6cmV0dXJuIEgobCxiLGEpO2Nhc2UiUmVjb3JkIjpyZXR1cm4gc3IobCxiLGEpO2Nhc2UiUmVmIjpyZXR1cm4gdihsLGIsYSk7Y2FzZSJTdHJpbmciOnJldHVybiBrKGwsYixhKTtjYXNlIlN5bWJvbCI6cmV0dXJuIHkobCxiLGEpO2Nhc2UiVGVtcGxhdGVMaXRlcmFsIjpyZXR1cm4gXyhsLGIsYSk7Y2FzZSJUaGlzIjpyZXR1cm4gUyhsLGIsYSk7Y2FzZSJUdXBsZSI6cmV0dXJuIGoobCxiLGEpO2Nhc2UiVW5kZWZpbmVkIjpyZXR1cm4gTihsLGIsYSk7Y2FzZSJVbmlvbiI6cmV0dXJuIFoobCxiLGEpO2Nhc2UiVWludDhBcnJheSI6cmV0dXJuIFkobCxiLGEpO2Nhc2UiVW5rbm93biI6cmV0dXJuIEQobCxiLGEpO2Nhc2UiVm9pZCI6cmV0dXJuIEoobCxiLGEpO2RlZmF1bHQ6aWYoIXVyLlR5cGVSZWdpc3RyeS5IYXMobFt1ci5LaW5kXSkpdGhyb3cgbmV3IGhyKGwpO3JldHVybiBucihsLGIsYSl9fSxVPWZ1bmN0aW9uKC4uLmkpe3JldHVybiBpLmxlbmd0aD09PTM/Y3IoaVswXSxpWzFdLGlbMl0pOmNyKGlbMF0sW10saVsxXSl9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLkNoZWNrPXIuVmFsdWVDaGVja0RlcmVmZXJlbmNlRXJyb3I9ci5WYWx1ZUNoZWNrVW5rbm93blR5cGVFcnJvcj12b2lkIDA7dmFyICQ9VDAoKSx1cj13cigpLHRyPXhyKCksbT1hMCgpO2NsYXNzIGhyIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoaSl7c3VwZXIoYFZhbHVlQ2hlY2s6ICR7aVt1ci5LaW5kXT9gVW5rbm93biB0eXBlICcke2lbdXIuS2luZF19J2A6IlVua25vd24gdHlwZSJ9YCk7dGhpcy5zY2hlbWE9aX19ci5WYWx1ZUNoZWNrVW5rbm93blR5cGVFcnJvcj1ocjtjbGFzcyBjIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoaSl7c3VwZXIoYFZhbHVlQ2hlY2s6IFVuYWJsZSB0byBkZXJlZmVyZW5jZSB0eXBlIHdpdGggJGlkICcke2kuJHJlZn0nYCk7dGhpcy5zY2hlbWE9aX19ci5WYWx1ZUNoZWNrRGVyZWZlcmVuY2VFcnJvcj1jLHIuQ2hlY2s9VX0pLEIwPWtyKChyKT0+e3ZhciB0PWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNlIHJldHVybnt9fSxmPWZ1bmN0aW9uKGMsaSl7aWYoYy51bmlxdWVJdGVtcz09PSEwJiYhRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpdGhyb3cgbmV3IEVycm9yKCJWYWx1ZUNyZWF0ZS5BcnJheTogQXJyYXkgd2l0aCB0aGUgdW5pcXVlSXRlbXMgY29uc3RyYWludCByZXF1aXJlcyBhIGRlZmF1bHQgdmFsdWUiKTtlbHNlIGlmKCgiY29udGFpbnMiaW4gYykmJiFELkhhc1Byb3BlcnR5S2V5KGMsImRlZmF1bHQiKSl0aHJvdyBuZXcgRXJyb3IoIlZhbHVlQ3JlYXRlLkFycmF5OiBBcnJheSB3aXRoIHRoZSBjb250YWlucyBjb25zdHJhaW50IHJlcXVpcmVzIGEgZGVmYXVsdCB2YWx1ZSIpO2Vsc2UgaWYoImRlZmF1bHQiaW4gYylyZXR1cm4gYy5kZWZhdWx0O2Vsc2UgaWYoYy5taW5JdGVtcyE9PXZvaWQgMClyZXR1cm4gQXJyYXkuZnJvbSh7bGVuZ3RoOmMubWluSXRlbXN9KS5tYXAoKG4pPT57cmV0dXJuIGooYy5pdGVtcyxpKX0pO2Vsc2UgcmV0dXJuW119LGU9ZnVuY3Rpb24oYyxpKXtpZihELkhhc1Byb3BlcnR5S2V5KGMsImRlZmF1bHQiKSlyZXR1cm4gYy5kZWZhdWx0O2Vsc2UgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uKigpe30oKX0sVj1mdW5jdGlvbihjLGkpe2lmKEQuSGFzUHJvcGVydHlLZXkoYywiZGVmYXVsdCIpKXJldHVybiBjLmRlZmF1bHQ7ZWxzZSByZXR1cm4gQmlnSW50KDApfSx1PWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNlIHJldHVybiExfSxPPWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNle2NvbnN0IG49aihjLnJldHVybnMsaSk7aWYodHlwZW9mIG49PT0ib2JqZWN0IiYmIUFycmF5LmlzQXJyYXkobikpcmV0dXJuIGNsYXNze2NvbnN0cnVjdG9yKCl7Zm9yKGxldFthLGJdb2YgT2JqZWN0LmVudHJpZXMobikpe2NvbnN0IGw9dGhpcztsW2FdPWJ9fX07ZWxzZSByZXR1cm4gY2xhc3N7fX19LFQ9ZnVuY3Rpb24oYyxpKXtpZihELkhhc1Byb3BlcnR5S2V5KGMsImRlZmF1bHQiKSlyZXR1cm4gYy5kZWZhdWx0O2Vsc2UgaWYoYy5taW5pbXVtVGltZXN0YW1wIT09dm9pZCAwKXJldHVybiBuZXcgRGF0ZShjLm1pbmltdW1UaW1lc3RhbXApO2Vsc2UgcmV0dXJuIG5ldyBEYXRlKDApfSxFPWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNlIHJldHVybigpPT5qKGMucmV0dXJucyxpKX0sUj1mdW5jdGlvbihjLGkpe2lmKEQuSGFzUHJvcGVydHlLZXkoYywiZGVmYXVsdCIpKXJldHVybiBjLmRlZmF1bHQ7ZWxzZSBpZihjLm1pbmltdW0hPT12b2lkIDApcmV0dXJuIGMubWluaW11bTtlbHNlIHJldHVybiAwfSxDPWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNle2NvbnN0IG49Yy5hbGxPZi5yZWR1Y2UoKGEsYik9Pntjb25zdCBsPWooYixpKTtyZXR1cm4gdHlwZW9mIGw9PT0ib2JqZWN0Ij97Li4uYSwuLi5sfTpsfSx7fSk7aWYoIVkuQ2hlY2soYyxpLG4pKXRocm93IG5ldyBVKGMpO3JldHVybiBufX0seD1mdW5jdGlvbihjLGkpe2lmKEQuSGFzUHJvcGVydHlLZXkoYywiZGVmYXVsdCIpKXJldHVybiBjLmRlZmF1bHQ7ZWxzZSByZXR1cm4gZnVuY3Rpb24qKCl7fSgpfSxvPWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNlIHJldHVybiBjLmNvbnN0fSxHPWZ1bmN0aW9uKGMsaSl7dGhyb3cgbmV3IG5yKGMpfSxQPWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNlIHRocm93IG5ldyBjcihjKX0sdz1mdW5jdGlvbihjLGkpe2lmKEQuSGFzUHJvcGVydHlLZXkoYywiZGVmYXVsdCIpKXJldHVybiBjLmRlZmF1bHQ7ZWxzZSByZXR1cm4gbnVsbH0scT1mdW5jdGlvbihjLGkpe2lmKEQuSGFzUHJvcGVydHlLZXkoYywiZGVmYXVsdCIpKXJldHVybiBjLmRlZmF1bHQ7ZWxzZSBpZihjLm1pbmltdW0hPT12b2lkIDApcmV0dXJuIGMubWluaW11bTtlbHNlIHJldHVybiAwfSxGPWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNle2NvbnN0IG49bmV3IFNldChjLnJlcXVpcmVkKTtyZXR1cm4gYy5kZWZhdWx0fHxPYmplY3QuZW50cmllcyhjLnByb3BlcnRpZXMpLnJlZHVjZSgoYSxbYixsXSk9PntyZXR1cm4gbi5oYXMoYik/ey4uLmEsW2JdOmoobCxpKX06ey4uLmF9fSx7fSl9fSxLPWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNlIHJldHVybiBQcm9taXNlLnJlc29sdmUoaihjLml0ZW0saSkpfSxMPWZ1bmN0aW9uKGMsaSl7Y29uc3RbbixhXT1PYmplY3QuZW50cmllcyhjLnBhdHRlcm5Qcm9wZXJ0aWVzKVswXTtpZihELkhhc1Byb3BlcnR5S2V5KGMsImRlZmF1bHQiKSlyZXR1cm4gYy5kZWZhdWx0O2Vsc2UgaWYoIShuPT09Wi5QYXR0ZXJuU3RyaW5nRXhhY3R8fG49PT1aLlBhdHRlcm5OdW1iZXJFeGFjdCkpcmV0dXJuIG4uc2xpY2UoMSxuLmxlbmd0aC0xKS5zcGxpdCgifCIpLnJlZHVjZSgoYixsKT0+e3JldHVybnsuLi5iLFtsXTpqKGEsaSl9fSx7fSk7ZWxzZSByZXR1cm57fX0sej1mdW5jdGlvbihjLGkpe2lmKEQuSGFzUHJvcGVydHlLZXkoYywiZGVmYXVsdCIpKXJldHVybiBjLmRlZmF1bHQ7ZWxzZXtjb25zdCBuPWkuZmluZEluZGV4KChiKT0+Yi4kaWQ9PT1jLiRyZWYpO2lmKG49PT0tMSl0aHJvdyBuZXcgdXIoYyk7Y29uc3QgYT1pW25dO3JldHVybiBqKGEsaSl9fSxBPWZ1bmN0aW9uKGMsaSl7aWYoYy5wYXR0ZXJuIT09dm9pZCAwKWlmKCFELkhhc1Byb3BlcnR5S2V5KGMsImRlZmF1bHQiKSl0aHJvdyBuZXcgRXJyb3IoIlZhbHVlQ3JlYXRlLlN0cmluZzogU3RyaW5nIHR5cGVzIHdpdGggcGF0dGVybnMgbXVzdCBzcGVjaWZ5IGEgZGVmYXVsdCB2YWx1ZSIpO2Vsc2UgcmV0dXJuIGMuZGVmYXVsdDtlbHNlIGlmKGMuZm9ybWF0IT09dm9pZCAwKWlmKCFELkhhc1Byb3BlcnR5S2V5KGMsImRlZmF1bHQiKSl0aHJvdyBuZXcgRXJyb3IoIlZhbHVlQ3JlYXRlLlN0cmluZzogU3RyaW5nIHR5cGVzIHdpdGggZm9ybWF0cyBtdXN0IHNwZWNpZnkgYSBkZWZhdWx0IHZhbHVlIik7ZWxzZSByZXR1cm4gYy5kZWZhdWx0O2Vsc2UgaWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNlIGlmKGMubWluTGVuZ3RoIT09dm9pZCAwKXJldHVybiBBcnJheS5mcm9tKHtsZW5ndGg6Yy5taW5MZW5ndGh9KS5tYXAoKCk9PiIuIikuam9pbigiIik7ZWxzZSByZXR1cm4iIn0sZXI9ZnVuY3Rpb24oYyxpKXtpZihELkhhc1Byb3BlcnR5S2V5KGMsImRlZmF1bHQiKSlyZXR1cm4gYy5kZWZhdWx0O2Vsc2UgaWYoInZhbHVlImluIGMpcmV0dXJuIFN5bWJvbC5mb3IoYy52YWx1ZSk7ZWxzZSByZXR1cm4gU3ltYm9sKCl9LE9yPWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtjb25zdCBuPVouVGVtcGxhdGVMaXRlcmFsUGFyc2VyLlBhcnNlRXhhY3QoYy5wYXR0ZXJuKTtpZighWi5UZW1wbGF0ZUxpdGVyYWxGaW5pdGUuQ2hlY2sobikpdGhyb3cgbmV3ICQoYyk7cmV0dXJuIFouVGVtcGxhdGVMaXRlcmFsR2VuZXJhdG9yLkdlbmVyYXRlKG4pLm5leHQoKS52YWx1ZX0sWD1mdW5jdGlvbihjLGkpe2lmKGhyKys+bSl0aHJvdyBuZXcgdHIoYyxtKTtpZihELkhhc1Byb3BlcnR5S2V5KGMsImRlZmF1bHQiKSlyZXR1cm4gYy5kZWZhdWx0O2Vsc2V7Y29uc3Qgbj1pLmZpbmRJbmRleCgoYik9PmIuJGlkPT09Yy4kcmVmKTtpZihuPT09LTEpdGhyb3cgbmV3IHVyKGMpO2NvbnN0IGE9aVtuXTtyZXR1cm4gaihhLGkpfX0sSD1mdW5jdGlvbihjLGkpe2lmKEQuSGFzUHJvcGVydHlLZXkoYywiZGVmYXVsdCIpKXJldHVybiBjLmRlZmF1bHQ7aWYoYy5pdGVtcz09PXZvaWQgMClyZXR1cm5bXTtlbHNlIHJldHVybiBBcnJheS5mcm9tKHtsZW5ndGg6Yy5taW5JdGVtc30pLm1hcCgobixhKT0+aihjLml0ZW1zW2FdLGkpKX0sc3I9ZnVuY3Rpb24oYyxpKXtpZihELkhhc1Byb3BlcnR5S2V5KGMsImRlZmF1bHQiKSlyZXR1cm4gYy5kZWZhdWx0O2Vsc2UgcmV0dXJufSx2PWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNlIGlmKGMuYW55T2YubGVuZ3RoPT09MCl0aHJvdyBuZXcgRXJyb3IoIlZhbHVlQ3JlYXRlLlVuaW9uOiBDYW5ub3QgY3JlYXRlIFVuaW9uIHdpdGggemVybyB2YXJpYW50cyIpO2Vsc2UgcmV0dXJuIGooYy5hbnlPZlswXSxpKX0saz1mdW5jdGlvbihjLGkpe2lmKEQuSGFzUHJvcGVydHlLZXkoYywiZGVmYXVsdCIpKXJldHVybiBjLmRlZmF1bHQ7ZWxzZSBpZihjLm1pbkJ5dGVMZW5ndGghPT12b2lkIDApcmV0dXJuIG5ldyBVaW50OEFycmF5KGMubWluQnl0ZUxlbmd0aCk7ZWxzZSByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoMCl9LHk9ZnVuY3Rpb24oYyxpKXtpZihELkhhc1Byb3BlcnR5S2V5KGMsImRlZmF1bHQiKSlyZXR1cm4gYy5kZWZhdWx0O2Vsc2UgcmV0dXJue319LF89ZnVuY3Rpb24oYyxpKXtpZihELkhhc1Byb3BlcnR5S2V5KGMsImRlZmF1bHQiKSlyZXR1cm4gYy5kZWZhdWx0O2Vsc2UgcmV0dXJufSxTPWZ1bmN0aW9uKGMsaSl7aWYoRC5IYXNQcm9wZXJ0eUtleShjLCJkZWZhdWx0IikpcmV0dXJuIGMuZGVmYXVsdDtlbHNlIHRocm93IG5ldyBFcnJvcigiVmFsdWVDcmVhdGU6IFVzZXIgZGVmaW5lZCB0eXBlcyBtdXN0IHNwZWNpZnkgYSBkZWZhdWx0IHZhbHVlIil9LGo9ZnVuY3Rpb24oYyxpKXtjb25zdCBuPUQuSXNTdHJpbmcoYy4kaWQpP1suLi5pLGNdOmksYT1jO3N3aXRjaChhW1ouS2luZF0pe2Nhc2UiQW55IjpyZXR1cm4gdChhLG4pO2Nhc2UiQXJyYXkiOnJldHVybiBmKGEsbik7Y2FzZSJBc3luY0l0ZXJhdG9yIjpyZXR1cm4gZShhLG4pO2Nhc2UiQmlnSW50IjpyZXR1cm4gVihhLG4pO2Nhc2UiQm9vbGVhbiI6cmV0dXJuIHUoYSxuKTtjYXNlIkNvbnN0cnVjdG9yIjpyZXR1cm4gTyhhLG4pO2Nhc2UiRGF0ZSI6cmV0dXJuIFQoYSxuKTtjYXNlIkZ1bmN0aW9uIjpyZXR1cm4gRShhLG4pO2Nhc2UiSW50ZWdlciI6cmV0dXJuIFIoYSxuKTtjYXNlIkludGVyc2VjdCI6cmV0dXJuIEMoYSxuKTtjYXNlIkl0ZXJhdG9yIjpyZXR1cm4geChhLG4pO2Nhc2UiTGl0ZXJhbCI6cmV0dXJuIG8oYSxuKTtjYXNlIk5ldmVyIjpyZXR1cm4gRyhhLG4pO2Nhc2UiTm90IjpyZXR1cm4gUChhLG4pO2Nhc2UiTnVsbCI6cmV0dXJuIHcoYSxuKTtjYXNlIk51bWJlciI6cmV0dXJuIHEoYSxuKTtjYXNlIk9iamVjdCI6cmV0dXJuIEYoYSxuKTtjYXNlIlByb21pc2UiOnJldHVybiBLKGEsbik7Y2FzZSJSZWNvcmQiOnJldHVybiBMKGEsbik7Y2FzZSJSZWYiOnJldHVybiB6KGEsbik7Y2FzZSJTdHJpbmciOnJldHVybiBBKGEsbik7Y2FzZSJTeW1ib2wiOnJldHVybiBlcihhLG4pO2Nhc2UiVGVtcGxhdGVMaXRlcmFsIjpyZXR1cm4gT3IoYSxuKTtjYXNlIlRoaXMiOnJldHVybiBYKGEsbik7Y2FzZSJUdXBsZSI6cmV0dXJuIEgoYSxuKTtjYXNlIlVuZGVmaW5lZCI6cmV0dXJuIHNyKGEsbik7Y2FzZSJVbmlvbiI6cmV0dXJuIHYoYSxuKTtjYXNlIlVpbnQ4QXJyYXkiOnJldHVybiBrKGEsbik7Y2FzZSJVbmtub3duIjpyZXR1cm4geShhLG4pO2Nhc2UiVm9pZCI6cmV0dXJuIF8oYSxuKTtkZWZhdWx0OmlmKCFaLlR5cGVSZWdpc3RyeS5IYXMoYVtaLktpbmRdKSl0aHJvdyBuZXcgSihhKTtyZXR1cm4gUyhhLG4pfX0sTj1mdW5jdGlvbiguLi5jKXtyZXR1cm4gaHI9MCxjLmxlbmd0aD09PTI/aihjWzBdLGNbMV0pOmooY1swXSxbXSl9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLkNyZWF0ZT1yLlZhbHVlQ3JlYXRlUmVjdXJzaXZlSW5zdGFudGlhdGlvbkVycm9yPXIuVmFsdWVDcmVhdGVEZXJlZmVyZW5jZUVycm9yPXIuVmFsdWVDcmVhdGVUZW1wYXRlTGl0ZXJhbFR5cGVFcnJvcj1yLlZhbHVlQ3JlYXRlSW50ZXJzZWN0VHlwZUVycm9yPXIuVmFsdWVDcmVhdGVOb3RUeXBlRXJyb3I9ci5WYWx1ZUNyZWF0ZU5ldmVyVHlwZUVycm9yPXIuVmFsdWVDcmVhdGVVbmtub3duVHlwZUVycm9yPXZvaWQgMDt2YXIgWj13cigpLFk9bDAoKSxEPXhyKCk7Y2xhc3MgSiBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKGMpe3N1cGVyKCJWYWx1ZUNyZWF0ZTogVW5rbm93biB0eXBlIik7dGhpcy5zY2hlbWE9Y319ci5WYWx1ZUNyZWF0ZVVua25vd25UeXBlRXJyb3I9SjtjbGFzcyBuciBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKGMpe3N1cGVyKCJWYWx1ZUNyZWF0ZTogTmV2ZXIgdHlwZXMgY2Fubm90IGJlIGNyZWF0ZWQiKTt0aGlzLnNjaGVtYT1jfX1yLlZhbHVlQ3JlYXRlTmV2ZXJUeXBlRXJyb3I9bnI7Y2xhc3MgY3IgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihjKXtzdXBlcigiVmFsdWVDcmVhdGU6IE5vdCB0eXBlcyBtdXN0IGhhdmUgYSBkZWZhdWx0IHZhbHVlIik7dGhpcy5zY2hlbWE9Y319ci5WYWx1ZUNyZWF0ZU5vdFR5cGVFcnJvcj1jcjtjbGFzcyBVIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoYyl7c3VwZXIoIlZhbHVlQ3JlYXRlOiBJbnRlcnNlY3QgcHJvZHVjZWQgaW52YWxpZCB2YWx1ZS4gQ29uc2lkZXIgdXNpbmcgYSBkZWZhdWx0IHZhbHVlLiIpO3RoaXMuc2NoZW1hPWN9fXIuVmFsdWVDcmVhdGVJbnRlcnNlY3RUeXBlRXJyb3I9VTtjbGFzcyAkIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoYyl7c3VwZXIoIlZhbHVlQ3JlYXRlOiBDYW4gb25seSBjcmVhdGUgdGVtcGxhdGUgbGl0ZXJhbCB2YWx1ZXMgZnJvbSBwYXR0ZXJucyB0aGF0IHByb2R1Y2UgZmluaXRlIHNlcXVlbmNlcy4gQ29uc2lkZXIgdXNpbmcgYSBkZWZhdWx0IHZhbHVlLiIpO3RoaXMuc2NoZW1hPWN9fXIuVmFsdWVDcmVhdGVUZW1wYXRlTGl0ZXJhbFR5cGVFcnJvcj0kO2NsYXNzIHVyIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoYyl7c3VwZXIoYFZhbHVlQ3JlYXRlOiBVbmFibGUgdG8gZGVyZWZlcmVuY2UgdHlwZSB3aXRoICRpZCAnJHtjLiRyZWZ9J2ApO3RoaXMuc2NoZW1hPWN9fXIuVmFsdWVDcmVhdGVEZXJlZmVyZW5jZUVycm9yPXVyO2NsYXNzIHRyIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoYyxpKXtzdXBlcigiVmFsdWVDcmVhdGU6IFZhbHVlIGNhbm5vdCBiZSBjcmVhdGVkIGFzIHJlY3Vyc2l2ZSB0eXBlIG1heSBwcm9kdWNlIHZhbHVlIG9mIGluZmluaXRlIHNpemUuIENvbnNpZGVyIHVzaW5nIGEgZGVmYXVsdC4iKTt0aGlzLnNjaGVtYT1jLHRoaXMucmVjdXJzaXZlTWF4RGVwdGg9aX19ci5WYWx1ZUNyZWF0ZVJlY3Vyc2l2ZUluc3RhbnRpYXRpb25FcnJvcj10cjt2YXIgbT01MTIsaHI9MDtyLkNyZWF0ZT1OfSksRW49a3IoKHIpPT57dmFyIHQ9ZnVuY3Rpb24oYyxpLG4pe3JldHVybiBELkNoZWNrKGMsaSxuKT9KLkNsb25lKG4pOlkuQ3JlYXRlKGMsaSl9LGY9ZnVuY3Rpb24oYyxpLG4pe2lmKEQuQ2hlY2soYyxpLG4pKXJldHVybiBKLkNsb25lKG4pO2NvbnN0IGE9bnIuSXNBcnJheShuKT9KLkNsb25lKG4pOlkuQ3JlYXRlKGMsaSksYj1uci5Jc051bWJlcihjLm1pbkl0ZW1zKSYmYS5sZW5ndGg8Yy5taW5JdGVtcz9bLi4uYSwuLi5BcnJheS5mcm9tKHtsZW5ndGg6Yy5taW5JdGVtcy1hLmxlbmd0aH0sKCk9Pm51bGwpXTphLGw9KG5yLklzTnVtYmVyKGMubWF4SXRlbXMpJiZiLmxlbmd0aD5jLm1heEl0ZW1zP2Iuc2xpY2UoMCxjLm1heEl0ZW1zKTpiKS5tYXAoKFEpPT5qKGMuaXRlbXMsaSxRKSk7aWYoYy51bmlxdWVJdGVtcyE9PSEwKXJldHVybiBsO2NvbnN0IEI9Wy4uLm5ldyBTZXQobCldO2lmKCFELkNoZWNrKGMsaSxCKSl0aHJvdyBuZXcgVShjLEIpO3JldHVybiBCfSxlPWZ1bmN0aW9uKGMsaSxuKXtyZXR1cm4gRC5DaGVjayhjLGksbik/bjpZLkNyZWF0ZShjLGkpfSxWPWZ1bmN0aW9uKGMsaSxuKXtyZXR1cm4gRC5DaGVjayhjLGksbik/bjpZLkNyZWF0ZShjLGkpfSx1PWZ1bmN0aW9uKGMsaSxuKXtyZXR1cm4gRC5DaGVjayhjLGksbik/bjpZLkNyZWF0ZShjLGkpfSxPPWZ1bmN0aW9uKGMsaSxuKXtpZihELkNoZWNrKGMsaSxuKSlyZXR1cm4gWS5DcmVhdGUoYyxpKTtjb25zdCBhPW5ldyBTZXQoYy5yZXR1cm5zLnJlcXVpcmVkfHxbXSksYj1mdW5jdGlvbigpe307Zm9yKGxldFtsLEJdb2YgT2JqZWN0LmVudHJpZXMoYy5yZXR1cm5zLnByb3BlcnRpZXMpKXtpZighYS5oYXMobCkmJm4ucHJvdG90eXBlW2xdPT09dm9pZCAwKWNvbnRpbnVlO2IucHJvdG90eXBlW2xdPWooQixpLG4ucHJvdG90eXBlW2xdKX1yZXR1cm4gYn0sVD1mdW5jdGlvbihjLGksbil7cmV0dXJuIEQuQ2hlY2soYyxpLG4pP0ouQ2xvbmUobik6WS5DcmVhdGUoYyxpKX0sRT1mdW5jdGlvbihjLGksbil7cmV0dXJuIEQuQ2hlY2soYyxpLG4pP246WS5DcmVhdGUoYyxpKX0sUj1mdW5jdGlvbihjLGksbil7cmV0dXJuIEQuQ2hlY2soYyxpLG4pP246WS5DcmVhdGUoYyxpKX0sQz1mdW5jdGlvbihjLGksbil7Y29uc3QgYT1ZLkNyZWF0ZShjLGkpLGI9bnIuSXNQbGFpbk9iamVjdChhKSYmbnIuSXNQbGFpbk9iamVjdChuKT97Li4uYSwuLi5ufTpuO3JldHVybiBELkNoZWNrKGMsaSxiKT9iOlkuQ3JlYXRlKGMsaSl9LHg9ZnVuY3Rpb24oYyxpLG4pe3JldHVybiBELkNoZWNrKGMsaSxuKT9uOlkuQ3JlYXRlKGMsaSl9LG89ZnVuY3Rpb24oYyxpLG4pe3JldHVybiBELkNoZWNrKGMsaSxuKT9uOlkuQ3JlYXRlKGMsaSl9LEc9ZnVuY3Rpb24oYyxpLG4pe3Rocm93IG5ldyAkKGMpfSxQPWZ1bmN0aW9uKGMsaSxuKXtyZXR1cm4gRC5DaGVjayhjLGksbik/bjpZLkNyZWF0ZShjLGkpfSx3PWZ1bmN0aW9uKGMsaSxuKXtyZXR1cm4gRC5DaGVjayhjLGksbik/bjpZLkNyZWF0ZShjLGkpfSxxPWZ1bmN0aW9uKGMsaSxuKXtyZXR1cm4gRC5DaGVjayhjLGksbik/bjpZLkNyZWF0ZShjLGkpfSxGPWZ1bmN0aW9uKGMsaSxuKXtpZihELkNoZWNrKGMsaSxuKSlyZXR1cm4gbjtpZihuPT09bnVsbHx8dHlwZW9mIG4hPT0ib2JqZWN0IilyZXR1cm4gWS5DcmVhdGUoYyxpKTtjb25zdCBhPW5ldyBTZXQoYy5yZXF1aXJlZHx8W10pLGI9e307Zm9yKGxldFtsLEJdb2YgT2JqZWN0LmVudHJpZXMoYy5wcm9wZXJ0aWVzKSl7aWYoIWEuaGFzKGwpJiZuW2xdPT09dm9pZCAwKWNvbnRpbnVlO2JbbF09aihCLGksbltsXSl9aWYodHlwZW9mIGMuYWRkaXRpb25hbFByb3BlcnRpZXM9PT0ib2JqZWN0Iil7Y29uc3QgbD1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhjLnByb3BlcnRpZXMpO2ZvcihsZXQgQiBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhuKSl7aWYobC5pbmNsdWRlcyhCKSljb250aW51ZTtiW0JdPWooYy5hZGRpdGlvbmFsUHJvcGVydGllcyxpLG5bQl0pfX1yZXR1cm4gYn0sSz1mdW5jdGlvbihjLGksbil7cmV0dXJuIEQuQ2hlY2soYyxpLG4pP246WS5DcmVhdGUoYyxpKX0sTD1mdW5jdGlvbihjLGksbil7aWYoRC5DaGVjayhjLGksbikpcmV0dXJuIEouQ2xvbmUobik7aWYobj09PW51bGx8fHR5cGVvZiBuIT09Im9iamVjdCJ8fEFycmF5LmlzQXJyYXkobil8fG4gaW5zdGFuY2VvZiBEYXRlKXJldHVybiBZLkNyZWF0ZShjLGkpO2NvbnN0IGE9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoYy5wYXR0ZXJuUHJvcGVydGllcylbMF0sYj1jLnBhdHRlcm5Qcm9wZXJ0aWVzW2FdLGw9e307Zm9yKGxldFtCLFFdb2YgT2JqZWN0LmVudHJpZXMobikpbFtCXT1qKGIsaSxRKTtyZXR1cm4gbH0sej1mdW5jdGlvbihjLGksbil7Y29uc3QgYT1pLmZpbmRJbmRleCgobCk9PmwuJGlkPT09Yy4kcmVmKTtpZihhPT09LTEpdGhyb3cgbmV3IG0oYyk7Y29uc3QgYj1pW2FdO3JldHVybiBqKGIsaSxuKX0sQT1mdW5jdGlvbihjLGksbil7cmV0dXJuIEQuQ2hlY2soYyxpLG4pP246WS5DcmVhdGUoYyxpKX0sZXI9ZnVuY3Rpb24oYyxpLG4pe3JldHVybiBELkNoZWNrKGMsaSxuKT9KLkNsb25lKG4pOlkuQ3JlYXRlKGMsaSl9LE9yPWZ1bmN0aW9uKGMsaSxuKXtyZXR1cm4gRC5DaGVjayhjLGksbik/Si5DbG9uZShuKTpZLkNyZWF0ZShjLGkpfSxYPWZ1bmN0aW9uKGMsaSxuKXtjb25zdCBhPWkuZmluZEluZGV4KChsKT0+bC4kaWQ9PT1jLiRyZWYpO2lmKGE9PT0tMSl0aHJvdyBuZXcgbShjKTtjb25zdCBiPWlbYV07cmV0dXJuIGooYixpLG4pfSxIPWZ1bmN0aW9uKGMsaSxuKXtpZihELkNoZWNrKGMsaSxuKSlyZXR1cm4gSi5DbG9uZShuKTtpZighbnIuSXNBcnJheShuKSlyZXR1cm4gWS5DcmVhdGUoYyxpKTtpZihjLml0ZW1zPT09dm9pZCAwKXJldHVybltdO3JldHVybiBjLml0ZW1zLm1hcCgoYSxiKT0+aihhLGksbltiXSkpfSxzcj1mdW5jdGlvbihjLGksbil7cmV0dXJuIEQuQ2hlY2soYyxpLG4pP0ouQ2xvbmUobik6WS5DcmVhdGUoYyxpKX0sdj1mdW5jdGlvbihjLGksbil7cmV0dXJuIEQuQ2hlY2soYyxpLG4pP0ouQ2xvbmUobik6aHIuQ3JlYXRlKGMsaSxuKX0saz1mdW5jdGlvbihjLGksbil7cmV0dXJuIEQuQ2hlY2soYyxpLG4pP0ouQ2xvbmUobik6WS5DcmVhdGUoYyxpKX0seT1mdW5jdGlvbihjLGksbil7cmV0dXJuIEQuQ2hlY2soYyxpLG4pP0ouQ2xvbmUobik6WS5DcmVhdGUoYyxpKX0sXz1mdW5jdGlvbihjLGksbil7cmV0dXJuIEQuQ2hlY2soYyxpLG4pP0ouQ2xvbmUobik6WS5DcmVhdGUoYyxpKX0sUz1mdW5jdGlvbihjLGksbil7cmV0dXJuIEQuQ2hlY2soYyxpLG4pP0ouQ2xvbmUobik6WS5DcmVhdGUoYyxpKX0saj1mdW5jdGlvbihjLGksbil7Y29uc3QgYT1uci5Jc1N0cmluZyhjLiRpZCk/Wy4uLmksY106aSxiPWM7c3dpdGNoKGNbWi5LaW5kXSl7Y2FzZSJBbnkiOnJldHVybiB0KGIsYSxuKTtjYXNlIkFycmF5IjpyZXR1cm4gZihiLGEsbik7Y2FzZSJBc3luY0l0ZXJhdG9yIjpyZXR1cm4gZShiLGEsbik7Y2FzZSJCaWdJbnQiOnJldHVybiBWKGIsYSxuKTtjYXNlIkJvb2xlYW4iOnJldHVybiB1KGIsYSxuKTtjYXNlIkNvbnN0cnVjdG9yIjpyZXR1cm4gTyhiLGEsbik7Y2FzZSJEYXRlIjpyZXR1cm4gVChiLGEsbik7Y2FzZSJGdW5jdGlvbiI6cmV0dXJuIEUoYixhLG4pO2Nhc2UiSW50ZWdlciI6cmV0dXJuIFIoYixhLG4pO2Nhc2UiSW50ZXJzZWN0IjpyZXR1cm4gQyhiLGEsbik7Y2FzZSJJdGVyYXRvciI6cmV0dXJuIHgoYixhLG4pO2Nhc2UiTGl0ZXJhbCI6cmV0dXJuIG8oYixhLG4pO2Nhc2UiTmV2ZXIiOnJldHVybiBHKGIsYSxuKTtjYXNlIk5vdCI6cmV0dXJuIFAoYixhLG4pO2Nhc2UiTnVsbCI6cmV0dXJuIHcoYixhLG4pO2Nhc2UiTnVtYmVyIjpyZXR1cm4gcShiLGEsbik7Y2FzZSJPYmplY3QiOnJldHVybiBGKGIsYSxuKTtjYXNlIlByb21pc2UiOnJldHVybiBLKGIsYSxuKTtjYXNlIlJlY29yZCI6cmV0dXJuIEwoYixhLG4pO2Nhc2UiUmVmIjpyZXR1cm4geihiLGEsbik7Y2FzZSJTdHJpbmciOnJldHVybiBBKGIsYSxuKTtjYXNlIlN5bWJvbCI6cmV0dXJuIGVyKGIsYSxuKTtjYXNlIlRlbXBsYXRlTGl0ZXJhbCI6cmV0dXJuIE9yKGIsYSxuKTtjYXNlIlRoaXMiOnJldHVybiBYKGIsYSxuKTtjYXNlIlR1cGxlIjpyZXR1cm4gSChiLGEsbik7Y2FzZSJVbmRlZmluZWQiOnJldHVybiBzcihiLGEsbik7Y2FzZSJVbmlvbiI6cmV0dXJuIHYoYixhLG4pO2Nhc2UiVWludDhBcnJheSI6cmV0dXJuIGsoYixhLG4pO2Nhc2UiVW5rbm93biI6cmV0dXJuIHkoYixhLG4pO2Nhc2UiVm9pZCI6cmV0dXJuIF8oYixhLG4pO2RlZmF1bHQ6aWYoIVouVHlwZVJlZ2lzdHJ5LkhhcyhiW1ouS2luZF0pKXRocm93IG5ldyB0cihiKTtyZXR1cm4gUyhiLGEsbil9fSxOPWZ1bmN0aW9uKC4uLmMpe3JldHVybiBjLmxlbmd0aD09PTM/aihjWzBdLGNbMV0sY1syXSk6aihjWzBdLFtdLGNbMV0pfTtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5DYXN0PXIuVmFsdWVDYXN0RGVyZWZlcmVuY2VFcnJvcj1yLlZhbHVlQ2FzdFVua25vd25UeXBlRXJyb3I9ci5WYWx1ZUNhc3RSZWN1cnNpdmVUeXBlRXJyb3I9ci5WYWx1ZUNhc3ROZXZlclR5cGVFcnJvcj1yLlZhbHVlQ2FzdEFycmF5VW5pcXVlSXRlbXNUeXBlRXJyb3I9ci5WYWx1ZUNhc3RSZWZlcmVuY2VUeXBlRXJyb3I9dm9pZCAwO3ZhciBaPXdyKCksWT1CMCgpLEQ9bDAoKSxKPXUwKCksbnI9eHIoKTtjbGFzcyBjciBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKGMpe3N1cGVyKGBWYWx1ZUNhc3Q6IENhbm5vdCBsb2NhdGUgcmVmZXJlbmNlZCBzY2hlbWEgd2l0aCAkaWQgJyR7Yy4kcmVmfSdgKTt0aGlzLnNjaGVtYT1jfX1yLlZhbHVlQ2FzdFJlZmVyZW5jZVR5cGVFcnJvcj1jcjtjbGFzcyBVIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoYyxpKXtzdXBlcigiVmFsdWVDYXN0OiBBcnJheSBjYXN0IHByb2R1Y2VkIGludmFsaWQgZGF0YSBkdWUgdG8gdW5pcXVlSXRlbXMgY29uc3RyYWludCIpO3RoaXMuc2NoZW1hPWMsdGhpcy52YWx1ZT1pfX1yLlZhbHVlQ2FzdEFycmF5VW5pcXVlSXRlbXNUeXBlRXJyb3I9VTtjbGFzcyAkIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoYyl7c3VwZXIoIlZhbHVlQ2FzdDogTmV2ZXIgdHlwZXMgY2Fubm90IGJlIGNhc3QiKTt0aGlzLnNjaGVtYT1jfX1yLlZhbHVlQ2FzdE5ldmVyVHlwZUVycm9yPSQ7Y2xhc3MgdXIgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihjKXtzdXBlcigiVmFsdWVDYXN0LlJlY3Vyc2l2ZTogQ2Fubm90IGNhc3QgcmVjdXJzaXZlIHNjaGVtYXMiKTt0aGlzLnNjaGVtYT1jfX1yLlZhbHVlQ2FzdFJlY3Vyc2l2ZVR5cGVFcnJvcj11cjtjbGFzcyB0ciBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKGMpe3N1cGVyKCJWYWx1ZUNhc3Q6IFVua25vd24gdHlwZSIpO3RoaXMuc2NoZW1hPWN9fXIuVmFsdWVDYXN0VW5rbm93blR5cGVFcnJvcj10cjtjbGFzcyBtIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoYyl7c3VwZXIoYFZhbHVlQ2FzdDogVW5hYmxlIHRvIGRlcmVmZXJlbmNlIHR5cGUgd2l0aCAkaWQgJyR7Yy4kcmVmfSdgKTt0aGlzLnNjaGVtYT1jfX1yLlZhbHVlQ2FzdERlcmVmZXJlbmNlRXJyb3I9bTt2YXIgaHI7KGZ1bmN0aW9uKGMpe2Z1bmN0aW9uIGkoYixsLEIpe2lmKGJbWi5LaW5kXT09PSJPYmplY3QiJiZ0eXBlb2YgQj09PSJvYmplY3QiJiYhbnIuSXNOdWxsKEIpKXtjb25zdCBRPWIsYXI9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoQiksVHI9T2JqZWN0LmVudHJpZXMoUS5wcm9wZXJ0aWVzKSxbYnIsdnJdPVsxL1RyLmxlbmd0aCxUci5sZW5ndGhdO3JldHVybiBUci5yZWR1Y2UoKEVyLFtkcixJXSk9Pntjb25zdCBpcj1JW1ouS2luZF09PT0iTGl0ZXJhbCImJkkuY29uc3Q9PT1CW2RyXT92cjowLFc9RC5DaGVjayhJLGwsQltkcl0pP2JyOjAsZz1hci5pbmNsdWRlcyhkcik/YnI6MDtyZXR1cm4gRXIrKGlyK1crZyl9LDApfWVsc2UgcmV0dXJuIEQuQ2hlY2soYixsLEIpPzE6MH1mdW5jdGlvbiBuKGIsbCxCKXtsZXRbUSxhcl09W2IuYW55T2ZbMF0sMF07Zm9yKGxldCBUciBvZiBiLmFueU9mKXtjb25zdCBicj1pKFRyLGwsQik7aWYoYnI+YXIpUT1Ucixhcj1icn1yZXR1cm4gUX1mdW5jdGlvbiBhKGIsbCxCKXtpZigiZGVmYXVsdCJpbiBiKXJldHVybiBiLmRlZmF1bHQ7ZWxzZXtjb25zdCBRPW4oYixsLEIpO3JldHVybiBOKFEsbCxCKX19Yy5DcmVhdGU9YX0pKGhyfHwoaHI9e30pKSxyLkNhc3Q9Tn0pLGpuPWtyKChyKT0+e3ZhciB0PWZ1bmN0aW9uKEkpe3JldHVybiB2ci5Jc1N0cmluZyhJKSYmIWlzTmFOKEkpJiYhaXNOYU4ocGFyc2VGbG9hdChJKSl9LGY9ZnVuY3Rpb24oSSl7cmV0dXJuIHZyLklzQmlnSW50KEkpfHx2ci5Jc0Jvb2xlYW4oSSl8fHZyLklzTnVtYmVyKEkpfSxlPWZ1bmN0aW9uKEkpe3JldHVybiBJPT09ITB8fHZyLklzTnVtYmVyKEkpJiZJPT09MXx8dnIuSXNCaWdJbnQoSSkmJkk9PT1CaWdJbnQoIjEiKXx8dnIuSXNTdHJpbmcoSSkmJihJLnRvTG93ZXJDYXNlKCk9PT0idHJ1ZSJ8fEk9PT0iMSIpfSxWPWZ1bmN0aW9uKEkpe3JldHVybiBJPT09ITF8fHZyLklzTnVtYmVyKEkpJiZJPT09MHx8dnIuSXNCaWdJbnQoSSkmJkk9PT1CaWdJbnQoIjAiKXx8dnIuSXNTdHJpbmcoSSkmJihJLnRvTG93ZXJDYXNlKCk9PT0iZmFsc2UifHxJPT09IjAiKX0sdT1mdW5jdGlvbihJKXtyZXR1cm4gdnIuSXNTdHJpbmcoSSkmJi9eKD86WzAtMl1cZDpbMC01XVxkOlswLTVdXGR8MjM6NTk6NjApKD86XC5cZCspPyg/Onp8WystXVxkXGQoPzo6P1xkXGQpPykkL2kudGVzdChJKX0sTz1mdW5jdGlvbihJKXtyZXR1cm4gdnIuSXNTdHJpbmcoSSkmJi9eKD86WzAtMl1cZDpbMC01XVxkOlswLTVdXGR8MjM6NTk6NjApPyQvaS50ZXN0KEkpfSxUPWZ1bmN0aW9uKEkpe3JldHVybiB2ci5Jc1N0cmluZyhJKSYmL15cZFxkXGRcZC1bMC0xXVxkLVswLTNdXGR0KD86WzAtMl1cZDpbMC01XVxkOlswLTVdXGR8MjM6NTk6NjApKD86XC5cZCspPyg/Onp8WystXVxkXGQoPzo6P1xkXGQpPykkL2kudGVzdChJKX0sRT1mdW5jdGlvbihJKXtyZXR1cm4gdnIuSXNTdHJpbmcoSSkmJi9eXGRcZFxkXGQtWzAtMV1cZC1bMC0zXVxkdCg/OlswLTJdXGQ6WzAtNV1cZDpbMC01XVxkfDIzOjU5OjYwKT8kL2kudGVzdChJKX0sUj1mdW5jdGlvbihJKXtyZXR1cm4gdnIuSXNTdHJpbmcoSSkmJi9eXGRcZFxkXGQtWzAtMV1cZC1bMC0zXVxkJC9pLnRlc3QoSSl9LEM9ZnVuY3Rpb24oSSxpcil7Y29uc3QgVz1xKEkpO3JldHVybiBXPT09aXI/VzpJfSx4PWZ1bmN0aW9uKEksaXIpe2NvbnN0IFc9RihJKTtyZXR1cm4gVz09PWlyP1c6SX0sbz1mdW5jdGlvbihJLGlyKXtjb25zdCBXPVAoSSk7cmV0dXJuIFc9PT1pcj9XOkl9LEc9ZnVuY3Rpb24oSSxpcil7aWYodHlwZW9mIEkuY29uc3Q9PT0ic3RyaW5nIilyZXR1cm4gQyhpcixJLmNvbnN0KTtlbHNlIGlmKHR5cGVvZiBJLmNvbnN0PT09Im51bWJlciIpcmV0dXJuIHgoaXIsSS5jb25zdCk7ZWxzZSBpZih0eXBlb2YgSS5jb25zdD09PSJib29sZWFuIilyZXR1cm4gbyhpcixJLmNvbnN0KTtlbHNlIHJldHVybiBUci5DbG9uZShpcil9LFA9ZnVuY3Rpb24oSSl7cmV0dXJuIGUoSSk/ITA6VihJKT8hMTpJfSx3PWZ1bmN0aW9uKEkpe3JldHVybiB0KEkpP0JpZ0ludChwYXJzZUludChJKSk6dnIuSXNOdW1iZXIoSSk/QmlnSW50KEl8MCk6VihJKT8wOmUoSSk/MTpJfSxxPWZ1bmN0aW9uKEkpe3JldHVybiBmKEkpP0kudG9TdHJpbmcoKTp2ci5Jc1N5bWJvbChJKSYmSS5kZXNjcmlwdGlvbiE9PXZvaWQgMD9JLmRlc2NyaXB0aW9uLnRvU3RyaW5nKCk6SX0sRj1mdW5jdGlvbihJKXtyZXR1cm4gdChJKT9wYXJzZUZsb2F0KEkpOmUoSSk/MTpWKEkpPzA6SX0sSz1mdW5jdGlvbihJKXtyZXR1cm4gdChJKT9wYXJzZUludChJKTp2ci5Jc051bWJlcihJKT9JfDA6ZShJKT8xOlYoSSk/MDpJfSxMPWZ1bmN0aW9uKEkpe3JldHVybiB2ci5Jc1N0cmluZyhJKSYmSS50b0xvd2VyQ2FzZSgpPT09Im51bGwiP251bGw6SX0sej1mdW5jdGlvbihJKXtyZXR1cm4gdnIuSXNTdHJpbmcoSSkmJkk9PT0idW5kZWZpbmVkIj92b2lkIDA6SX0sQT1mdW5jdGlvbihJKXtyZXR1cm4gdnIuSXNEYXRlKEkpP0k6dnIuSXNOdW1iZXIoSSk/bmV3IERhdGUoSSk6ZShJKT9uZXcgRGF0ZSgxKTpWKEkpP25ldyBEYXRlKDApOnQoSSk/bmV3IERhdGUocGFyc2VJbnQoSSkpOk8oSSk/bmV3IERhdGUoYDE5NzAtMDEtMDFUJHtJfS4wMDBaYCk6dShJKT9uZXcgRGF0ZShgMTk3MC0wMS0wMVQke0l9YCk6RShJKT9uZXcgRGF0ZShgJHtJfS4wMDBaYCk6VChJKT9uZXcgRGF0ZShJKTpSKEkpP25ldyBEYXRlKGAke0l9VDAwOjAwOjAwLjAwMFpgKTpJfSxlcj1mdW5jdGlvbihJLGlyLFcpe3JldHVybiBXfSxPcj1mdW5jdGlvbihJLGlyLFcpe2lmKHZyLklzQXJyYXkoVykpcmV0dXJuIFcubWFwKChnKT0+QihJLml0ZW1zLGlyLGcpKTtyZXR1cm4gV30sWD1mdW5jdGlvbihJLGlyLFcpe3JldHVybiBXfSxIPWZ1bmN0aW9uKEksaXIsVyl7cmV0dXJuIHcoVyl9LHNyPWZ1bmN0aW9uKEksaXIsVyl7cmV0dXJuIFAoVyl9LHY9ZnVuY3Rpb24oSSxpcixXKXtyZXR1cm4gVHIuQ2xvbmUoVyl9LGs9ZnVuY3Rpb24oSSxpcixXKXtyZXR1cm4gQShXKX0seT1mdW5jdGlvbihJLGlyLFcpe3JldHVybiBXfSxfPWZ1bmN0aW9uKEksaXIsVyl7cmV0dXJuIEsoVyl9LFM9ZnVuY3Rpb24oSSxpcixXKXtyZXR1cm4gV30saj1mdW5jdGlvbihJLGlyLFcpe3JldHVybiBXfSxOPWZ1bmN0aW9uKEksaXIsVyl7cmV0dXJuIEcoSSxXKX0sWj1mdW5jdGlvbihJLGlyLFcpe3JldHVybiBXfSxZPWZ1bmN0aW9uKEksaXIsVyl7cmV0dXJuIEwoVyl9LEQ9ZnVuY3Rpb24oSSxpcixXKXtyZXR1cm4gRihXKX0sSj1mdW5jdGlvbihJLGlyLFcpe2lmKHZyLklzT2JqZWN0KFcpKXJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhJLnByb3BlcnRpZXMpLnJlZHVjZSgoZyxNKT0+e3JldHVybiBXW01dIT09dm9pZCAwP3suLi5nLFtNXTpCKEkucHJvcGVydGllc1tNXSxpcixXW01dKX06ey4uLmd9fSxXKTtyZXR1cm4gV30sbnI9ZnVuY3Rpb24oSSxpcixXKXtyZXR1cm4gV30sY3I9ZnVuY3Rpb24oSSxpcixXKXtjb25zdCBnPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKEkucGF0dGVyblByb3BlcnRpZXMpWzBdLE09SS5wYXR0ZXJuUHJvcGVydGllc1tnXSxkPXt9O2ZvcihsZXRbbHIsZnJdb2YgT2JqZWN0LmVudHJpZXMoVykpZFtscl09QihNLGlyLGZyKTtyZXR1cm4gZH0sVT1mdW5jdGlvbihJLGlyLFcpe2NvbnN0IGc9aXIuZmluZEluZGV4KChkKT0+ZC4kaWQ9PT1JLiRyZWYpO2lmKGc9PT0tMSl0aHJvdyBuZXcgZHIoSSk7Y29uc3QgTT1pcltnXTtyZXR1cm4gQihNLGlyLFcpfSwkPWZ1bmN0aW9uKEksaXIsVyl7cmV0dXJuIHEoVyl9LHVyPWZ1bmN0aW9uKEksaXIsVyl7cmV0dXJuIFd9LHRyPWZ1bmN0aW9uKEksaXIsVyl7cmV0dXJuIFd9LG09ZnVuY3Rpb24oSSxpcixXKXtjb25zdCBnPWlyLmZpbmRJbmRleCgoZCk9PmQuJGlkPT09SS4kcmVmKTtpZihnPT09LTEpdGhyb3cgbmV3IGRyKEkpO2NvbnN0IE09aXJbZ107cmV0dXJuIEIoTSxpcixXKX0saHI9ZnVuY3Rpb24oSSxpcixXKXtpZih2ci5Jc0FycmF5KFcpJiYhdnIuSXNVbmRlZmluZWQoSS5pdGVtcykpcmV0dXJuIFcubWFwKChnLE0pPT57cmV0dXJuIE08SS5pdGVtcy5sZW5ndGg/QihJLml0ZW1zW01dLGlyLGcpOmd9KTtyZXR1cm4gV30sYz1mdW5jdGlvbihJLGlyLFcpe3JldHVybiB6KFcpfSxpPWZ1bmN0aW9uKEksaXIsVyl7Zm9yKGxldCBnIG9mIEkuYW55T2Ype2NvbnN0IE09QihnLGlyLFcpO2lmKGJyLkNoZWNrKGcsaXIsTSkpcmV0dXJuIE19cmV0dXJuIFd9LG49ZnVuY3Rpb24oSSxpcixXKXtyZXR1cm4gV30sYT1mdW5jdGlvbihJLGlyLFcpe3JldHVybiBXfSxiPWZ1bmN0aW9uKEksaXIsVyl7cmV0dXJuIFd9LGw9ZnVuY3Rpb24oSSxpcixXKXtyZXR1cm4gV30sQj1mdW5jdGlvbihJLGlyLFcpe2NvbnN0IGc9dnIuSXNTdHJpbmcoSS4kaWQpP1suLi5pcixJXTppcixNPUk7c3dpdGNoKElbYXIuS2luZF0pe2Nhc2UiQW55IjpyZXR1cm4gZXIoTSxnLFcpO2Nhc2UiQXJyYXkiOnJldHVybiBPcihNLGcsVyk7Y2FzZSJBc3luY0l0ZXJhdG9yIjpyZXR1cm4gWChNLGcsVyk7Y2FzZSJCaWdJbnQiOnJldHVybiBIKE0sZyxXKTtjYXNlIkJvb2xlYW4iOnJldHVybiBzcihNLGcsVyk7Y2FzZSJDb25zdHJ1Y3RvciI6cmV0dXJuIHYoTSxnLFcpO2Nhc2UiRGF0ZSI6cmV0dXJuIGsoTSxnLFcpO2Nhc2UiRnVuY3Rpb24iOnJldHVybiB5KE0sZyxXKTtjYXNlIkludGVnZXIiOnJldHVybiBfKE0sZyxXKTtjYXNlIkludGVyc2VjdCI6cmV0dXJuIFMoTSxnLFcpO2Nhc2UiSXRlcmF0b3IiOnJldHVybiBqKE0sZyxXKTtjYXNlIkxpdGVyYWwiOnJldHVybiBOKE0sZyxXKTtjYXNlIk5ldmVyIjpyZXR1cm4gWihNLGcsVyk7Y2FzZSJOdWxsIjpyZXR1cm4gWShNLGcsVyk7Y2FzZSJOdW1iZXIiOnJldHVybiBEKE0sZyxXKTtjYXNlIk9iamVjdCI6cmV0dXJuIEooTSxnLFcpO2Nhc2UiUHJvbWlzZSI6cmV0dXJuIG5yKE0sZyxXKTtjYXNlIlJlY29yZCI6cmV0dXJuIGNyKE0sZyxXKTtjYXNlIlJlZiI6cmV0dXJuIFUoTSxnLFcpO2Nhc2UiU3RyaW5nIjpyZXR1cm4gJChNLGcsVyk7Y2FzZSJTeW1ib2wiOnJldHVybiB1cihNLGcsVyk7Y2FzZSJUZW1wbGF0ZUxpdGVyYWwiOnJldHVybiB0cihNLGcsVyk7Y2FzZSJUaGlzIjpyZXR1cm4gbShNLGcsVyk7Y2FzZSJUdXBsZSI6cmV0dXJuIGhyKE0sZyxXKTtjYXNlIlVuZGVmaW5lZCI6cmV0dXJuIGMoTSxnLFcpO2Nhc2UiVW5pb24iOnJldHVybiBpKE0sZyxXKTtjYXNlIlVpbnQ4QXJyYXkiOnJldHVybiBuKE0sZyxXKTtjYXNlIlVua25vd24iOnJldHVybiBhKE0sZyxXKTtjYXNlIlZvaWQiOnJldHVybiBiKE0sZyxXKTtkZWZhdWx0OmlmKCFhci5UeXBlUmVnaXN0cnkuSGFzKE1bYXIuS2luZF0pKXRocm93IG5ldyBFcihNKTtyZXR1cm4gbChNLGcsVyl9fSxRPWZ1bmN0aW9uKC4uLkkpe3JldHVybiBJLmxlbmd0aD09PTM/QihJWzBdLElbMV0sSVsyXSk6QihJWzBdLFtdLElbMV0pfTtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5Db252ZXJ0PXIuVmFsdWVDb252ZXJ0RGVyZWZlcmVuY2VFcnJvcj1yLlZhbHVlQ29udmVydFVua25vd25UeXBlRXJyb3I9dm9pZCAwO3ZhciBhcj13cigpLFRyPXUwKCksYnI9bDAoKSx2cj14cigpO2NsYXNzIEVyIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoSSl7c3VwZXIoIlZhbHVlQ29udmVydDogVW5rbm93biB0eXBlIik7dGhpcy5zY2hlbWE9SX19ci5WYWx1ZUNvbnZlcnRVbmtub3duVHlwZUVycm9yPUVyO2NsYXNzIGRyIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoSSl7c3VwZXIoYFZhbHVlQ29udmVydDogVW5hYmxlIHRvIGRlcmVmZXJlbmNlIHR5cGUgd2l0aCAkaWQgJyR7SS4kcmVmfSdgKTt0aGlzLnNjaGVtYT1JfX1yLlZhbHVlQ29udmVydERlcmVmZXJlbmNlRXJyb3I9ZHIsci5Db252ZXJ0PVF9KSxJbj1rcigocik9PntPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5WYWx1ZT12b2lkIDA7dmFyIHQ9YzAoKSxmPU9uKCksZT1hMCgpLFY9a24oKSx1PUVuKCksTz11MCgpLFQ9am4oKSxFPUIwKCksUj1sMCgpLEM9RDAoKSx4OyhmdW5jdGlvbihvKXtmdW5jdGlvbiBHKC4uLlgpe3JldHVybiB1LkNhc3QuYXBwbHkodSxYKX1vLkNhc3Q9RztmdW5jdGlvbiBQKC4uLlgpe3JldHVybiBFLkNyZWF0ZS5hcHBseShFLFgpfW8uQ3JlYXRlPVA7ZnVuY3Rpb24gdyguLi5YKXtyZXR1cm4gUi5DaGVjay5hcHBseShSLFgpfW8uQ2hlY2s9dztmdW5jdGlvbiBxKC4uLlgpe3JldHVybiBULkNvbnZlcnQuYXBwbHkoVCxYKX1vLkNvbnZlcnQ9cTtmdW5jdGlvbiBGKFgpe3JldHVybiBPLkNsb25lKFgpfW8uQ2xvbmU9RjtmdW5jdGlvbiBLKC4uLlgpe3JldHVybiB0LkVycm9ycy5hcHBseSh0LFgpfW8uRXJyb3JzPUs7ZnVuY3Rpb24gTChYLEgpe3JldHVybiBWLkVxdWFsKFgsSCl9by5FcXVhbD1MO2Z1bmN0aW9uIHooWCxIKXtyZXR1cm4gQy5EaWZmKFgsSCl9by5EaWZmPXo7ZnVuY3Rpb24gQShYKXtyZXR1cm4gZS5IYXNoKFgpfW8uSGFzaD1BO2Z1bmN0aW9uIGVyKFgsSCl7cmV0dXJuIEMuUGF0Y2goWCxIKX1vLlBhdGNoPWVyO2Z1bmN0aW9uIE9yKFgsSCl7Zi5NdXRhdGUoWCxIKX1vLk11dGF0ZT1Pcn0pKHh8fChyLlZhbHVlPXg9e30pKX0pLEYwPWtyKChyKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLlZhbHVlPXIuVmFsdWVQb2ludGVyPXIuRGVsZXRlPXIuVXBkYXRlPXIuSW5zZXJ0PXIuRWRpdD1yLlZhbHVlRXJyb3JJdGVyYXRvcj1yLlZhbHVlRXJyb3JUeXBlPXZvaWQgMDt2YXIgdD1jMCgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJWYWx1ZUVycm9yVHlwZSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHQuVmFsdWVFcnJvclR5cGV9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIlZhbHVlRXJyb3JJdGVyYXRvciIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHQuVmFsdWVFcnJvckl0ZXJhdG9yfX0pO3ZhciBmPUQwKCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIkVkaXQiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBmLkVkaXR9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIkluc2VydCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGYuSW5zZXJ0fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJVcGRhdGUiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBmLlVwZGF0ZX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkociwiRGVsZXRlIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZi5EZWxldGV9fSk7dmFyIGU9ajAoKTtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiVmFsdWVQb2ludGVyIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5WYWx1ZVBvaW50ZXJ9fSk7dmFyIFY9SW4oKTtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiVmFsdWUiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBWLlZhbHVlfX0pfSkseW49a3IoKHIpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuVHlwZUNvbXBpbGVyPXIuVHlwZUNvbXBpbGVyVHlwZUd1YXJkRXJyb3I9ci5UeXBlQ29tcGlsZXJEZXJlZmVyZW5jZUVycm9yPXIuVHlwZUNvbXBpbGVyVW5rbm93blR5cGVFcnJvcj1yLlR5cGVDaGVjaz12b2lkIDA7dmFyIHQ9VDAoKSxmPXdyKCksZT1jMCgpLFY9YTAoKSx1PXhyKCk7Y2xhc3MgT3tjb25zdHJ1Y3RvcihQLHcscSxGKXt0aGlzLnNjaGVtYT1QLHRoaXMucmVmZXJlbmNlcz13LHRoaXMuY2hlY2tGdW5jPXEsdGhpcy5jb2RlPUZ9Q29kZSgpe3JldHVybiB0aGlzLmNvZGV9RXJyb3JzKFApe3JldHVybiBlLkVycm9ycyh0aGlzLnNjaGVtYSx0aGlzLnJlZmVyZW5jZXMsUCl9Q2hlY2soUCl7cmV0dXJuIHRoaXMuY2hlY2tGdW5jKFApfX1yLlR5cGVDaGVjaz1PO3ZhciBUOyhmdW5jdGlvbihQKXtmdW5jdGlvbiB3KEwpe3JldHVybiBMPT09MzZ9UC5Eb2xsYXJTaWduPXc7ZnVuY3Rpb24gcShMKXtyZXR1cm4gTD09PTk1fVAuSXNVbmRlcnNjb3JlPXE7ZnVuY3Rpb24gRihMKXtyZXR1cm4gTD49NjUmJkw8PTkwfHxMPj05NyYmTDw9MTIyfVAuSXNBbHBoYT1GO2Z1bmN0aW9uIEsoTCl7cmV0dXJuIEw+PTQ4JiZMPD01N31QLklzTnVtZXJpYz1LfSkoVHx8KFQ9e30pKTt2YXIgRTsoZnVuY3Rpb24oUCl7ZnVuY3Rpb24gdyhMKXtpZihMLmxlbmd0aD09PTApcmV0dXJuITE7cmV0dXJuIFQuSXNOdW1lcmljKEwuY2hhckNvZGVBdCgwKSl9ZnVuY3Rpb24gcShMKXtpZih3KEwpKXJldHVybiExO2ZvcihsZXQgej0wO3o8TC5sZW5ndGg7eisrKXtjb25zdCBBPUwuY2hhckNvZGVBdCh6KTtpZighKFQuSXNBbHBoYShBKXx8VC5Jc051bWVyaWMoQSl8fFQuRG9sbGFyU2lnbihBKXx8VC5Jc1VuZGVyc2NvcmUoQSkpKXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIEYoTCl7cmV0dXJuIEwucmVwbGFjZSgvJy9nLCJcXCciKX1mdW5jdGlvbiBLKEwseil7cmV0dXJuIHEoeik/YCR7TH0uJHt6fWA6YCR7TH1bJyR7Rih6KX0nXWB9UC5FbmNvZGU9S30pKEV8fChFPXt9KSk7dmFyIFI7KGZ1bmN0aW9uKFApe2Z1bmN0aW9uIHcocSl7Y29uc3QgRj1bXTtmb3IobGV0IEs9MDtLPHEubGVuZ3RoO0srKyl7Y29uc3QgTD1xLmNoYXJDb2RlQXQoSyk7aWYoVC5Jc051bWVyaWMoTCl8fFQuSXNBbHBoYShMKSlGLnB1c2gocS5jaGFyQXQoSykpO2Vsc2UgRi5wdXNoKGBfJHtMfV9gKX1yZXR1cm4gRi5qb2luKCIiKS5yZXBsYWNlKC9fXy9nLCJfIil9UC5FbmNvZGU9d30pKFJ8fChSPXt9KSk7Y2xhc3MgQyBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKFApe3N1cGVyKCJUeXBlQ29tcGlsZXI6IFVua25vd24gdHlwZSIpO3RoaXMuc2NoZW1hPVB9fXIuVHlwZUNvbXBpbGVyVW5rbm93blR5cGVFcnJvcj1DO2NsYXNzIHggZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihQKXtzdXBlcihgVHlwZUNvbXBpbGVyOiBVbmFibGUgdG8gZGVyZWZlcmVuY2UgdHlwZSB3aXRoICRpZCAnJHtQLiRyZWZ9J2ApO3RoaXMuc2NoZW1hPVB9fXIuVHlwZUNvbXBpbGVyRGVyZWZlcmVuY2VFcnJvcj14O2NsYXNzIG8gZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihQKXtzdXBlcigiVHlwZUNvbXBpbGVyOiBQcmVmbGlnaHQgdmFsaWRhdGlvbiBjaGVjayBmYWlsZWQgdG8gZ3VhcmQgZm9yIHRoZSBnaXZlbiBzY2hlbWEiKTt0aGlzLnNjaGVtYT1QfX1yLlR5cGVDb21waWxlclR5cGVHdWFyZEVycm9yPW87dmFyIEc7KGZ1bmN0aW9uKFApe2Z1bmN0aW9uIHcoZyl7cmV0dXJuIGdbZi5LaW5kXT09PSJBbnkifHxnW2YuS2luZF09PT0iVW5rbm93biJ9ZnVuY3Rpb24gcShnLE0sZCl7cmV0dXJuIHQuVHlwZVN5c3RlbS5FeGFjdE9wdGlvbmFsUHJvcGVydHlUeXBlcz9gKCcke019JyBpbiAke2d9ID8gJHtkfSA6IHRydWUpYDpgKCR7RS5FbmNvZGUoZyxNKX0gIT09IHVuZGVmaW5lZCA/ICR7ZH0gOiB0cnVlKWB9ZnVuY3Rpb24gRihnKXtyZXR1cm4hdC5UeXBlU3lzdGVtLkFsbG93QXJyYXlPYmplY3RzP2AodHlwZW9mICR7Z30gPT09ICdvYmplY3QnICYmICR7Z30gIT09IG51bGwgJiYgIUFycmF5LmlzQXJyYXkoJHtnfSkpYDpgKHR5cGVvZiAke2d9ID09PSAnb2JqZWN0JyAmJiAke2d9ICE9PSBudWxsKWB9ZnVuY3Rpb24gSyhnKXtyZXR1cm4hdC5UeXBlU3lzdGVtLkFsbG93QXJyYXlPYmplY3RzP2AodHlwZW9mICR7Z30gPT09ICdvYmplY3QnICYmICR7Z30gIT09IG51bGwgJiYgIUFycmF5LmlzQXJyYXkoJHtnfSkgJiYgISgke2d9IGluc3RhbmNlb2YgRGF0ZSkgJiYgISgke2d9IGluc3RhbmNlb2YgVWludDhBcnJheSkpYDpgKHR5cGVvZiAke2d9ID09PSAnb2JqZWN0JyAmJiAke2d9ICE9PSBudWxsICYmICEoJHtnfSBpbnN0YW5jZW9mIERhdGUpICYmICEoJHtnfSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKWB9ZnVuY3Rpb24gTChnKXtyZXR1cm4hdC5UeXBlU3lzdGVtLkFsbG93TmFOP2AodHlwZW9mICR7Z30gPT09ICdudW1iZXInICYmIE51bWJlci5pc0Zpbml0ZSgke2d9KSlgOmB0eXBlb2YgJHtnfSA9PT0gJ251bWJlcidgfWZ1bmN0aW9uIHooZyl7cmV0dXJuIHQuVHlwZVN5c3RlbS5BbGxvd1ZvaWROdWxsP2AoJHtnfSA9PT0gdW5kZWZpbmVkIHx8ICR7Z30gPT09IG51bGwpYDpgJHtnfSA9PT0gdW5kZWZpbmVkYH1mdW5jdGlvbipBKGcsTSxkKXt5aWVsZCJ0cnVlIn1mdW5jdGlvbiplcihnLE0sZCl7eWllbGRgQXJyYXkuaXNBcnJheSgke2R9KWA7Y29uc3RbbHIsZnJdPVtFcigidmFsdWUiLCJhbnkiKSxFcigiYWNjIiwibnVtYmVyIildO2lmKHUuSXNOdW1iZXIoZy5taW5JdGVtcykpeWllbGRgJHtkfS5sZW5ndGggPj0gJHtnLm1pbkl0ZW1zfWA7aWYodS5Jc051bWJlcihnLm1heEl0ZW1zKSl5aWVsZGAke2R9Lmxlbmd0aCA8PSAke2cubWF4SXRlbXN9YDtjb25zdCBycj1hcihnLml0ZW1zLE0sInZhbHVlIik7aWYoeWllbGRgJHtkfS5ldmVyeSgoJHtscn0pID0+ICR7cnJ9KWAsZi5UeXBlR3VhcmQuVFNjaGVtYShnLmNvbnRhaW5zKXx8dS5Jc051bWJlcihnLm1pbkNvbnRhaW5zKXx8dS5Jc051bWJlcihnLm1heENvbnRhaW5zKSl7Y29uc3QgZ3I9Zi5UeXBlR3VhcmQuVFNjaGVtYShnLmNvbnRhaW5zKT9nLmNvbnRhaW5zOmYuVHlwZS5OZXZlcigpLGpyPWFyKGdyLE0sInZhbHVlIiksU3I9dS5Jc051bWJlcihnLm1pbkNvbnRhaW5zKT9bYChjb3VudCA+PSAke2cubWluQ29udGFpbnN9KWBdOltdLHlyPXUuSXNOdW1iZXIoZy5tYXhDb250YWlucyk/W2AoY291bnQgPD0gJHtnLm1heENvbnRhaW5zfSlgXTpbXSxScj1gY29uc3QgY291bnQgPSAke2R9LnJlZHVjZSgoJHtmcn0sICR7bHJ9KSA9PiAke2pyfSA/IGFjYyArIDEgOiBhY2MsIDApYCxQcj1bIihjb3VudCA+IDApIiwuLi5TciwuLi55cl0uam9pbigiICYmICIpO3lpZWxkYCgoJHtscn0pID0+IHsgJHtScn07IHJldHVybiAke1ByfX0pKCR7ZH0pYH1pZihnLnVuaXF1ZUl0ZW1zPT09ITApeWllbGRgKCgke2xyfSkgPT4geyBjb25zdCBzZXQgPSBuZXcgU2V0KCk7IGZvcihjb25zdCBlbGVtZW50IG9mIHZhbHVlKSB7IGNvbnN0IGhhc2hlZCA9IGhhc2goZWxlbWVudCk7IGlmKHNldC5oYXMoaGFzaGVkKSkgeyByZXR1cm4gZmFsc2UgfSBlbHNlIHsgc2V0LmFkZChoYXNoZWQpIH0gfSByZXR1cm4gdHJ1ZSB9ICkoJHtkfSlgfWZ1bmN0aW9uKk9yKGcsTSxkKXt5aWVsZGAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiBTeW1ib2wuYXN5bmNJdGVyYXRvciBpbiAke2R9KWB9ZnVuY3Rpb24qWChnLE0sZCl7aWYoeWllbGRgKHR5cGVvZiAke2R9ID09PSAnYmlnaW50JylgLHUuSXNCaWdJbnQoZy5tdWx0aXBsZU9mKSl5aWVsZGAoJHtkfSAlIEJpZ0ludCgke2cubXVsdGlwbGVPZn0pKSA9PT0gMGA7aWYodS5Jc0JpZ0ludChnLmV4Y2x1c2l2ZU1pbmltdW0pKXlpZWxkYCR7ZH0gPiBCaWdJbnQoJHtnLmV4Y2x1c2l2ZU1pbmltdW19KWA7aWYodS5Jc0JpZ0ludChnLmV4Y2x1c2l2ZU1heGltdW0pKXlpZWxkYCR7ZH0gPCBCaWdJbnQoJHtnLmV4Y2x1c2l2ZU1heGltdW19KWA7aWYodS5Jc0JpZ0ludChnLm1pbmltdW0pKXlpZWxkYCR7ZH0gPj0gQmlnSW50KCR7Zy5taW5pbXVtfSlgO2lmKHUuSXNCaWdJbnQoZy5tYXhpbXVtKSl5aWVsZGAke2R9IDw9IEJpZ0ludCgke2cubWF4aW11bX0pYH1mdW5jdGlvbipIKGcsTSxkKXt5aWVsZGAodHlwZW9mICR7ZH0gPT09ICdib29sZWFuJylgfWZ1bmN0aW9uKnNyKGcsTSxkKXt5aWVsZCpCKGcucmV0dXJucyxNLGAke2R9LnByb3RvdHlwZWApfWZ1bmN0aW9uKnYoZyxNLGQpe2lmKHlpZWxkYCgke2R9IGluc3RhbmNlb2YgRGF0ZSkgJiYgTnVtYmVyLmlzRmluaXRlKCR7ZH0uZ2V0VGltZSgpKWAsdS5Jc051bWJlcihnLmV4Y2x1c2l2ZU1pbmltdW1UaW1lc3RhbXApKXlpZWxkYCR7ZH0uZ2V0VGltZSgpID4gJHtnLmV4Y2x1c2l2ZU1pbmltdW1UaW1lc3RhbXB9YDtpZih1LklzTnVtYmVyKGcuZXhjbHVzaXZlTWF4aW11bVRpbWVzdGFtcCkpeWllbGRgJHtkfS5nZXRUaW1lKCkgPCAke2cuZXhjbHVzaXZlTWF4aW11bVRpbWVzdGFtcH1gO2lmKHUuSXNOdW1iZXIoZy5taW5pbXVtVGltZXN0YW1wKSl5aWVsZGAke2R9LmdldFRpbWUoKSA+PSAke2cubWluaW11bVRpbWVzdGFtcH1gO2lmKHUuSXNOdW1iZXIoZy5tYXhpbXVtVGltZXN0YW1wKSl5aWVsZGAke2R9LmdldFRpbWUoKSA8PSAke2cubWF4aW11bVRpbWVzdGFtcH1gfWZ1bmN0aW9uKmsoZyxNLGQpe3lpZWxkYCh0eXBlb2YgJHtkfSA9PT0gJ2Z1bmN0aW9uJylgfWZ1bmN0aW9uKnkoZyxNLGQpe2lmKHlpZWxkYCh0eXBlb2YgJHtkfSA9PT0gJ251bWJlcicgJiYgTnVtYmVyLmlzSW50ZWdlcigke2R9KSlgLHUuSXNOdW1iZXIoZy5tdWx0aXBsZU9mKSl5aWVsZGAoJHtkfSAlICR7Zy5tdWx0aXBsZU9mfSkgPT09IDBgO2lmKHUuSXNOdW1iZXIoZy5leGNsdXNpdmVNaW5pbXVtKSl5aWVsZGAke2R9ID4gJHtnLmV4Y2x1c2l2ZU1pbmltdW19YDtpZih1LklzTnVtYmVyKGcuZXhjbHVzaXZlTWF4aW11bSkpeWllbGRgJHtkfSA8ICR7Zy5leGNsdXNpdmVNYXhpbXVtfWA7aWYodS5Jc051bWJlcihnLm1pbmltdW0pKXlpZWxkYCR7ZH0gPj0gJHtnLm1pbmltdW19YDtpZih1LklzTnVtYmVyKGcubWF4aW11bSkpeWllbGRgJHtkfSA8PSAke2cubWF4aW11bX1gfWZ1bmN0aW9uKl8oZyxNLGQpe2NvbnN0IGxyPWcuYWxsT2YubWFwKChmcik9PmFyKGZyLE0sZCkpLmpvaW4oIiAmJiAiKTtpZihnLnVuZXZhbHVhdGVkUHJvcGVydGllcz09PSExKXtjb25zdCBmcj1icihgJHtuZXcgUmVnRXhwKGYuS2V5UmVzb2x2ZXIuUmVzb2x2ZVBhdHRlcm4oZykpfTtgKSxycj1gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoJHtkfSkuZXZlcnkoa2V5ID0+ICR7ZnJ9LnRlc3Qoa2V5KSlgO3lpZWxkYCgke2xyfSAmJiAke3JyfSlgfWVsc2UgaWYoZi5UeXBlR3VhcmQuVFNjaGVtYShnLnVuZXZhbHVhdGVkUHJvcGVydGllcykpe2NvbnN0IGZyPWJyKGAke25ldyBSZWdFeHAoZi5LZXlSZXNvbHZlci5SZXNvbHZlUGF0dGVybihnKSl9O2ApLHJyPWBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcygke2R9KS5ldmVyeShrZXkgPT4gJHtmcn0udGVzdChrZXkpIHx8ICR7YXIoZy51bmV2YWx1YXRlZFByb3BlcnRpZXMsTSxgJHtkfVtrZXldYCl9KWA7eWllbGRgKCR7bHJ9ICYmICR7cnJ9KWB9ZWxzZSB5aWVsZGAoJHtscn0pYH1mdW5jdGlvbipTKGcsTSxkKXt5aWVsZGAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiBTeW1ib2wuaXRlcmF0b3IgaW4gJHtkfSlgfWZ1bmN0aW9uKmooZyxNLGQpe2lmKHR5cGVvZiBnLmNvbnN0PT09Im51bWJlciJ8fHR5cGVvZiBnLmNvbnN0PT09ImJvb2xlYW4iKXlpZWxkYCgke2R9ID09PSAke2cuY29uc3R9KWA7ZWxzZSB5aWVsZGAoJHtkfSA9PT0gJyR7Zy5jb25zdH0nKWB9ZnVuY3Rpb24qTihnLE0sZCl7eWllbGQiZmFsc2UifWZ1bmN0aW9uKlooZyxNLGQpe3lpZWxkYCghJHthcihnLm5vdCxNLGQpfSlgfWZ1bmN0aW9uKlkoZyxNLGQpe3lpZWxkYCgke2R9ID09PSBudWxsKWB9ZnVuY3Rpb24qRChnLE0sZCl7aWYoeWllbGQgTChkKSx1LklzTnVtYmVyKGcubXVsdGlwbGVPZikpeWllbGRgKCR7ZH0gJSAke2cubXVsdGlwbGVPZn0pID09PSAwYDtpZih1LklzTnVtYmVyKGcuZXhjbHVzaXZlTWluaW11bSkpeWllbGRgJHtkfSA+ICR7Zy5leGNsdXNpdmVNaW5pbXVtfWA7aWYodS5Jc051bWJlcihnLmV4Y2x1c2l2ZU1heGltdW0pKXlpZWxkYCR7ZH0gPCAke2cuZXhjbHVzaXZlTWF4aW11bX1gO2lmKHUuSXNOdW1iZXIoZy5taW5pbXVtKSl5aWVsZGAke2R9ID49ICR7Zy5taW5pbXVtfWA7aWYodS5Jc051bWJlcihnLm1heGltdW0pKXlpZWxkYCR7ZH0gPD0gJHtnLm1heGltdW19YH1mdW5jdGlvbipKKGcsTSxkKXtpZih5aWVsZCBGKGQpLHUuSXNOdW1iZXIoZy5taW5Qcm9wZXJ0aWVzKSl5aWVsZGBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcygke2R9KS5sZW5ndGggPj0gJHtnLm1pblByb3BlcnRpZXN9YDtpZih1LklzTnVtYmVyKGcubWF4UHJvcGVydGllcykpeWllbGRgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoJHtkfSkubGVuZ3RoIDw9ICR7Zy5tYXhQcm9wZXJ0aWVzfWA7Y29uc3QgbHI9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZy5wcm9wZXJ0aWVzKTtmb3IobGV0IGZyIG9mIGxyKXtjb25zdCBycj1FLkVuY29kZShkLGZyKSxncj1nLnByb3BlcnRpZXNbZnJdO2lmKGcucmVxdWlyZWQmJmcucmVxdWlyZWQuaW5jbHVkZXMoZnIpKXtpZih5aWVsZCpCKGdyLE0scnIpLGYuRXh0ZW5kc1VuZGVmaW5lZC5DaGVjayhncil8fHcoZ3IpKXlpZWxkYCgnJHtmcn0nIGluICR7ZH0pYH1lbHNle2NvbnN0IGpyPWFyKGdyLE0scnIpO3lpZWxkIHEoZCxmcixqcil9fWlmKGcuYWRkaXRpb25hbFByb3BlcnRpZXM9PT0hMSlpZihnLnJlcXVpcmVkJiZnLnJlcXVpcmVkLmxlbmd0aD09PWxyLmxlbmd0aCl5aWVsZGBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcygke2R9KS5sZW5ndGggPT09ICR7bHIubGVuZ3RofWA7ZWxzZXtjb25zdCBmcj1gWyR7bHIubWFwKChycik9PmAnJHtycn0nYCkuam9pbigiLCAiKX1dYDt5aWVsZGBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcygke2R9KS5ldmVyeShrZXkgPT4gJHtmcn0uaW5jbHVkZXMoa2V5KSlgfWlmKHR5cGVvZiBnLmFkZGl0aW9uYWxQcm9wZXJ0aWVzPT09Im9iamVjdCIpe2NvbnN0IGZyPWFyKGcuYWRkaXRpb25hbFByb3BlcnRpZXMsTSxgJHtkfVtrZXldYCkscnI9YFske2xyLm1hcCgoZ3IpPT5gJyR7Z3J9J2ApLmpvaW4oIiwgIil9XWA7eWllbGRgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKCR7ZH0pLmV2ZXJ5KGtleSA9PiAke3JyfS5pbmNsdWRlcyhrZXkpIHx8ICR7ZnJ9KSlgfX1mdW5jdGlvbipucihnLE0sZCl7eWllbGRgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mICR7ZH0udGhlbiA9PT0gJ2Z1bmN0aW9uJylgfWZ1bmN0aW9uKmNyKGcsTSxkKXtpZih5aWVsZCBLKGQpLHUuSXNOdW1iZXIoZy5taW5Qcm9wZXJ0aWVzKSl5aWVsZGBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcygke2R9KS5sZW5ndGggPj0gJHtnLm1pblByb3BlcnRpZXN9YDtpZih1LklzTnVtYmVyKGcubWF4UHJvcGVydGllcykpeWllbGRgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoJHtkfSkubGVuZ3RoIDw9ICR7Zy5tYXhQcm9wZXJ0aWVzfWA7Y29uc3RbbHIsZnJdPU9iamVjdC5lbnRyaWVzKGcucGF0dGVyblByb3BlcnRpZXMpWzBdLHJyPWJyKGBuZXcgUmVnRXhwKC8ke2xyfS8pYCksZ3I9YXIoZnIsTSwidmFsdWUiKSxqcj1mLlR5cGVHdWFyZC5UU2NoZW1hKGcuYWRkaXRpb25hbFByb3BlcnRpZXMpP2FyKGcuYWRkaXRpb25hbFByb3BlcnRpZXMsTSxkKTpnLmFkZGl0aW9uYWxQcm9wZXJ0aWVzPT09ITE/ImZhbHNlIjoidHJ1ZSIsU3I9YCgke3JyfS50ZXN0KGtleSkgPyAke2dyfSA6ICR7anJ9KWA7eWllbGRgKE9iamVjdC5lbnRyaWVzKCR7ZH0pLmV2ZXJ5KChba2V5LCB2YWx1ZV0pID0+ICR7U3J9KSlgfWZ1bmN0aW9uKlUoZyxNLGQpe2NvbnN0IGxyPU0uZmluZEluZGV4KChycik9PnJyLiRpZD09PWcuJHJlZik7aWYobHI9PT0tMSl0aHJvdyBuZXcgeChnKTtjb25zdCBmcj1NW2xyXTtpZihRLmZ1bmN0aW9ucy5oYXMoZy4kcmVmKSlyZXR1cm4geWllbGRgJHtUcihnLiRyZWYpfSgke2R9KWA7eWllbGQqQihmcixNLGQpfWZ1bmN0aW9uKiQoZyxNLGQpe2lmKHlpZWxkYCh0eXBlb2YgJHtkfSA9PT0gJ3N0cmluZycpYCx1LklzTnVtYmVyKGcubWluTGVuZ3RoKSl5aWVsZGAke2R9Lmxlbmd0aCA+PSAke2cubWluTGVuZ3RofWA7aWYodS5Jc051bWJlcihnLm1heExlbmd0aCkpeWllbGRgJHtkfS5sZW5ndGggPD0gJHtnLm1heExlbmd0aH1gO2lmKGcucGF0dGVybiE9PXZvaWQgMCl5aWVsZGAke2JyKGAke25ldyBSZWdFeHAoZy5wYXR0ZXJuKX07YCl9LnRlc3QoJHtkfSlgO2lmKGcuZm9ybWF0IT09dm9pZCAwKXlpZWxkYGZvcm1hdCgnJHtnLmZvcm1hdH0nLCAke2R9KWB9ZnVuY3Rpb24qdXIoZyxNLGQpe3lpZWxkYCh0eXBlb2YgJHtkfSA9PT0gJ3N5bWJvbCcpYH1mdW5jdGlvbip0cihnLE0sZCl7eWllbGRgKHR5cGVvZiAke2R9ID09PSAnc3RyaW5nJylgLHlpZWxkYCR7YnIoYCR7bmV3IFJlZ0V4cChnLnBhdHRlcm4pfTtgKX0udGVzdCgke2R9KWB9ZnVuY3Rpb24qbShnLE0sZCl7eWllbGRgJHtUcihnLiRyZWYpfSgke2R9KWB9ZnVuY3Rpb24qaHIoZyxNLGQpe2lmKHlpZWxkYEFycmF5LmlzQXJyYXkoJHtkfSlgLGcuaXRlbXM9PT12b2lkIDApcmV0dXJuIHlpZWxkYCR7ZH0ubGVuZ3RoID09PSAwYDt5aWVsZGAoJHtkfS5sZW5ndGggPT09ICR7Zy5tYXhJdGVtc30pYDtmb3IobGV0IGxyPTA7bHI8Zy5pdGVtcy5sZW5ndGg7bHIrKyl5aWVsZGAke2FyKGcuaXRlbXNbbHJdLE0sYCR7ZH1bJHtscn1dYCl9YH1mdW5jdGlvbipjKGcsTSxkKXt5aWVsZGAke2R9ID09PSB1bmRlZmluZWRgfWZ1bmN0aW9uKmkoZyxNLGQpe3lpZWxkYCgke2cuYW55T2YubWFwKChscik9PmFyKGxyLE0sZCkpLmpvaW4oIiB8fCAiKX0pYH1mdW5jdGlvbipuKGcsTSxkKXtpZih5aWVsZGAke2R9IGluc3RhbmNlb2YgVWludDhBcnJheWAsdS5Jc051bWJlcihnLm1heEJ5dGVMZW5ndGgpKXlpZWxkYCgke2R9Lmxlbmd0aCA8PSAke2cubWF4Qnl0ZUxlbmd0aH0pYDtpZih1LklzTnVtYmVyKGcubWluQnl0ZUxlbmd0aCkpeWllbGRgKCR7ZH0ubGVuZ3RoID49ICR7Zy5taW5CeXRlTGVuZ3RofSlgfWZ1bmN0aW9uKmEoZyxNLGQpe3lpZWxkInRydWUifWZ1bmN0aW9uKmIoZyxNLGQpe3lpZWxkIHooZCl9ZnVuY3Rpb24qbChnLE0sZCl7Y29uc3QgbHI9US5pbnN0YW5jZXMuc2l6ZTtRLmluc3RhbmNlcy5zZXQobHIsZykseWllbGRga2luZCgnJHtnW2YuS2luZF19JywgJHtscn0sICR7ZH0pYH1mdW5jdGlvbipCKGcsTSxkLGxyPSEwKXtjb25zdCBmcj11LklzU3RyaW5nKGcuJGlkKT9bLi4uTSxnXTpNLHJyPWc7aWYobHImJnUuSXNTdHJpbmcoZy4kaWQpKXtjb25zdCBncj1UcihnLiRpZCk7aWYoUS5mdW5jdGlvbnMuaGFzKGdyKSlyZXR1cm4geWllbGRgJHtncn0oJHtkfSlgO2Vsc2V7Y29uc3QganI9dnIoZ3IsZyxNLCJ2YWx1ZSIsITEpO3JldHVybiBRLmZ1bmN0aW9ucy5zZXQoZ3IsanIpLHlpZWxkYCR7Z3J9KCR7ZH0pYH19c3dpdGNoKHJyW2YuS2luZF0pe2Nhc2UiQW55IjpyZXR1cm4geWllbGQqQShycixmcixkKTtjYXNlIkFycmF5IjpyZXR1cm4geWllbGQqZXIocnIsZnIsZCk7Y2FzZSJBc3luY0l0ZXJhdG9yIjpyZXR1cm4geWllbGQqT3IocnIsZnIsZCk7Y2FzZSJCaWdJbnQiOnJldHVybiB5aWVsZCpYKHJyLGZyLGQpO2Nhc2UiQm9vbGVhbiI6cmV0dXJuIHlpZWxkKkgocnIsZnIsZCk7Y2FzZSJDb25zdHJ1Y3RvciI6cmV0dXJuIHlpZWxkKnNyKHJyLGZyLGQpO2Nhc2UiRGF0ZSI6cmV0dXJuIHlpZWxkKnYocnIsZnIsZCk7Y2FzZSJGdW5jdGlvbiI6cmV0dXJuIHlpZWxkKmsocnIsZnIsZCk7Y2FzZSJJbnRlZ2VyIjpyZXR1cm4geWllbGQqeShycixmcixkKTtjYXNlIkludGVyc2VjdCI6cmV0dXJuIHlpZWxkKl8ocnIsZnIsZCk7Y2FzZSJJdGVyYXRvciI6cmV0dXJuIHlpZWxkKlMocnIsZnIsZCk7Y2FzZSJMaXRlcmFsIjpyZXR1cm4geWllbGQqaihycixmcixkKTtjYXNlIk5ldmVyIjpyZXR1cm4geWllbGQqTihycixmcixkKTtjYXNlIk5vdCI6cmV0dXJuIHlpZWxkKloocnIsZnIsZCk7Y2FzZSJOdWxsIjpyZXR1cm4geWllbGQqWShycixmcixkKTtjYXNlIk51bWJlciI6cmV0dXJuIHlpZWxkKkQocnIsZnIsZCk7Y2FzZSJPYmplY3QiOnJldHVybiB5aWVsZCpKKHJyLGZyLGQpO2Nhc2UiUHJvbWlzZSI6cmV0dXJuIHlpZWxkKm5yKHJyLGZyLGQpO2Nhc2UiUmVjb3JkIjpyZXR1cm4geWllbGQqY3IocnIsZnIsZCk7Y2FzZSJSZWYiOnJldHVybiB5aWVsZCpVKHJyLGZyLGQpO2Nhc2UiU3RyaW5nIjpyZXR1cm4geWllbGQqJChycixmcixkKTtjYXNlIlN5bWJvbCI6cmV0dXJuIHlpZWxkKnVyKHJyLGZyLGQpO2Nhc2UiVGVtcGxhdGVMaXRlcmFsIjpyZXR1cm4geWllbGQqdHIocnIsZnIsZCk7Y2FzZSJUaGlzIjpyZXR1cm4geWllbGQqbShycixmcixkKTtjYXNlIlR1cGxlIjpyZXR1cm4geWllbGQqaHIocnIsZnIsZCk7Y2FzZSJVbmRlZmluZWQiOnJldHVybiB5aWVsZCpjKHJyLGZyLGQpO2Nhc2UiVW5pb24iOnJldHVybiB5aWVsZCppKHJyLGZyLGQpO2Nhc2UiVWludDhBcnJheSI6cmV0dXJuIHlpZWxkKm4ocnIsZnIsZCk7Y2FzZSJVbmtub3duIjpyZXR1cm4geWllbGQqYShycixmcixkKTtjYXNlIlZvaWQiOnJldHVybiB5aWVsZCpiKHJyLGZyLGQpO2RlZmF1bHQ6aWYoIWYuVHlwZVJlZ2lzdHJ5LkhhcyhycltmLktpbmRdKSl0aHJvdyBuZXcgQyhnKTtyZXR1cm4geWllbGQqbChycixmcixkKX19Y29uc3QgUT17bGFuZ3VhZ2U6ImphdmFzY3JpcHQiLGZ1bmN0aW9uczpuZXcgTWFwLHZhcmlhYmxlczpuZXcgTWFwLGluc3RhbmNlczpuZXcgTWFwfTtmdW5jdGlvbiBhcihnLE0sZCxscj0hMCl7cmV0dXJuYCgke1suLi5CKGcsTSxkLGxyKV0uam9pbigiICYmICIpfSlgfWZ1bmN0aW9uIFRyKGcpe3JldHVybmBjaGVja18ke1IuRW5jb2RlKGcpfWB9ZnVuY3Rpb24gYnIoZyl7Y29uc3QgTT1gbG9jYWxfJHtRLnZhcmlhYmxlcy5zaXplfWA7cmV0dXJuIFEudmFyaWFibGVzLnNldChNLGBjb25zdCAke019ID0gJHtnfWApLE19ZnVuY3Rpb24gdnIoZyxNLGQsbHIsZnI9ITApe2NvbnN0W3JyLGdyXT1bIlxuIiwoUnIpPT4iIi5wYWRTdGFydChSciwiICIpXSxqcj1FcigidmFsdWUiLCJhbnkiKSxTcj1kcigiYm9vbGVhbiIpLHlyPVsuLi5CKE0sZCxscixmcildLm1hcCgoUnIpPT5gJHtncig0KX0ke1JyfWApLmpvaW4oYCAmJiR7cnJ9YCk7cmV0dXJuYGZ1bmN0aW9uICR7Z30oJHtqcn0pJHtTcn0geyR7cnJ9JHtncigyKX1yZXR1cm4gKCR7cnJ9JHt5cn0ke3JyfSR7Z3IoMil9KVxufWB9ZnVuY3Rpb24gRXIoZyxNKXtjb25zdCBkPVEubGFuZ3VhZ2U9PT0idHlwZXNjcmlwdCI/YDogJHtNfWA6IiI7cmV0dXJuYCR7Z30ke2R9YH1mdW5jdGlvbiBkcihnKXtyZXR1cm4gUS5sYW5ndWFnZT09PSJ0eXBlc2NyaXB0Ij9gOiAke2d9YDoiIn1mdW5jdGlvbiBJKGcsTSxkKXtjb25zdCBscj12cigiY2hlY2siLGcsTSwidmFsdWUiKSxmcj1FcigidmFsdWUiLCJhbnkiKSxycj1kcigiYm9vbGVhbiIpLGdyPVsuLi5RLmZ1bmN0aW9ucy52YWx1ZXMoKV0sanI9Wy4uLlEudmFyaWFibGVzLnZhbHVlcygpXSxTcj11LklzU3RyaW5nKGcuJGlkKT9gcmV0dXJuIGZ1bmN0aW9uIGNoZWNrKCR7ZnJ9KSR7cnJ9IHtcbiAgcmV0dXJuICR7VHIoZy4kaWQpfSh2YWx1ZSlcbn1gOmByZXR1cm4gJHtscn1gO3JldHVyblsuLi5qciwuLi5ncixTcl0uam9pbigiXG4iKX1mdW5jdGlvbiBpciguLi5nKXtjb25zdCBNPXtsYW5ndWFnZToiamF2YXNjcmlwdCJ9LFtkLGxyLGZyXT1nLmxlbmd0aD09PTImJnUuSXNBcnJheShnWzFdKT9bZ1swXSxnWzFdLE1dOmcubGVuZ3RoPT09MiYmIXUuSXNBcnJheShnWzFdKT9bZ1swXSxbXSxnWzFdXTpnLmxlbmd0aD09PTM/W2dbMF0sZ1sxXSxnWzJdXTpnLmxlbmd0aD09PTE/W2dbMF0sW10sTV06W251bGwsW10sTV07aWYoUS5sYW5ndWFnZT1mci5sYW5ndWFnZSxRLnZhcmlhYmxlcy5jbGVhcigpLFEuZnVuY3Rpb25zLmNsZWFyKCksUS5pbnN0YW5jZXMuY2xlYXIoKSwhZi5UeXBlR3VhcmQuVFNjaGVtYShkKSl0aHJvdyBuZXcgbyhkKTtmb3IobGV0IHJyIG9mIGxyKWlmKCFmLlR5cGVHdWFyZC5UU2NoZW1hKHJyKSl0aHJvdyBuZXcgbyhycik7cmV0dXJuIEkoZCxscixmcil9UC5Db2RlPWlyO2Z1bmN0aW9uIFcoZyxNPVtdKXtjb25zdCBkPWlyKGcsTSx7bGFuZ3VhZ2U6ImphdmFzY3JpcHQifSksbHI9Z2xvYmFsVGhpcy5GdW5jdGlvbigia2luZCIsImZvcm1hdCIsImhhc2giLGQpLGZyPW5ldyBNYXAoUS5pbnN0YW5jZXMpO2Z1bmN0aW9uIHJyKHlyLFJyLFByKXtpZighZi5UeXBlUmVnaXN0cnkuSGFzKHlyKXx8IWZyLmhhcyhScikpcmV0dXJuITE7Y29uc3QgbXI9ZnIuZ2V0KFJyKTtyZXR1cm4gZi5UeXBlUmVnaXN0cnkuR2V0KHlyKShtcixQcil9ZnVuY3Rpb24gZ3IoeXIsUnIpe2lmKCFmLkZvcm1hdFJlZ2lzdHJ5Lkhhcyh5cikpcmV0dXJuITE7cmV0dXJuIGYuRm9ybWF0UmVnaXN0cnkuR2V0KHlyKShScil9ZnVuY3Rpb24ganIoeXIpe3JldHVybiBWLkhhc2goeXIpfWNvbnN0IFNyPWxyKHJyLGdyLGpyKTtyZXR1cm4gbmV3IE8oZyxNLFNyLGQpfVAuQ29tcGlsZT1XfSkoR3x8KHIuVHlwZUNvbXBpbGVyPUc9e30pKX0pLGRuPWtyKChyKT0+e3ZhciB0PXImJnIuX19jcmVhdGVCaW5kaW5nfHwoT2JqZWN0LmNyZWF0ZT9mdW5jdGlvbihWLHUsTyxUKXtpZihUPT09dm9pZCAwKVQ9Tzt2YXIgRT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHUsTyk7aWYoIUV8fCgiZ2V0ImluIEU/IXUuX19lc01vZHVsZTpFLndyaXRhYmxlfHxFLmNvbmZpZ3VyYWJsZSkpRT17ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdVtPXX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eShWLFQsRSl9OmZ1bmN0aW9uKFYsdSxPLFQpe2lmKFQ9PT12b2lkIDApVD1PO1ZbVF09dVtPXX0pLGY9ciYmci5fX2V4cG9ydFN0YXJ8fGZ1bmN0aW9uKFYsdSl7Zm9yKHZhciBPIGluIFYpaWYoTyE9PSJkZWZhdWx0IiYmIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh1LE8pKXQodSxWLE8pfTtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5WYWx1ZUVycm9yVHlwZT12b2lkIDA7dmFyIGU9YzAoKTtPYmplY3QuZGVmaW5lUHJvcGVydHkociwiVmFsdWVFcnJvclR5cGUiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLlZhbHVlRXJyb3JUeXBlfX0pLGYoeW4oKSxyKX0pLExuPWtyKChyLHQpPT57dmFyIGY9ZnVuY3Rpb24oRSl7dmFyIFI9RS5pbmRleE9mKCIlIik7aWYoUj09PS0xKXJldHVybiBFO3ZhciBDPUUubGVuZ3RoLHg9IiIsbz0wLEc9MCxQPVIsdz1WO3doaWxlKFI+LTEmJlI8Qyl7dmFyIHE9ZShFW1IrMV0sNCksRj1lKEVbUisyXSwwKSxLPXF8RixMPU9bS107aWYodz1PWzI1Nit3K0xdLEc9Rzw8NnxLJk9bMzY0K0xdLHc9PT1WKXgrPUUuc2xpY2UobyxQKSx4Kz1HPD02NTUzNT9TdHJpbmcuZnJvbUNoYXJDb2RlKEcpOlN0cmluZy5mcm9tQ2hhckNvZGUoNTUyMzIrKEc+PjEwKSw1NjMyMCsoRyYxMDIzKSksRz0wLG89UiszLFI9UD1FLmluZGV4T2YoIiUiLG8pO2Vsc2UgaWYodz09PXUpcmV0dXJuIG51bGw7ZWxzZXtpZihSKz0zLFI8QyYmRS5jaGFyQ29kZUF0KFIpPT09MzcpY29udGludWU7cmV0dXJuIG51bGx9fXJldHVybiB4K0Uuc2xpY2Uobyl9LGU9ZnVuY3Rpb24oRSxSKXt2YXIgQz1UW0VdO3JldHVybiBDPT09dm9pZCAwPzI1NTpDPDxSfSxWPTEyLHU9MCxPPVswLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDMsMywzLDMsMywzLDMsMywzLDMsMywzLDMsMywzLDMsMywzLDMsMywzLDMsMywzLDMsMywzLDMsMywzLDMsMyw0LDQsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNiw3LDcsNyw3LDcsNyw3LDcsNyw3LDcsNyw4LDcsNywxMCw5LDksOSwxMSw0LDQsNCw0LDQsNCw0LDQsNCw0LDQsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMTIsMCwwLDAsMCwyNCwzNiw0OCw2MCw3Miw4NCw5NiwwLDEyLDEyLDEyLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwyNCwwLDAsMCwwLDAsMCwwLDAsMCwyNCwyNCwyNCwwLDAsMCwwLDAsMCwwLDAsMCwyNCwyNCwwLDAsMCwwLDAsMCwwLDAsMCwwLDQ4LDQ4LDQ4LDAsMCwwLDAsMCwwLDAsMCwwLDAsNDgsNDgsMCwwLDAsMCwwLDAsMCwwLDAsNDgsMCwwLDAsMCwwLDAsMCwwLDAsMCwxMjcsNjMsNjMsNjMsMCwzMSwxNSwxNSwxNSw3LDcsN10sVD17IjAiOjAsIjEiOjEsIjIiOjIsIjMiOjMsIjQiOjQsIjUiOjUsIjYiOjYsIjciOjcsIjgiOjgsIjkiOjksYToxMCxBOjEwLGI6MTEsQjoxMSxjOjEyLEM6MTIsZDoxMyxEOjEzLGU6MTQsRToxNCxmOjE1LEY6MTV9O3QuZXhwb3J0cz1mfSksU249a3IoKHIsdCk9Pnt2YXIgZj1mdW5jdGlvbihPKXtjb25zdCBUPW5ldyB1O2lmKHR5cGVvZiBPIT09InN0cmluZyIpcmV0dXJuIFQ7bGV0IEU9Ty5sZW5ndGgsUj0iIixDPSIiLHg9LTEsbz0tMSxHPSExLFA9ITEsdz0hMSxxPSExLEY9ITEsSz0wO2ZvcihsZXQgTD0wO0w8RSsxO0wrKylpZihLPUwhPT1FP08uY2hhckNvZGVBdChMKTozOCxLPT09Mzgpe2lmKEY9bz54LCFGKW89TDtpZihSPU8uc2xpY2UoeCsxLG8pLEZ8fFIubGVuZ3RoPjApe2lmKHcpUj1SLnJlcGxhY2UoViwiICIpO2lmKEcpUj1lKFIpfHxSO2lmKEYpe2lmKEM9Ty5zbGljZShvKzEsTCkscSlDPUMucmVwbGFjZShWLCIgIik7aWYoUClDPWUoQyl8fEN9Y29uc3Qgej1UW1JdO2lmKHo9PT12b2lkIDApVFtSXT1DO2Vsc2UgaWYoei5wb3Apei5wdXNoKEMpO2Vsc2UgVFtSXT1beixDXX1DPSIiLHg9TCxvPUwsRz0hMSxQPSExLHc9ITEscT0hMX1lbHNlIGlmKEs9PT02MSlpZihvPD14KW89TDtlbHNlIFA9ITA7ZWxzZSBpZihLPT09NDMpaWYobz54KXE9ITA7ZWxzZSB3PSEwO2Vsc2UgaWYoSz09PTM3KWlmKG8+eClQPSEwO2Vsc2UgRz0hMDtyZXR1cm4gVH0sZT1MbigpLFY9L1wrL2csdT1mdW5jdGlvbigpe307dS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShudWxsKSx0LmV4cG9ydHM9Zn0pLENuPWtyKChyLHQpPT57dmFyIGY9ZnVuY3Rpb24odSl7Y29uc3QgTz11Lmxlbmd0aDtpZihPPT09MClyZXR1cm4iIjtsZXQgVD0iIixFPTAsUj0wO3I6Zm9yKDtSPE87UisrKXtsZXQgQz11LmNoYXJDb2RlQXQoUik7d2hpbGUoQzwxMjgpe2lmKFZbQ10hPT0xKXtpZihFPFIpVCs9dS5zbGljZShFLFIpO0U9UisxLFQrPWVbQ119aWYoKytSPT09TylicmVhayByO0M9dS5jaGFyQ29kZUF0KFIpfWlmKEU8UilUKz11LnNsaWNlKEUsUik7aWYoQzwyMDQ4KXtFPVIrMSxUKz1lWzE5MnxDPj42XStlWzEyOHxDJjYzXTtjb250aW51ZX1pZihDPDU1Mjk2fHxDPj01NzM0NCl7RT1SKzEsVCs9ZVsyMjR8Qz4+MTJdK2VbMTI4fEM+PjYmNjNdK2VbMTI4fEMmNjNdO2NvbnRpbnVlfWlmKCsrUixSPj1PKXRocm93IG5ldyBFcnJvcigiVVJJIG1hbGZvcm1lZCIpO2NvbnN0IHg9dS5jaGFyQ29kZUF0KFIpJjEwMjM7RT1SKzEsQz02NTUzNisoKEMmMTAyMyk8PDEwfHgpLFQrPWVbMjQwfEM+PjE4XStlWzEyOHxDPj4xMiY2M10rZVsxMjh8Qz4+NiY2M10rZVsxMjh8QyY2M119aWYoRT09PTApcmV0dXJuIHU7aWYoRTxPKXJldHVybiBUK3Uuc2xpY2UoRSk7cmV0dXJuIFR9LGU9QXJyYXkuZnJvbSh7bGVuZ3RoOjI1Nn0sKHUsTyk9PiIlIisoKE88MTY/IjAiOiIiKStPLnRvU3RyaW5nKDE2KSkudG9VcHBlckNhc2UoKSksVj1uZXcgSW50OEFycmF5KFswLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwxLDAsMCwwLDAsMCwxLDEsMSwxLDAsMCwxLDEsMCwxLDEsMSwxLDEsMSwxLDEsMSwxLDAsMCwwLDAsMCwwLDAsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDAsMCwwLDAsMSwwLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwxLDEsMSwwLDAsMCwxLDBdKTt0LmV4cG9ydHM9e2VuY29kZVN0cmluZzpmfX0pLEduPWtyKChyLHQpPT57dmFyIGY9ZnVuY3Rpb24odSl7Y29uc3QgTz10eXBlb2YgdTtpZihPPT09InN0cmluZyIpcmV0dXJuIFYodSk7ZWxzZSBpZihPPT09ImJpZ2ludCIpcmV0dXJuIHUudG9TdHJpbmcoKTtlbHNlIGlmKE89PT0iYm9vbGVhbiIpcmV0dXJuIHU/InRydWUiOiJmYWxzZSI7ZWxzZSBpZihPPT09Im51bWJlciImJk51bWJlci5pc0Zpbml0ZSh1KSlyZXR1cm4gdTwxMDAwMDAwMDAwMDAwMDAwMDAwMDAwPyIiK3U6VigiIit1KTtyZXR1cm4iIn0sZT1mdW5jdGlvbih1KXtsZXQgTz0iIjtpZih1PT09bnVsbHx8dHlwZW9mIHUhPT0ib2JqZWN0IilyZXR1cm4gTztjb25zdCBUPSImIixFPU9iamVjdC5rZXlzKHUpLFI9RS5sZW5ndGg7bGV0IEM9MDtmb3IobGV0IHg9MDt4PFI7eCsrKXtjb25zdCBvPUVbeF0sRz11W29dLFA9VihvKSsiPSI7aWYoeClPKz1UO2lmKEFycmF5LmlzQXJyYXkoRykpe0M9Ry5sZW5ndGg7Zm9yKGxldCB3PTA7dzxDO3crKyl7aWYodylPKz1UO08rPVAsTys9ZihHW3ddKX19ZWxzZSBPKz1QLE8rPWYoRyl9cmV0dXJuIE99LHtlbmNvZGVTdHJpbmc6Vn09Q24oKTt0LmV4cG9ydHM9ZX0pLE0wPWtyKChyLHQpPT57dmFyIGY9U24oKSxlPUduKCksVj17cGFyc2U6ZixzdHJpbmdpZnk6ZX07dC5leHBvcnRzPVYsdC5leHBvcnRzLmRlZmF1bHQ9Vix0LmV4cG9ydHMucGFyc2U9Zix0LmV4cG9ydHMuc3RyaW5naWZ5PWV9KSxIcj0ocix0KT0+KHtwYXJ0OnIsc3RvcmU6bnVsbCxpbmVydDp0IT09dm9pZCAwP25ldyBNYXAodC5tYXAoKGYpPT5bZi5wYXJ0LmNoYXJDb2RlQXQoMCksZl0pKTpudWxsLHBhcmFtczpudWxsLHdpbGRjYXJkU3RvcmU6bnVsbH0pLEMwPShyLHQpPT4oey4uLnIscGFydDp0fSksRzA9KHIpPT4oe3BhcmFtTmFtZTpyLHN0b3JlOm51bGwsaW5lcnQ6bnVsbH0pO2NsYXNzIFpye3Jvb3Q9e307aGlzdG9yeT1bXTtzdGF0aWMgcmVnZXg9e3N0YXRpYzovOi4rPyg/PVwvfCQpLyxwYXJhbXM6LzouKz8oPz1cL3wkKS9nfTthZGQocix0LGYpe2xldCBlO2lmKHR5cGVvZiB0IT0ic3RyaW5nIil0aHJvdyBUeXBlRXJyb3IoIlJvdXRlIHBhdGggbXVzdCBiZSBhIHN0cmluZyIpO3Q9PT0iIj90PSIvIjp0WzBdIT09Ii8iJiYodD1gLyR7dH1gKSx0aGlzLmhpc3RvcnkucHVzaChbcix0LGZdKTtsZXQgVj10W3QubGVuZ3RoLTFdPT09IioiO1YmJih0PXQuc2xpY2UoMCwtMSkpO2xldCB1PXQuc3BsaXQoWnIucmVnZXguc3RhdGljKSxPPXQubWF0Y2goWnIucmVnZXgucGFyYW1zKXx8W107dVt1Lmxlbmd0aC0xXT09PSIiJiZ1LnBvcCgpLGU9dGhpcy5yb290W3JdP3RoaXMucm9vdFtyXTp0aGlzLnJvb3Rbcl09SHIoIi8iKTtsZXQgVD0wO2ZvcihsZXQgRT0wO0U8dS5sZW5ndGg7KytFKXtsZXQgUj11W0VdO2lmKEU+MCl7bGV0IEM9T1tUKytdLnNsaWNlKDEpO2lmKGUucGFyYW1zPT09bnVsbCllLnBhcmFtcz1HMChDKTtlbHNlIGlmKGUucGFyYW1zLnBhcmFtTmFtZSE9PUMpdGhyb3cgRXJyb3IoYENhbm5vdCBjcmVhdGUgcm91dGUgIiR7dH0iIHdpdGggcGFyYW1ldGVyICIke0N9IiBiZWNhdXNlIGEgcm91dGUgYWxyZWFkeSBleGlzdHMgd2l0aCBhIGRpZmZlcmVudCBwYXJhbWV0ZXIgbmFtZSAoIiR7ZS5wYXJhbXMucGFyYW1OYW1lfSIpIGluIHRoZSBzYW1lIGxvY2F0aW9uYCk7bGV0IHg9ZS5wYXJhbXM7aWYoeC5pbmVydD09PW51bGwpe2U9eC5pbmVydD1IcihSKTtjb250aW51ZX1lPXguaW5lcnR9Zm9yKGxldCBDPTA7Oyl7aWYoQz09PVIubGVuZ3RoKXtpZihDPGUucGFydC5sZW5ndGgpe2xldCB4PUMwKGUsZS5wYXJ0LnNsaWNlKEMpKTtPYmplY3QuYXNzaWduKGUsSHIoUixbeF0pKX1icmVha31pZihDPT09ZS5wYXJ0Lmxlbmd0aCl7aWYoZS5pbmVydD09PW51bGwpZS5pbmVydD1uZXcgTWFwO2Vsc2UgaWYoZS5pbmVydC5oYXMoUi5jaGFyQ29kZUF0KEMpKSl7ZT1lLmluZXJ0LmdldChSLmNoYXJDb2RlQXQoQykpLFI9Ui5zbGljZShDKSxDPTA7Y29udGludWV9bGV0IHg9SHIoUi5zbGljZShDKSk7ZS5pbmVydC5zZXQoUi5jaGFyQ29kZUF0KEMpLHgpLGU9eDticmVha31pZihSW0NdIT09ZS5wYXJ0W0NdKXtsZXQgeD1DMChlLGUucGFydC5zbGljZShDKSksbz1IcihSLnNsaWNlKEMpKTtPYmplY3QuYXNzaWduKGUsSHIoZS5wYXJ0LnNsaWNlKDAsQyksW3gsb10pKSxlPW87YnJlYWt9KytDfX1pZihUPE8ubGVuZ3RoKXtsZXQgRT1PW1RdLFI9RS5zbGljZSgxKTtpZihlLnBhcmFtcz09PW51bGwpZS5wYXJhbXM9RzAoUik7ZWxzZSBpZihlLnBhcmFtcy5wYXJhbU5hbWUhPT1SKXRocm93IEVycm9yKGBDYW5ub3QgY3JlYXRlIHJvdXRlICIke3R9IiB3aXRoIHBhcmFtZXRlciAiJHtSfSIgYmVjYXVzZSBhIHJvdXRlIGFscmVhZHkgZXhpc3RzIHdpdGggYSBkaWZmZXJlbnQgcGFyYW1ldGVyIG5hbWUgKCIke2UucGFyYW1zLnBhcmFtTmFtZX0iKSBpbiB0aGUgc2FtZSBsb2NhdGlvbmApO3JldHVybiBlLnBhcmFtcy5zdG9yZT09PW51bGwmJihlLnBhcmFtcy5zdG9yZT1mKSxlLnBhcmFtcy5zdG9yZX1yZXR1cm4gVj8oZS53aWxkY2FyZFN0b3JlPT09bnVsbCYmKGUud2lsZGNhcmRTdG9yZT1mKSxlLndpbGRjYXJkU3RvcmUpOihlLnN0b3JlPT09bnVsbCYmKGUuc3RvcmU9ZiksZS5zdG9yZSl9ZmluZChyLHQpe2xldCBmPXRoaXMucm9vdFtyXTtyZXR1cm4gZj9FMCh0LHQubGVuZ3RoLGYsMCk6bnVsbH19dmFyIEUwPShyLHQsZixlKT0+e2xldCBWPWY/LnBhcnQsdT1lK1YubGVuZ3RoO2lmKFYubGVuZ3RoPjEpe2lmKHU+dClyZXR1cm4gbnVsbDtpZihWLmxlbmd0aDwxNSl7Zm9yKGxldCBPPTEsVD1lKzE7TzxWLmxlbmd0aDsrK08sKytUKWlmKFYuY2hhckNvZGVBdChPKSE9PXIuY2hhckNvZGVBdChUKSlyZXR1cm4gbnVsbH1lbHNlIGlmKHIuc3Vic3RyaW5nKGUsdSkhPT1WKXJldHVybiBudWxsfWlmKHU9PT10KXJldHVybiBmLnN0b3JlIT09bnVsbD97c3RvcmU6Zi5zdG9yZSxwYXJhbXM6e319OmYud2lsZGNhcmRTdG9yZSE9PW51bGw/e3N0b3JlOmYud2lsZGNhcmRTdG9yZSxwYXJhbXM6eyIqIjoiIn19Om51bGw7aWYoZi5pbmVydCE9PW51bGwpe2xldCBPPWYuaW5lcnQuZ2V0KHIuY2hhckNvZGVBdCh1KSk7aWYoTyE9PXZvaWQgMCl7bGV0IFQ9RTAocix0LE8sdSk7aWYoVCE9PW51bGwpcmV0dXJuIFR9fWlmKGYucGFyYW1zIT09bnVsbCl7bGV0IE89Zi5wYXJhbXMsVD1yLmluZGV4T2YoIi8iLHUpO2lmKFQhPT11KXtpZihUPT09LTF8fFQ+PXQpe2lmKE8uc3RvcmUhPT1udWxsKXtsZXQgRT17fTtyZXR1cm4gRVtPLnBhcmFtTmFtZV09ci5zdWJzdHJpbmcodSx0KSx7c3RvcmU6Ty5zdG9yZSxwYXJhbXM6RX19fWVsc2UgaWYoTy5pbmVydCE9PW51bGwpe2xldCBFPUUwKHIsdCxPLmluZXJ0LFQpO2lmKEUhPT1udWxsKXJldHVybiBFLnBhcmFtc1tPLnBhcmFtTmFtZV09ci5zdWJzdHJpbmcodSxUKSxFfX19cmV0dXJuIGYud2lsZGNhcmRTdG9yZSE9PW51bGw/e3N0b3JlOmYud2lsZGNhcmRTdG9yZSxwYXJhbXM6eyIqIjpyLnN1YnN0cmluZyh1LHQpfX06bnVsbH0sUjA9TnIod3IoKSwxKSxmMD1OcihGMCgpLDEpLHEwPU5yKGRuKCksMSk7LyohCiAqIG1lcmdpY2lhbgogKiB2MS4xLjAKICogaHR0cHM6Ly9qaGlsZGVuYmlkZGxlLmdpdGh1Yi5pby9tZXJnaWNpYW4vCiAqIChjKSAyMDIyLTIwMjMgSm9obiBIaWxkZW5iaWRkbGUKICogTUlUIGxpY2Vuc2UKICovdmFyIHhuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzLFUwPShyLHQpPT5mdW5jdGlvbiBmKCl7cmV0dXJuIHR8fCgwLHJbeG4ocilbMF1dKSgodD17ZXhwb3J0czp7fX0pLmV4cG9ydHMsdCksdC5leHBvcnRzfSxfbj1VMCh7InNyYy91dGlsLmNqcyIocix0KXtmdW5jdGlvbiBmKC4uLkMpe2NvbnN0IHg9e307cmV0dXJuIEMuZm9yRWFjaCgobyk9PntvLmZvckVhY2goKEcpPT57eFtHXT0oRyBpbiB4KT8rK3hbR106MX0pfSkseH1mdW5jdGlvbiBlKC4uLkMpe2NvbnN0IHg9ZiguLi5DKTtyZXR1cm4gT2JqZWN0LmtleXMoeCkuZmlsdGVyKChvKT0+eFtvXT4xKX1mdW5jdGlvbiBWKC4uLkMpe3JldHVybiBDLnJlZHVjZSgoeCxvKT0+eC5maWx0ZXIoU2V0LnByb3RvdHlwZS5oYXMsbmV3IFNldChvKSkpfWZ1bmN0aW9uIHUoLi4uQyl7Y29uc3QgeD1mKC4uLkMpO3JldHVybiBPYmplY3Qua2V5cyh4KS5maWx0ZXIoKG8pPT54W29dPT09MSl9ZnVuY3Rpb24gTyguLi5DKXtjb25zdCB4PWYoLi4uQyk7cmV0dXJuIE9iamVjdC5rZXlzKHgpLmZpbHRlcigobyk9Pnhbb108Qy5sZW5ndGgpfWZ1bmN0aW9uIFQoQyx4PSExKXtpZih4KXtjb25zdCBvPVtdO2ZvcihsZXQgRyBpbiBDKW8ucHVzaChHKTtyZXR1cm4gb31lbHNlIHJldHVybiBPYmplY3Qua2V5cyhDKX1mdW5jdGlvbiBFKEMpe3JldHVybiB0eXBlb2YgQz09PSJvYmplY3QiJiZDIT09bnVsbCYmIUFycmF5LmlzQXJyYXkoQyl9ZnVuY3Rpb24gUihDKXtpZighRShDKSlyZXR1cm4hMTtjb25zdCB4PVsid3JpdGFibGUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIl0uc29tZSgodyk9Pih3IGluIEMpKSxvPVsiZ2V0Iiwic2V0Il0uc29tZSgodyk9PnR5cGVvZiBDW3ddPT09ImZ1bmN0aW9uIiksRz1bImdldCIsInNldCJdLmV2ZXJ5KCh3KT0+KHcgaW4gQykpO2xldCBQPSgidmFsdWUiaW4gQykmJnh8fG8mJihHfHx4KTtpZihQKXtjb25zdCB3PVsiY29uZmlndXJhYmxlIiwiZ2V0Iiwic2V0IiwiZW51bWVyYWJsZSIsInZhbHVlIiwid3JpdGFibGUiXTtQPU9iamVjdC5rZXlzKEMpLnNvbWUoKHEpPT4hKHEgaW4gdykpfXJldHVybiBQfXQuZXhwb3J0cz17Y291bnRPY2N1cnJlbmNlczpmLGdldEluTXVsdGlwbGU6ZSxnZXRJbkFsbDpWLGdldE5vdEluTXVsdGlwbGU6dSxnZXROb3RJbkFsbDpPLGdldE9iamVjdEtleXM6VCxpc09iamVjdDpFLGlzUHJvcERlc2NyaXB0b3I6Un19fSksS249VTAoeyJzcmMvaW5kZXguY2pzIihyLHQpe3ZhcntnZXRJbk11bHRpcGxlOmYsZ2V0SW5BbGw6ZSxnZXROb3RJbk11bHRpcGxlOlYsZ2V0Tm90SW5BbGw6dSxnZXRPYmplY3RLZXlzOk8saXNPYmplY3Q6VCxpc1Byb3BEZXNjcmlwdG9yOkV9PV9uKCksUj17b25seUtleXM6W10sc2tpcEtleXM6W10sb25seUNvbW1vbktleXM6ITEsb25seVVuaXZlcnNhbEtleXM6ITEsc2tpcENvbW1vbktleXM6ITEsc2tpcFVuaXZlcnNhbEtleXM6ITEsaW52b2tlR2V0dGVyczohMSxza2lwU2V0dGVyczohMSxhcHBlbmRBcnJheXM6ITEscHJlcGVuZEFycmF5czohMSxkZWR1cEFycmF5czohMSxzb3J0QXJyYXlzOiExLGhvaXN0UHJvdG86ITEsZmlsdGVyOkZ1bmN0aW9uLnByb3RvdHlwZSxiZWZvcmVFYWNoOkZ1bmN0aW9uLnByb3RvdHlwZSxhZnRlckVhY2g6RnVuY3Rpb24ucHJvdG90eXBlLG9uQ2lyY3VsYXI6RnVuY3Rpb24ucHJvdG90eXBlfTtmdW5jdGlvbiBDKC4uLngpe2NvbnN0IG89YXJndW1lbnRzLmxlbmd0aD09PTE/YXJndW1lbnRzWzBdOnt9LEc9ey4uLlIsLi4ub30sUD1uZXcgTWFwLHc9bmV3IE1hcCxxPXR5cGVvZiBHLnNvcnRBcnJheXM9PT0iZnVuY3Rpb24iP0cuc29ydEFycmF5czp2b2lkIDAsRj1uZXcgV2Vha01hcDtsZXQgSz0wO2Z1bmN0aW9uIEwoQSl7cmV0dXJuIE8oQSxHLmhvaXN0UHJvdG8pfWZ1bmN0aW9uIHooLi4uQSl7bGV0IGVyO2lmKEEubGVuZ3RoPjEpe2lmKEcub25seUNvbW1vbktleXMpZXI9ZiguLi5BLm1hcCgoWCk9PkwoWCkpKTtlbHNlIGlmKEcub25seVVuaXZlcnNhbEtleXMpZXI9ZSguLi5BLm1hcCgoWCk9PkwoWCkpKTtlbHNlIGlmKEcuc2tpcENvbW1vbktleXMpZXI9ViguLi5BLm1hcCgoWCk9PkwoWCkpKTtlbHNlIGlmKEcuc2tpcFVuaXZlcnNhbEtleXMpZXI9dSguLi5BLm1hcCgoWCk9PkwoWCkpKX1pZighZXImJkcub25seUtleXMubGVuZ3RoKWVyPUcub25seUtleXM7aWYoZXImJmVyIT09Ry5vbmx5S2V5cyYmRy5vbmx5S2V5cy5sZW5ndGgpZXI9ZXIuZmlsdGVyKChYKT0+Ry5vbmx5S2V5cy5pbmNsdWRlcyhYKSk7Y29uc3QgT3I9QS5yZWR1Y2UoKFgsSCk9PntGLnNldChILFgpO2xldCBzcj1lcnx8TChIKTtpZihHLnNraXBLZXlzLmxlbmd0aClzcj1zci5maWx0ZXIoKHYpPT5HLnNraXBLZXlzLmluZGV4T2Yodik9PT0tMSk7Zm9yKGxldCB2PTA7djxzci5sZW5ndGg7disrKXtjb25zdCBrPXNyW3ZdLHk9WFtrXTtsZXQgXz0hMSxTO2lmKChrIGluIEgpPT09ITEpY29udGludWU7dHJ5e1M9SFtrXX1jYXRjaChOKXtjb25zb2xlLmVycm9yKE4pO2NvbnRpbnVlfWNvbnN0IGo9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihILGspO2lmKGomJnR5cGVvZiBqLnNldD09PSJmdW5jdGlvbiImJnR5cGVvZiBqLmdldCE9PSJmdW5jdGlvbiIpe2lmKCFHLnNraXBTZXR0ZXJzKWouY29uZmlndXJhYmxlPSEwLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShYLGssaik7Y29udGludWV9aWYoRy5maWx0ZXIhPT1SLmZpbHRlcil7Y29uc3QgTj1HLmZpbHRlcih7ZGVwdGg6SyxrZXk6ayxzcmNPYmo6SCxzcmNWYWw6Uyx0YXJnZXRPYmo6WCx0YXJnZXRWYWw6eX0pO2lmKE4hPT12b2lkIDAmJiFOKWNvbnRpbnVlfWlmKEcuYmVmb3JlRWFjaCE9PVIuYmVmb3JlRWFjaCl7Y29uc3QgTj1HLmJlZm9yZUVhY2goe2RlcHRoOkssa2V5Omssc3JjT2JqOkgsc3JjVmFsOlMsdGFyZ2V0T2JqOlgsdGFyZ2V0VmFsOnl9KTtpZihOIT09dm9pZCAwKV89ITAsUz1OfWlmKHR5cGVvZiBTPT09Im9iamVjdCImJlMhPT1udWxsKXtpZihGLmhhcyhIW2tdKSl7Y29uc3QgTj1HLm9uQ2lyY3VsYXIoe2RlcHRoOkssa2V5Omssc3JjT2JqOkgsc3JjVmFsOkhba10sdGFyZ2V0T2JqOlgsdGFyZ2V0VmFsOnl9KTtpZihOPT09dm9pZCAwKXtTPUYuZ2V0KEhba10pLFhba109Uztjb250aW51ZX1fPSEwLFM9Tn19aWYoQXJyYXkuaXNBcnJheShTKSl7aWYoUz1bLi4uU10sQXJyYXkuaXNBcnJheSh5KSl7aWYoRy5hcHBlbmRBcnJheXMpUz1bLi4ueSwuLi5TXTtlbHNlIGlmKEcucHJlcGVuZEFycmF5cylTPVsuLi5TLC4uLnldfWlmKEcuZGVkdXBBcnJheXMpaWYoRy5hZnRlckVhY2ghPT1SLmFmdGVyRWFjaClTPVsuLi5uZXcgU2V0KFMpXTtlbHNle2NvbnN0IE49UC5nZXQoWCk7aWYoTiYmIU4uaW5jbHVkZXMoaykpTi5wdXNoKGspO2Vsc2UgUC5zZXQoWCxba10pfWlmKEcuc29ydEFycmF5cylpZihHLmFmdGVyRWFjaCE9PVIuYWZ0ZXJFYWNoKVM9Uy5zb3J0KHEpO2Vsc2V7Y29uc3QgTj13LmdldChYKTtpZihOJiYhTi5pbmNsdWRlcyhrKSlOLnB1c2goayk7ZWxzZSB3LnNldChYLFtrXSl9fWVsc2UgaWYoVChTKSYmKCFffHwhRShTKSkpe2lmKEsrKyxUKHkpKVM9eih5LFMpO2Vsc2UgUz16KFMpO0stLX1pZihHLmFmdGVyRWFjaCE9PVIuYWZ0ZXJFYWNoKXtjb25zdCBOPUcuYWZ0ZXJFYWNoKHtkZXB0aDpLLGtleTprLG1lcmdlVmFsOlMsc3JjT2JqOkgsdGFyZ2V0T2JqOlh9KTtpZihOIT09dm9pZCAwKV89ITAsUz1OfWlmKF8paWYoRShTKSl7aWYoUy5jb25maWd1cmFibGU9ITAsUy5lbnVtZXJhYmxlPSEoImVudW1lcmFibGUiaW4gUyk/ITA6Uy5lbnVtZXJhYmxlLCgidmFsdWUiaW4gUykmJiEoIndyaXRhYmxlImluIFMpKVMud3JpdGFibGU9ITA7T2JqZWN0LmRlZmluZVByb3BlcnR5KFgsayxTKX1lbHNlIFhba109UztlbHNle2NvbnN0IE49T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihILGspO2lmKE4mJnR5cGVvZiBOLmdldD09PSJmdW5jdGlvbiImJiFHLmludm9rZUdldHRlcnMpe2lmKEcuc2tpcFNldHRlcnMpTi5zZXQ9dm9pZCAwO04uY29uZmlndXJhYmxlPSEwLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShYLGssTil9ZWxzZSBYW2tdPVN9fXJldHVybiBYfSx7fSk7Zm9yKGxldFtYLEhdb2YgUC5lbnRyaWVzKCkpZm9yKGxldCBzciBvZiBIKVhbc3JdPVsuLi5uZXcgU2V0KFhbc3JdKV07Zm9yKGxldFtYLEhdb2Ygdy5lbnRyaWVzKCkpZm9yKGxldCBzciBvZiBIKVhbc3JdLnNvcnQocSk7cmV0dXJuIE9yfWlmKGFyZ3VtZW50cy5sZW5ndGg9PT0xKXJldHVybiBmdW5jdGlvbiguLi5BKXtpZihhcmd1bWVudHMubGVuZ3RoPT09MSlyZXR1cm4gQyh7Li4uRywuLi5BWzBdfSk7ZWxzZSByZXR1cm4geiguLi5BKX07ZWxzZSByZXR1cm4geiguLi5hcmd1bWVudHMpfXQuZXhwb3J0cz1DfX0pLHduPUtuKCksenI9d24oe2FwcGVuZEFycmF5czohMH0pLENyPShyLHQpPT57Y29uc3QgZj1bLi4uQXJyYXkuaXNBcnJheShyKT9yOltyXV0sZT1bXTtmb3IobGV0IFYgb2YgZilpZihWLiRlbHlzaWFDaGVja3N1bSllLnB1c2goVi4kZWx5c2lhQ2hlY2tzdW0pO2ZvcihsZXQgViBvZiBBcnJheS5pc0FycmF5KHQpP3Q6W3RdKWlmKCFlLmluY2x1ZGVzKFY/LiRlbHlzaWFDaGVja3N1bSkpZi5wdXNoKFYpO3JldHVybiBmfSxZcj0ocix0KT0+e3JldHVybntib2R5OnQ/LmJvZHk/P3I/LmJvZHksaGVhZGVyczp0Py5oZWFkZXJzPz9yPy5oZWFkZXJzLHBhcmFtczp0Py5wYXJhbXM/P3I/LnBhcmFtcyxxdWVyeTp0Py5xdWVyeT8/cj8ucXVlcnkscmVzcG9uc2U6dD8ucmVzcG9uc2U/P3I/LnJlc3BvbnNlLHR5cGU6cj8udHlwZXx8dD8udHlwZSxkZXRhaWw6enIodD8uZGV0YWlsPz97fSxyPy5kZXRhaWw/P3t9KSxwYXJzZTpDcihyLnBhcnNlPz9bXSx0Py5wYXJzZT8/W10pLHRyYW5zZm9ybTpDcihyLnRyYW5zZm9ybT8/W10sdD8udHJhbnNmb3JtPz9bXSksYmVmb3JlSGFuZGxlOkNyKHIuYmVmb3JlSGFuZGxlPz9bXSx0Py5iZWZvcmVIYW5kbGU/P1tdKSxhZnRlckhhbmRsZTpDcihyLmFmdGVySGFuZGxlPz9bXSx0Py5hZnRlckhhbmRsZT8/W10pLG9uUmVzcG9uc2U6Q3Ioci5vblJlc3BvbnNlPz9bXSx0Py5vblJlc3BvbnNlPz9bXSksZXJyb3I6Q3Ioci5lcnJvcj8/W10sdD8uZXJyb3I/P1tdKX19LF9yPShyLHttb2RlbHM6dD17fSxhZGRpdGlvbmFsUHJvcGVydGllczpmPSExLGR5bmFtaWM6ZT0hMX0pPT57aWYoIXIpcmV0dXJuO2lmKHR5cGVvZiByPT09InN0cmluZyImJiEociBpbiB0KSlyZXR1cm47Y29uc3QgVj10eXBlb2Ygcj09PSJzdHJpbmciP3Rbcl06cjtpZihWLnR5cGU9PT0ib2JqZWN0IiYmKCJhZGRpdGlvbmFsUHJvcGVydGllcyJpbiBWKT09PSExKVYuYWRkaXRpb25hbFByb3BlcnRpZXM9ZjtpZihlKXJldHVybntzY2hlbWE6VixyZWZlcmVuY2VzOiIiLGNoZWNrRnVuYzooKT0+e30sY29kZToiIixDaGVjazoodSk9PmYwLlZhbHVlLkNoZWNrKFYsdSksRXJyb3JzOih1KT0+ZjAuVmFsdWUuRXJyb3JzKFYsdSksQ29kZTooKT0+IiJ9O3JldHVybiBxMC5UeXBlQ29tcGlsZXIuQ29tcGlsZShWKX0sUG49KHIse21vZGVsczp0PXt9LGFkZGl0aW9uYWxQcm9wZXJ0aWVzOmY9ITEsZHluYW1pYzplPSExfSk9PntpZighcilyZXR1cm47aWYodHlwZW9mIHI9PT0ic3RyaW5nIiYmIShyIGluIHQpKXJldHVybjtjb25zdCBWPXR5cGVvZiByPT09InN0cmluZyI/dFtyXTpyLHU9KFQpPT57aWYoZSlyZXR1cm57c2NoZW1hOlQscmVmZXJlbmNlczoiIixjaGVja0Z1bmM6KCk9Pnt9LGNvZGU6IiIsQ2hlY2s6KEUpPT5mMC5WYWx1ZS5DaGVjayhULEUpLEVycm9yczooRSk9PmYwLlZhbHVlLkVycm9ycyhULEUpLENvZGU6KCk9PiIifTtyZXR1cm4gcTAuVHlwZUNvbXBpbGVyLkNvbXBpbGUoVCl9O2lmKFIwLktpbmQgaW4gVilyZXR1cm57MjAwOnUoVil9O2NvbnN0IE89e307cmV0dXJuIE9iamVjdC5rZXlzKFYpLmZvckVhY2goKFQpPT57Y29uc3QgRT1WW1RdO2lmKHR5cGVvZiBFPT09InN0cmluZyIpe2lmKEUgaW4gdCl7Y29uc3QgUj10W0VdO1IudHlwZT09PSJvYmplY3QiJiYoImFkZGl0aW9uYWxQcm9wZXJ0aWVzImluIFIpLE9bK1RdPShSMC5LaW5kIGluIFIpP3UoUik6Un1yZXR1cm59aWYoRS50eXBlPT09Im9iamVjdCImJigiYWRkaXRpb25hbFByb3BlcnRpZXMiaW4gRSk9PT0hMSlFLmFkZGl0aW9uYWxQcm9wZXJ0aWVzPWY7T1srVF09KFIwLktpbmQgaW4gRSk/dShFKTpFfSksT30sQW49KHIpPT57bGV0IHQ9OTtmb3IobGV0IGY9MDtmPHIubGVuZ3RoOyl0PU1hdGguaW11bCh0XnIuY2hhckNvZGVBdChmKyspLDM4NzQyMDQ4OSk7cmV0dXJuIHQ9dF50Pj4+OX0sbzA9KHIsdCxmKT0+e2NvbnN0IGU9KFYpPT57aWYoZilWLiRlbHlzaWFDaGVja3N1bT1mO3JldHVybiBWfTtyZXR1cm57c3RhcnQ6Q3Ioci5zdGFydCwoInN0YXJ0ImluIHQ/dC5zdGFydDpbXSkubWFwKGUpKSxyZXF1ZXN0OkNyKHIucmVxdWVzdCwoInJlcXVlc3QiaW4gdD90LnJlcXVlc3Q6W10pLm1hcChlKSkscGFyc2U6Q3Ioci5wYXJzZSx0Py5wYXJzZT8/W10pLm1hcChlKSx0cmFuc2Zvcm06Q3Ioci50cmFuc2Zvcm0sKHQ/LnRyYW5zZm9ybT8/W10pLm1hcChlKSksYmVmb3JlSGFuZGxlOkNyKHIuYmVmb3JlSGFuZGxlLCh0Py5iZWZvcmVIYW5kbGU/P1tdKS5tYXAoZSkpLGFmdGVySGFuZGxlOkNyKHIuYWZ0ZXJIYW5kbGUsKHQ/LmFmdGVySGFuZGxlPz9bXSkubWFwKGUpKSxvblJlc3BvbnNlOkNyKHIub25SZXNwb25zZSwodD8ub25SZXNwb25zZT8/W10pLm1hcChlKSksZXJyb3I6Q3Ioci5lcnJvciwodD8uZXJyb3I/P1tdKS5tYXAoZSkpLHN0b3A6Q3Ioci5zdG9wLCgic3RvcCJpbiB0P3Quc3RvcDpbXSkubWFwKGUpKX19LE5uPShyLHQ9ITApPT57aWYoIXIpcmV0dXJuIHI7aWYodHlwZW9mIHI9PT0iZnVuY3Rpb24iKXtpZih0KXIuJGVseXNpYUhvb2tUeXBlPSJnbG9iYWwiO2Vsc2Ugci4kZWx5c2lhSG9va1R5cGU9dm9pZCAwO3JldHVybiByfXJldHVybiByLm1hcCgoZik9PntpZih0KWYuJGVseXNpYUhvb2tUeXBlPSJnbG9iYWwiO2Vsc2UgZi4kZWx5c2lhSG9va1R5cGU9dm9pZCAwO3JldHVybiBmfSl9LFdyPShyKT0+e2lmKCFyKXJldHVybiByO2lmKHR5cGVvZiByPT09ImZ1bmN0aW9uIilyZXR1cm4gci4kZWx5c2lhSG9va1R5cGU9PT0iZ2xvYmFsIj9yOnZvaWQgMDtyZXR1cm4gci5maWx0ZXIoKHQpPT50LiRlbHlzaWFIb29rVHlwZT09PSJnbG9iYWwiKX0seDA9KHIpPT57cmV0dXJuey4uLnIsdHlwZTpyPy50eXBlLGRldGFpbDpyPy5kZXRhaWwscGFyc2U6V3Iocj8ucGFyc2UpLHRyYW5zZm9ybTpXcihyPy50cmFuc2Zvcm0pLGJlZm9yZUhhbmRsZTpXcihyPy5iZWZvcmVIYW5kbGUpLGFmdGVySGFuZGxlOldyKHI/LmFmdGVySGFuZGxlKSxvblJlc3BvbnNlOldyKHI/Lm9uUmVzcG9uc2UpLGVycm9yOldyKHI/LmVycm9yKX19LERuPU5yKE0wKCksMSksbTA9InRvSlNPTiJpbiBuZXcgSGVhZGVycyxIMD0ocik9Pntmb3IobGV0IHQgaW4gcilyZXR1cm4hMDtyZXR1cm4hMX0sVzA9KHIsdCk9PntyLmRlbGV0ZSgiU2V0LUNvb2tpZSIpO2ZvcihsZXQgZj0wO2Y8dC5sZW5ndGg7ZisrKXtjb25zdCBlPXRbZl0uaW5kZXhPZigiPSIpO3IuYXBwZW5kKCJTZXQtQ29va2llIixgJHt0W2ZdLnNsaWNlKDAsZSl9PSR7dFtmXS5zbGljZShlKzEpfWApfXJldHVybiByfSxGcj0ocix0KT0+e2lmKEgwKHQuaGVhZGVycyl8fHQuc3RhdHVzIT09MjAwfHx0LnJlZGlyZWN0KXtpZih0LnJlZGlyZWN0KXQuaGVhZGVycy5Mb2NhdGlvbj10LnJlZGlyZWN0LHQuc3RhdHVzPTMwMjtpZih0LmhlYWRlcnNbIlNldC1Db29raWUiXSYmQXJyYXkuaXNBcnJheSh0LmhlYWRlcnNbIlNldC1Db29raWUiXSkpdC5oZWFkZXJzPVcwKG5ldyBIZWFkZXJzKHQuaGVhZGVycyksdC5oZWFkZXJzWyJTZXQtQ29va2llIl0pO3N3aXRjaChyPy5jb25zdHJ1Y3Rvcj8ubmFtZSl7Y2FzZSJTdHJpbmciOmNhc2UiQmxvYiI6cmV0dXJuIG5ldyBSZXNwb25zZShyLHQpO2Nhc2UiT2JqZWN0IjpjYXNlIkFycmF5IjpyZXR1cm4gUmVzcG9uc2UuanNvbihyLHQpO2Nhc2Ugdm9pZCAwOmlmKCFyKXJldHVybjtyZXR1cm4gUmVzcG9uc2UuanNvbihyLHQpO2Nhc2UiUmVzcG9uc2UiOmNvbnN0IGY9T2JqZWN0LmFzc2lnbih7fSx0LmhlYWRlcnMpO2lmKG0wKXQuaGVhZGVycz1yLmhlYWRlcnMudG9KU09OKCk7ZWxzZSBmb3IobGV0W1YsdV1vZiByLmhlYWRlcnMuZW50cmllcygpKWlmKCEoViBpbiB0LmhlYWRlcnMpKXQuaGVhZGVyc1tWXT11O2ZvcihsZXQgViBpbiBmKXIuaGVhZGVycy5hcHBlbmQoVixmW1ZdKTtpZihyLnN0YXR1cyE9PXQuc3RhdHVzKXQuc3RhdHVzPXIuc3RhdHVzO3JldHVybiByO2Nhc2UiUHJvbWlzZSI6cmV0dXJuIHIudGhlbigoVik9Pntjb25zdCB1PUZyKFYsdCk7aWYodSE9PXZvaWQgMClyZXR1cm4gdTtyZXR1cm59KTtjYXNlIkVycm9yIjpyZXR1cm4gbjAocix0LmhlYWRlcnMpO2Nhc2UiRnVuY3Rpb24iOnJldHVybiByKCk7Y2FzZSJOdW1iZXIiOmNhc2UiQm9vbGVhbiI6cmV0dXJuIG5ldyBSZXNwb25zZShyLnRvU3RyaW5nKCksdCk7ZGVmYXVsdDppZihyIGluc3RhbmNlb2YgUmVzcG9uc2UpcmV0dXJuIHI7Y29uc3QgZT1KU09OLnN0cmluZ2lmeShyKTtpZihlLmNoYXJDb2RlQXQoMCk9PT0xMjMpe2lmKCF0LmhlYWRlcnNbIkNvbnRlbnQtVHlwZSJdKXQuaGVhZGVyc1siQ29udGVudC1UeXBlIl09ImFwcGxpY2F0aW9uL2pzb24iO3JldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkociksdCl9cmV0dXJuIG5ldyBSZXNwb25zZShlLHQpfX1lbHNlIHN3aXRjaChyPy5jb25zdHJ1Y3Rvcj8ubmFtZSl7Y2FzZSJTdHJpbmciOmNhc2UiQmxvYiI6cmV0dXJuIG5ldyBSZXNwb25zZShyKTtjYXNlIk9iamVjdCI6Y2FzZSJBcnJheSI6cmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeShyKSx7aGVhZGVyczp7ImNvbnRlbnQtdHlwZSI6ImFwcGxpY2F0aW9uL2pzb24ifX0pO2Nhc2Ugdm9pZCAwOmlmKCFyKXJldHVybiBuZXcgUmVzcG9uc2UoIiIpO3JldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkocikse2hlYWRlcnM6eyJjb250ZW50LXR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIn19KTtjYXNlIlJlc3BvbnNlIjpyZXR1cm4gcjtjYXNlIlByb21pc2UiOnJldHVybiByLnRoZW4oKGUpPT57Y29uc3QgVj1GcihlLHQpO2lmKFYhPT12b2lkIDApcmV0dXJuIFY7cmV0dXJufSk7Y2FzZSJFcnJvciI6cmV0dXJuIG4wKHIsdC5oZWFkZXJzKTtjYXNlIkZ1bmN0aW9uIjpyZXR1cm4gcigpO2Nhc2UiTnVtYmVyIjpjYXNlIkJvb2xlYW4iOnJldHVybiBuZXcgUmVzcG9uc2Uoci50b1N0cmluZygpKTtkZWZhdWx0OmlmKHIgaW5zdGFuY2VvZiBSZXNwb25zZSlyZXR1cm4gcjtjb25zdCBmPUpTT04uc3RyaW5naWZ5KHIpO2lmKGYuY2hhckNvZGVBdCgwKT09PTEyMylyZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHIpLHtoZWFkZXJzOnsiQ29udGVudC1UeXBlIjoiYXBwbGljYXRpb24vanNvbiJ9fSk7cmV0dXJuIG5ldyBSZXNwb25zZShmKX19LFFyPShyLHQpPT57aWYoSDAodC5oZWFkZXJzKXx8dC5zdGF0dXMhPT0yMDB8fHQucmVkaXJlY3Qpe2lmKHQucmVkaXJlY3QpdC5oZWFkZXJzLkxvY2F0aW9uPXQucmVkaXJlY3QsdC5zdGF0dXM9MzAyO2lmKHQuaGVhZGVyc1siU2V0LUNvb2tpZSJdJiZBcnJheS5pc0FycmF5KHQuaGVhZGVyc1siU2V0LUNvb2tpZSJdKSl0LmhlYWRlcnM9VzAobmV3IEhlYWRlcnModC5oZWFkZXJzKSx0LmhlYWRlcnNbIlNldC1Db29raWUiXSk7c3dpdGNoKHI/LmNvbnN0cnVjdG9yPy5uYW1lKXtjYXNlIlN0cmluZyI6Y2FzZSJCbG9iIjpyZXR1cm4gbmV3IFJlc3BvbnNlKHIse3N0YXR1czp0LnN0YXR1cyxoZWFkZXJzOnQuaGVhZGVyc30pO2Nhc2UiT2JqZWN0IjpjYXNlIkFycmF5IjpyZXR1cm4gUmVzcG9uc2UuanNvbihyLHQpO2Nhc2Ugdm9pZCAwOmlmKCFyKXJldHVybiBuZXcgUmVzcG9uc2UoIiIsdCk7cmV0dXJuIFJlc3BvbnNlLmpzb24ocix0KTtjYXNlIlJlc3BvbnNlIjpjb25zdCBmPU9iamVjdC5hc3NpZ24oe30sdC5oZWFkZXJzKTtpZihtMCl0LmhlYWRlcnM9ci5oZWFkZXJzLnRvSlNPTigpO2Vsc2UgZm9yKGxldFtWLHVdb2Ygci5oZWFkZXJzLmVudHJpZXMoKSlpZighKFYgaW4gdC5oZWFkZXJzKSl0LmhlYWRlcnNbVl09dTtmb3IobGV0IFYgaW4gZilyLmhlYWRlcnMuYXBwZW5kKFYsZltWXSk7cmV0dXJuIHI7Y2FzZSJFcnJvciI6cmV0dXJuIG4wKHIsdC5oZWFkZXJzKTtjYXNlIlByb21pc2UiOnJldHVybiByLnRoZW4oKFYpPT5RcihWLHQpKTtjYXNlIkZ1bmN0aW9uIjpyZXR1cm4gcigpO2Nhc2UiTnVtYmVyIjpjYXNlIkJvb2xlYW4iOnJldHVybiBuZXcgUmVzcG9uc2Uoci50b1N0cmluZygpLHQpO2RlZmF1bHQ6aWYociBpbnN0YW5jZW9mIFJlc3BvbnNlKXJldHVybiByO2NvbnN0IGU9SlNPTi5zdHJpbmdpZnkocik7aWYoZS5jaGFyQ29kZUF0KDApPT09MTIzKXtpZighdC5oZWFkZXJzWyJDb250ZW50LVR5cGUiXSl0LmhlYWRlcnNbIkNvbnRlbnQtVHlwZSJdPSJhcHBsaWNhdGlvbi9qc29uIjtyZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHIpLHQpfXJldHVybiBuZXcgUmVzcG9uc2UoZSx0KX19ZWxzZSBzd2l0Y2gocj8uY29uc3RydWN0b3I/Lm5hbWUpe2Nhc2UiU3RyaW5nIjpjYXNlIkJsb2IiOnJldHVybiBuZXcgUmVzcG9uc2Uocik7Y2FzZSJPYmplY3QiOmNhc2UiQXJyYXkiOnJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkocikse2hlYWRlcnM6eyJjb250ZW50LXR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIn19KTtjYXNlIHZvaWQgMDppZighcilyZXR1cm4gbmV3IFJlc3BvbnNlKCIiKTtyZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHIpLHtoZWFkZXJzOnsiY29udGVudC10eXBlIjoiYXBwbGljYXRpb24vanNvbiJ9fSk7Y2FzZSJSZXNwb25zZSI6cmV0dXJuIHI7Y2FzZSJFcnJvciI6cmV0dXJuIG4wKHIpO2Nhc2UiUHJvbWlzZSI6cmV0dXJuIHIudGhlbigoZSk9Pntjb25zdCBWPVFyKGUsdCk7aWYoViE9PXZvaWQgMClyZXR1cm4gVjtyZXR1cm4gbmV3IFJlc3BvbnNlKCIiKX0pO2Nhc2UiRnVuY3Rpb24iOnJldHVybiByKCk7Y2FzZSJOdW1iZXIiOmNhc2UiQm9vbGVhbiI6cmV0dXJuIG5ldyBSZXNwb25zZShyLnRvU3RyaW5nKCkpO2RlZmF1bHQ6aWYociBpbnN0YW5jZW9mIFJlc3BvbnNlKXJldHVybiByO2NvbnN0IGY9SlNPTi5zdHJpbmdpZnkocik7aWYoZi5jaGFyQ29kZUF0KDApPT09MTIzKXJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkocikse2hlYWRlcnM6eyJDb250ZW50LVR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIn19KTtyZXR1cm4gbmV3IFJlc3BvbnNlKGYpfX0sejA9KHIpPT57c3dpdGNoKHI/LmNvbnN0cnVjdG9yPy5uYW1lKXtjYXNlIlN0cmluZyI6Y2FzZSJCbG9iIjpyZXR1cm4gbmV3IFJlc3BvbnNlKHIpO2Nhc2UiT2JqZWN0IjpjYXNlIkFycmF5IjpyZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHIpLHtoZWFkZXJzOnsiY29udGVudC10eXBlIjoiYXBwbGljYXRpb24vanNvbiJ9fSk7Y2FzZSB2b2lkIDA6aWYoIXIpcmV0dXJuIG5ldyBSZXNwb25zZSgiIik7cmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeShyKSx7aGVhZGVyczp7ImNvbnRlbnQtdHlwZSI6ImFwcGxpY2F0aW9uL2pzb24ifX0pO2Nhc2UiUmVzcG9uc2UiOnJldHVybiByO2Nhc2UiRXJyb3IiOnJldHVybiBuMChyKTtjYXNlIlByb21pc2UiOnJldHVybiByLnRoZW4oKGYpPT57Y29uc3QgZT16MChmKTtpZihlIT09dm9pZCAwKXJldHVybiBlO3JldHVybiBuZXcgUmVzcG9uc2UoIiIpfSk7Y2FzZSJGdW5jdGlvbiI6cmV0dXJuIHIoKTtjYXNlIk51bWJlciI6Y2FzZSJCb29sZWFuIjpyZXR1cm4gbmV3IFJlc3BvbnNlKHIudG9TdHJpbmcoKSk7ZGVmYXVsdDppZihyIGluc3RhbmNlb2YgUmVzcG9uc2UpcmV0dXJuIHI7Y29uc3QgdD1KU09OLnN0cmluZ2lmeShyKTtpZih0LmNoYXJDb2RlQXQoMCk9PT0xMjMpcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeShyKSx7aGVhZGVyczp7IkNvbnRlbnQtVHlwZSI6ImFwcGxpY2F0aW9uL2pzb24ifX0pO3JldHVybiBuZXcgUmVzcG9uc2UodCl9fSxuMD0ocix0KT0+bmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHtuYW1lOnI/Lm5hbWUsbWVzc2FnZTpyPy5tZXNzYWdlLGNhdXNlOnI/LmNhdXNlfSkse3N0YXR1czo1MDAsaGVhZGVyczp0fSksXzA9TnIoRjAoKSwxKSxLMD10eXBlb2YgQnVuIT09InVuZGVmaW5lZCI/QnVuLmVudjp0eXBlb2YgcHJvY2VzcyE9PSJ1bmRlZmluZWQiP3Byb2Nlc3M/LmVudjp2b2lkIDAsdDA9U3ltYm9sKCJFcnJvckNvZGUiKSxpMD0oSzA/Lk5PREVfRU5WPz9LMD8uRU5WKT09PSJwcm9kdWN0aW9uIjtjbGFzcyBaMCBleHRlbmRzIEVycm9ye2NvZGU9Ik5PVF9GT1VORCI7c3RhdHVzPTUwMDtjb25zdHJ1Y3Rvcigpe3N1cGVyKCJJTlRFUk5BTF9TRVJWRVJfRVJST1IiKX19Y2xhc3MgaDAgZXh0ZW5kcyBFcnJvcntjb2RlPSJOT1RfRk9VTkQiO3N0YXR1cz00MDQ7Y29uc3RydWN0b3IoKXtzdXBlcigiTk9UX0ZPVU5EIil9fWNsYXNzIEtyIGV4dGVuZHMgRXJyb3J7JDtZO0o7Y29kZT0iVkFMSURBVElPTiI7c3RhdHVzPTQwMDtjb25zdHJ1Y3RvcihyLHQsZil7Y29uc3QgZT1pMD92b2lkIDA6dC5FcnJvcnMoZikuRmlyc3QoKSxWPWU/LnNjaGVtYS5lcnJvcj90eXBlb2YgZS5zY2hlbWEuZXJyb3I9PT0iZnVuY3Rpb24iP2Uuc2NoZW1hLmVycm9yKHIsdCxmKTplLnNjaGVtYS5lcnJvcjp2b2lkIDAsdT1pMD9WPz9gSW52YWxpZCAke3I/P2U/LnNjaGVtYS5lcnJvcj8/ZT8ubWVzc2FnZX1gOlY/P2BJbnZhbGlkICR7cn0sICcke2U/LnBhdGg/LnNsaWNlKDEpfHwidHlwZSJ9JzogJHtlPy5tZXNzYWdlfWArIlxuXG5FeHBlY3RlZDogIitKU09OLnN0cmluZ2lmeShfMC5WYWx1ZS5DcmVhdGUodC5zY2hlbWEpLG51bGwsMikrIlxuXG5Gb3VuZDogIitKU09OLnN0cmluZ2lmeShmLG51bGwsMik7c3VwZXIodSk7dGhpcy50eXBlPXIsdGhpcy52YWxpZGF0b3I9dCx0aGlzLnZhbHVlPWYsT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsS3IucHJvdG90eXBlKX1nZXQgYWxsKCl7cmV0dXJuWy4uLnRoaXMudmFsaWRhdG9yLkVycm9ycyh0aGlzLnZhbHVlKV19Z2V0IG1vZGVsKCl7cmV0dXJuIF8wLlZhbHVlLkNyZWF0ZSh0aGlzLnZhbGlkYXRvci5zY2hlbWEpfXRvUmVzcG9uc2Uocil7cmV0dXJuIG5ldyBSZXNwb25zZSh0aGlzLm1lc3NhZ2Use3N0YXR1czo0MDAsaGVhZGVyczpyfSl9fXZhciBCbj1uZXcgSGVhZGVycyxGbj1uZXcgUmVnRXhwKCIgKFxcdyspID0gY29udGV4dCIsImciKSxyMD0ocik9Pntjb25zdCB0PXIuaW5kZXhPZigiKSIpO2lmKHIuY2hhckNvZGVBdCh0KzIpPT09NjEmJnIuY2hhckNvZGVBdCh0KzUpIT09MTIzKXJldHVybiEwO3JldHVybiByLmluY2x1ZGVzKCJyZXR1cm4iKX0sTW49KHIpPT4oe2NvbXBvc2VWYWxpZGF0aW9uOih0LGY9YGMuJHt0fWApPT5yP2BjLnNldC5zdGF0dXMgPSA0MDA7IHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoCicke3R9JywKJHt0fSwKJHtmfQopYDpgYy5zZXQuc3RhdHVzID0gNDAwOyByZXR1cm4gbmV3IFZhbGlkYXRpb25FcnJvcigKCScke3R9JywKCSR7dH0sCgkke2Z9CikudG9SZXNwb25zZShjLnNldC5oZWFkZXJzKWAsY29tcG9zZVJlc3BvbnNlVmFsaWRhdGlvbjoodD0iciIpPT5yP2B0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKAoncmVzcG9uc2UnLApyZXNwb25zZVtjLnNldC5zdGF0dXNdLAoke3R9CilgOmByZXR1cm4gbmV3IFZhbGlkYXRpb25FcnJvcigKJ3Jlc3BvbnNlJywKcmVzcG9uc2VbYy5zZXQuc3RhdHVzXSwKJHt0fQopLnRvUmVzcG9uc2UoYy5zZXQuaGVhZGVycylgfSksSnI9KHIsdCk9Pnt0PXQudHJpbVN0YXJ0KCksdD10LnJlcGxhY2VBbGwoL15hc3luYyAvZywiIik7Y29uc3QgZj10LmNoYXJDb2RlQXQoMCk9PT00MHx8dC5zdGFydHNXaXRoKCJmdW5jdGlvbiIpP3Quc2xpY2UodC5pbmRleE9mKCIoIikrMSx0LmluZGV4T2YoIikiKSk6dC5zbGljZSgwLHQuaW5kZXhPZigiPSIpLTEpO2lmKGY9PT0iIilyZXR1cm4hMTtpZihmLmNoYXJDb2RlQXQoMCk9PT0xMjMpe2lmKGYuaW5jbHVkZXMocikpcmV0dXJuITA7cmV0dXJuITF9aWYodC5tYXRjaChuZXcgUmVnRXhwKGAke2Z9KC4ke3J9fFxcWyIke3J9IlxcXSlgKSkpcmV0dXJuITA7Y29uc3QgZT1bZl07Zm9yKGxldCB1IG9mIHQubWF0Y2hBbGwoRm4pKWUucHVzaCh1WzFdKTtjb25zdCBWPW5ldyBSZWdFeHAoYHsuKj99ID0gKCR7ZS5qb2luKCJ8Iil9KWAsImciKTtmb3IobGV0W3Vdb2YgdC5tYXRjaEFsbChWKSlpZih1LmluY2x1ZGVzKGB7ICR7cn1gKXx8dS5pbmNsdWRlcyhgLCAke3J9YCkpcmV0dXJuITA7cmV0dXJuITF9LERyPShyLHQsZj1bXSxlPSIiKT0+e2lmKHQudHlwZT09PSJvYmplY3QiKXtjb25zdCBWPXQucHJvcGVydGllcztmb3IobGV0IHUgaW4gVil7Y29uc3QgTz1WW3VdLFQ9IWU/dTplKyIuIit1O2lmKE8udHlwZT09PSJvYmplY3QiKXtEcihyLE8sZixUKTtjb250aW51ZX1lbHNlIGlmKE8uYW55T2Ype2ZvcihsZXQgRSBvZiBPLmFueU9mKURyKHIsRSxmLFQpO2NvbnRpbnVlfWlmKE8uZWx5c2lhTWV0YT09PXIpZi5wdXNoKFQpfWlmKGYubGVuZ3RoPT09MClyZXR1cm4gbnVsbDtyZXR1cm4gZn1lbHNlIGlmKHQ/LmVseXNpYU1ldGE9PT1yKXtpZihlKWYucHVzaChlKTtyZXR1cm4icm9vdCJ9cmV0dXJuIG51bGx9LHFuPShyKT0+e2lmKCFyKXJldHVybjtjb25zdCB0PXI/LnNjaGVtYTtpZih0JiYoImFueU9mImluIHQpKXtsZXQgZj0hMTtjb25zdCBlPXQuYW55T2ZbMF0udHlwZTtmb3IobGV0IFYgb2YgdC5hbnlPZilpZihWLnR5cGUhPT1lKXtmPSEwO2JyZWFrfWlmKCFmKXJldHVybiBlfX0sVW49Lyg/OnJldHVybnw9PikgXFMqXCgvZyxMcj0ocik9PntpZihyLmNvbnN0cnVjdG9yLm5hbWU9PT0iQXN5bmNGdW5jdGlvbiIpcmV0dXJuITA7aWYoci50b1N0cmluZygpLm1hdGNoKFVuKSlyZXR1cm4hMDtyZXR1cm4hMX0sbW49KHttZXRob2Q6cixob29rczp0LHZhbGlkYXRvcjpmLGhhbmRsZXI6ZSxoYW5kbGVFcnJvcjpWLG1ldGE6dSxvblJlcXVlc3Q6Tyxjb25maWc6VH0pPT57Y29uc3QgRT1ULmZvcmNlRXJyb3JFbmNhcHN1bGF0aW9ufHx0LmVycm9yLmxlbmd0aD4wfHx0eXBlb2YgQnVuPT09InVuZGVmaW5lZCJ8fHQub25SZXNwb25zZS5sZW5ndGg+MCx7Y29tcG9zZVZhbGlkYXRpb246Uixjb21wb3NlUmVzcG9uc2VWYWxpZGF0aW9uOkN9PU1uKEUpLHg9dC5vblJlc3BvbnNlLmxlbmd0aD9gXG47KGFzeW5jICgpID0+IHske3Qub25SZXNwb25zZS5tYXAoKEssTCk9PmBhd2FpdCByZXMke0x9KGMpYCkuam9pbigiOyIpfX0pKCk7XG5gOiIiO2xldCBvPUU/InRyeSB7XG4iOiIiO2NvbnN0IEc9Znx8ciE9PSJHRVQiP1tlLC4uLnQudHJhbnNmb3JtLC4uLnQuYmVmb3JlSGFuZGxlLC4uLnQuYWZ0ZXJIYW5kbGVdLm1hcCgoSyk9PksudG9TdHJpbmcoKSk6W10sUD1yIT09IkdFVCImJnQudHlwZSE9PSJub25lIiYmKCEhZi5ib2R5fHwhIXQudHlwZXx8Ry5zb21lKChLKT0+SnIoImJvZHkiLEspKSksdz1mLmhlYWRlcnN8fEcuc29tZSgoSyk9PkpyKCJoZWFkZXJzIixLKSk7aWYodylvKz1Cbi50b0pTT04/ImMuaGVhZGVycyA9IGMucmVxdWVzdC5oZWFkZXJzLnRvSlNPTigpXG4iOmBjLmhlYWRlcnMgPSB7fQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgYy5yZXF1ZXN0LmhlYWRlcnMuZW50cmllcygpKQoJCQkJCWMuaGVhZGVyc1trZXldID0gdmFsdWUKCQkJCWA7aWYoZi5xdWVyeXx8Ry5zb21lKChLKT0+SnIoInF1ZXJ5IixLKSkpbys9YGNvbnN0IHVybCA9IGMucmVxdWVzdC51cmwKCgkJaWYoYy5xaSAhPT0gLTEpIHsKCQkJYy5xdWVyeSA/Pz0gcGFyc2VRdWVyeSh1cmwuc3Vic3RyaW5nKGMucWkgKyAxKSkKCQl9IGVsc2UgewoJCQljLnF1ZXJ5ID8/PSB7fQoJCX0KCQlgO2NvbnN0IHE9Ry5zb21lKChLKT0+SnIoInNldCIsSykpfHxPLnNvbWUoKEspPT5Kcigic2V0IixLLnRvU3RyaW5nKCkpKSxGPVB8fExyKGUpfHx0LnBhcnNlLmxlbmd0aD4wfHx0LmFmdGVySGFuZGxlLnNvbWUoTHIpfHx0LmJlZm9yZUhhbmRsZS5zb21lKExyKXx8dC50cmFuc2Zvcm0uc29tZShMcik7aWYoUCl7Y29uc3QgSz1xbihmPy5ib2R5KTtpZih0LnR5cGV8fEspe2lmKHQudHlwZSlzd2l0Y2godC50eXBlKXtjYXNlImFwcGxpY2F0aW9uL2pzb24iOm8rPSJjLmJvZHkgPSBhd2FpdCBjLnJlcXVlc3QuanNvbigpOyI7YnJlYWs7Y2FzZSJ0ZXh0L3BsYWluIjpvKz0iYy5ib2R5ID0gYXdhaXQgYy5yZXF1ZXN0LnRleHQoKTsiO2JyZWFrO2Nhc2UiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIjpvKz0iYy5ib2R5ID0gcGFyc2VRdWVyeShhd2FpdCBjLnJlcXVlc3QudGV4dCgpKTsiO2JyZWFrO2Nhc2UiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtIjpvKz0iYy5ib2R5ID0gYXdhaXQgYy5yZXF1ZXN0LmFycmF5QnVmZmVyKCk7IjticmVhaztjYXNlIm11bHRpcGFydC9mb3JtLWRhdGEiOm8rPWBjLmJvZHkgPSB7fQoKCQkJCQljb25zdCBmb3JtID0gYXdhaXQgYy5yZXF1ZXN0LmZvcm1EYXRhKCkKCQkJCQlmb3IgKGNvbnN0IGtleSBvZiBmb3JtLmtleXMoKSkgewoJCQkJCQlpZiAoYy5ib2R5W2tleV0pCgkJCQkJCQljb250aW51ZQoKCQkJCQkJY29uc3QgdmFsdWUgPSBmb3JtLmdldEFsbChrZXkpCgkJCQkJCWlmICh2YWx1ZS5sZW5ndGggPT09IDEpCgkJCQkJCQljLmJvZHlba2V5XSA9IHZhbHVlWzBdCgkJCQkJCWVsc2UgYy5ib2R5W2tleV0gPSB2YWx1ZQoJCQkJCX1gO2JyZWFrfWVsc2UgaWYoSyl7Y29uc3QgTD1mPy5ib2R5Py5zY2hlbWE7c3dpdGNoKEspe2Nhc2Uib2JqZWN0IjppZihMLmVseXNpYU1ldGE9PT0iVVJMRW5jb2RlZCIpbys9ImMuYm9keSA9IHBhcnNlUXVlcnkoYXdhaXQgYy5yZXF1ZXN0LnRleHQoKSkiO2Vsc2UgaWYoZi5ib2R5LkNvZGUoKS5pbmNsdWRlcygiY3VzdG9tKCdGaWxlIikpbys9YGMuYm9keSA9IHt9CgoJCQkJCQkJY29uc3QgZm9ybSA9IGF3YWl0IGMucmVxdWVzdC5mb3JtRGF0YSgpCgkJCQkJCQlmb3IgKGNvbnN0IGtleSBvZiBmb3JtLmtleXMoKSkgewoJCQkJCQkJCWlmIChjLmJvZHlba2V5XSkKCQkJCQkJCQkJY29udGludWUKCQkKCQkJCQkJCQljb25zdCB2YWx1ZSA9IGZvcm0uZ2V0QWxsKGtleSkKCQkJCQkJCQlpZiAodmFsdWUubGVuZ3RoID09PSAxKQoJCQkJCQkJCQljLmJvZHlba2V5XSA9IHZhbHVlWzBdCgkJCQkJCQkJZWxzZSBjLmJvZHlba2V5XSA9IHZhbHVlCgkJCQkJCQl9YDtlbHNlIG8rPSJjLmJvZHkgPSBKU09OLnBhcnNlKGF3YWl0IGMucmVxdWVzdC50ZXh0KCkpIjticmVhaztkZWZhdWx0Om8rPSJjLmJvZHkgPSBhd2FpdCBjLnJlcXVlc3QudGV4dCgpIjticmVha319aWYodC5wYXJzZS5sZW5ndGgpbys9In19In1lbHNle2lmKG8rPSJcbiIsbys9dz8ibGV0IGNvbnRlbnRUeXBlID0gYy5oZWFkZXJzWydjb250ZW50LXR5cGUnXSI6ImxldCBjb250ZW50VHlwZSA9IGMucmVxdWVzdC5oZWFkZXJzLmdldCgnY29udGVudC10eXBlJykiLG8rPWAKICAgICAgICAgICAgaWYgKGNvbnRlbnRUeXBlKSB7CgkJCQljb25zdCBpbmRleCA9IGNvbnRlbnRUeXBlLmluZGV4T2YoJzsnKQoJCQkJaWYgKGluZGV4ICE9PSAtMSkgY29udGVudFR5cGUgPSBjb250ZW50VHlwZS5zdWJzdHJpbmcoMCwgaW5kZXgpXG5gLHQucGFyc2UubGVuZ3RoKXtvKz0ibGV0IHVzZWQgPSBmYWxzZVxuIjtmb3IobGV0IEw9MDtMPHQucGFyc2UubGVuZ3RoO0wrKyl7Y29uc3Qgej1gYm8ke0x9YDtpZihMIT09MClvKz0iaWYoIXVzZWQpIHtcbiI7aWYobys9YGxldCAke3p9ID0gcGFyc2VbJHtMfV0oYywgY29udGVudFR5cGUpO2Asbys9YGlmKCR7en0gaW5zdGFuY2VvZiBQcm9taXNlKSAke3p9ID0gYXdhaXQgJHt6fTtgLG8rPWAKCQkJCQkJaWYoJHt6fSAhPT0gdW5kZWZpbmVkKSB7IGMuYm9keSA9ICR7en07IHVzZWQgPSB0cnVlIH1cbmAsTCE9PTApbys9In0ifW8rPSJpZiAoIXVzZWQpIn1vKz1gc3dpdGNoIChjb250ZW50VHlwZSkgewoJCQljYXNlICdhcHBsaWNhdGlvbi9qc29uJzoKCQkJCWMuYm9keSA9IGF3YWl0IGMucmVxdWVzdC5qc29uKCkKCQkJCWJyZWFrCgoJCQljYXNlICd0ZXh0L3BsYWluJzoKCQkJCWMuYm9keSA9IGF3YWl0IGMucmVxdWVzdC50ZXh0KCkKCQkJCWJyZWFrCgoJCQljYXNlICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnOgoJCQkJYy5ib2R5ID0gcGFyc2VRdWVyeShhd2FpdCBjLnJlcXVlc3QudGV4dCgpKQoJCQkJYnJlYWsKCgkJCWNhc2UgJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSc6CgkJCQljLmJvZHkgPSBhd2FpdCBjLnJlcXVlc3QuYXJyYXlCdWZmZXIoKTsKCQkJCWJyZWFrCgoJCQljYXNlICdtdWx0aXBhcnQvZm9ybS1kYXRhJzoKCQkJCWMuYm9keSA9IHt9CgoJCQkJY29uc3QgZm9ybSA9IGF3YWl0IGMucmVxdWVzdC5mb3JtRGF0YSgpCgkJCQlmb3IgKGNvbnN0IGtleSBvZiBmb3JtLmtleXMoKSkgewoJCQkJCWlmIChjLmJvZHlba2V5XSkKCQkJCQkJY29udGludWUKCgkJCQkJY29uc3QgdmFsdWUgPSBmb3JtLmdldEFsbChrZXkpCgkJCQkJaWYgKHZhbHVlLmxlbmd0aCA9PT0gMSkKCQkJCQkJYy5ib2R5W2tleV0gPSB2YWx1ZVswXQoJCQkJCWVsc2UgYy5ib2R5W2tleV0gPSB2YWx1ZQoJCQkJfQoKCQkJCWJyZWFrCgkJCX0KCQl9XG5gfW8rPSJcbiJ9aWYoZi5wYXJhbXMpe2NvbnN0IEs9RHIoIk51bWVyaWMiLGYucGFyYW1zLnNjaGVtYSk7aWYoSyl7c3dpdGNoKHR5cGVvZiBLKXtjYXNlIm9iamVjdCI6Zm9yKGxldCBMIG9mIEspbys9YGlmKGMucGFyYW1zLiR7TH0pIGMucGFyYW1zLiR7TH0gPSArYy5wYXJhbXMuJHtMfTtgO2JyZWFrfW8rPSJcbiJ9fWlmKGYucXVlcnkpe2NvbnN0IEs9RHIoIk51bWVyaWMiLGYucXVlcnkuc2NoZW1hKTtpZihLKXtzd2l0Y2godHlwZW9mIEspe2Nhc2Uib2JqZWN0Ijpmb3IobGV0IEwgb2YgSylvKz1gaWYoYy5xdWVyeS4ke0x9KSBjLnF1ZXJ5LiR7TH0gPSArYy5xdWVyeS4ke0x9O2A7YnJlYWt9bys9IlxuIn19aWYoZi5oZWFkZXJzKXtjb25zdCBLPURyKCJOdW1lcmljIixmLmhlYWRlcnMuc2NoZW1hKTtpZihLKXtzd2l0Y2godHlwZW9mIEspe2Nhc2Uib2JqZWN0Ijpmb3IobGV0IEwgb2YgSylvKz1gYy5oZWFkZXJzLiR7TH0gPSArYy5oZWFkZXJzLiR7TH07YDticmVha31vKz0iXG4ifX1pZihmLmJvZHkpe2NvbnN0IEs9RHIoIk51bWVyaWMiLGYuYm9keS5zY2hlbWEpO2lmKEspe3N3aXRjaCh0eXBlb2YgSyl7Y2FzZSJzdHJpbmciOm8rPSJjLmJvZHkgPSArYy5ib2R5OyI7YnJlYWs7Y2FzZSJvYmplY3QiOmZvcihsZXQgeiBvZiBLKW8rPWBjLmJvZHkuJHt6fSA9ICtjLmJvZHkuJHt6fTtgO2JyZWFrfW8rPSJcbiJ9Y29uc3QgTD1EcigiRmlsZXMiLGYuYm9keS5zY2hlbWEpO2lmKEwpe3N3aXRjaCh0eXBlb2YgTCl7Y2FzZSJvYmplY3QiOmZvcihsZXQgeiBvZiBMKW8rPWBpZighQXJyYXkuaXNBcnJheShjLmJvZHkuJHt6fSkpIGMuYm9keS4ke3p9ID0gW2MuYm9keS4ke3p9XTtgO2JyZWFrfW8rPSJcbiJ9fWlmKHQ/LnRyYW5zZm9ybSlmb3IobGV0IEs9MDtLPHQudHJhbnNmb3JtLmxlbmd0aDtLKyspaWYodC50cmFuc2Zvcm1bS10uJGVseXNpYT09PSJkZXJpdmUiKW8rPUxyKHQudHJhbnNmb3JtW0tdKT9gT2JqZWN0LmFzc2lnbihjLCBhd2FpdCB0cmFuc2Zvcm1bJHtLfV0oYykpO2A6YE9iamVjdC5hc3NpZ24oYywgdHJhbnNmb3JtWyR7S31dKGMpKTtgO2Vsc2Ugbys9THIodC50cmFuc2Zvcm1bS10pP2Bhd2FpdCB0cmFuc2Zvcm1bJHtLfV0oYyk7YDpgdHJhbnNmb3JtWyR7S31dKGMpO2A7aWYoZil7aWYoZi5oZWFkZXJzKW8rPWAKICAgICAgICAgICAgICAgIGlmIChoZWFkZXJzLkNoZWNrKGMuaGVhZGVycykgPT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgJHtSKCJoZWFkZXJzIil9CgkJCQl9CiAgICAgICAgYDtpZihmLnBhcmFtcylvKz1gaWYocGFyYW1zLkNoZWNrKGMucGFyYW1zKSA9PT0gZmFsc2UpIHsgJHtSKCJwYXJhbXMiKX0gfWA7aWYoZi5xdWVyeSlvKz1gaWYocXVlcnkuQ2hlY2soYy5xdWVyeSkgPT09IGZhbHNlKSB7ICR7UigicXVlcnkiKX0gfWA7aWYoZi5ib2R5KW8rPWBpZihib2R5LkNoZWNrKGMuYm9keSkgPT09IGZhbHNlKSB7ICR7UigiYm9keSIpfSB9YH1pZih0Py5iZWZvcmVIYW5kbGUpZm9yKGxldCBLPTA7Szx0LmJlZm9yZUhhbmRsZS5sZW5ndGg7SysrKXtjb25zdCBMPWBiZSR7S31gO2lmKCFyMCh0LmJlZm9yZUhhbmRsZVtLXS50b1N0cmluZygpKSlvKz1Mcih0LmJlZm9yZUhhbmRsZVtLXSk/YGF3YWl0IGJlZm9yZUhhbmRsZVske0t9XShjKTtcbmA6YGJlZm9yZUhhbmRsZVske0t9XShjKTtcbmA7ZWxzZXtpZihvKz1Mcih0LmJlZm9yZUhhbmRsZVtLXSk/YGxldCAke0x9ID0gYXdhaXQgYmVmb3JlSGFuZGxlWyR7S31dKGMpO1xuYDpgbGV0ICR7TH0gPSBiZWZvcmVIYW5kbGVbJHtLfV0oYyk7XG5gLG8rPWBpZigke0x9ICE9PSB1bmRlZmluZWQpIHtcbmAsdD8uYWZ0ZXJIYW5kbGUpe2NvbnN0IHo9TDtmb3IobGV0IEE9MDtBPHQuYWZ0ZXJIYW5kbGUubGVuZ3RoO0ErKylpZighcjAodC5hZnRlckhhbmRsZVtBXS50b1N0cmluZygpKSlvKz1Mcih0LmFmdGVySGFuZGxlW0FdKT9gYXdhaXQgYWZ0ZXJIYW5kbGVbJHtBfV0oYywgJHt6fSk7XG5gOmBhZnRlckhhbmRsZVske0F9XShjLCAke3p9KTtcbmA7ZWxzZXtjb25zdCBlcj1gYWYke0F9YDtvKz1Mcih0LmFmdGVySGFuZGxlW0FdKT9gY29uc3QgJHtlcn0gPSBhd2FpdCBhZnRlckhhbmRsZVske0F9XShjLCAke3p9KTtcbmA6YGNvbnN0ICR7ZXJ9ID0gYWZ0ZXJIYW5kbGVbJHtBfV0oYywgJHt6fSk7XG5gLG8rPWBpZigke2VyfSAhPT0gdW5kZWZpbmVkKSB7ICR7en0gPSAke2VyfSB9XG5gfX1pZihmLnJlc3BvbnNlKW8rPWBpZihyZXNwb25zZVtjLnNldC5zdGF0dXNdPy5DaGVjaygke0x9KSA9PT0gZmFsc2UpIHsgCgkJCQkJCWlmKCEocmVzcG9uc2UgaW5zdGFuY2VvZiBFcnJvcikpCgkJCQkJCQkke0MoTCl9CgkJCQkJfVxuYDtvKz1gcmV0dXJuIG1hcEVhcmx5UmVzcG9uc2UoJHtMfSwgYy5zZXQpfVxuYH19aWYodD8uYWZ0ZXJIYW5kbGUubGVuZ3RoKXtvKz1McihlKT8ibGV0IHIgPSBhd2FpdCBoYW5kbGVyKGMpO1xuIjoibGV0IHIgPSBoYW5kbGVyKGMpO1xuIjtmb3IobGV0IEs9MDtLPHQuYWZ0ZXJIYW5kbGUubGVuZ3RoO0srKyl7Y29uc3QgTD1gYWYke0t9YDtpZighcjAodC5hZnRlckhhbmRsZVtLXS50b1N0cmluZygpKSlvKz1Mcih0LmFmdGVySGFuZGxlW0tdKT9gYXdhaXQgYWZ0ZXJIYW5kbGVbJHtLfV0oYywgcilcbmA6YGFmdGVySGFuZGxlWyR7S31dKGMsIHIpXG5gO2Vsc2UgaWYobys9THIodC5hZnRlckhhbmRsZVtLXSk/YGxldCAke0x9ID0gYXdhaXQgYWZ0ZXJIYW5kbGVbJHtLfV0oYywgcilcbmA6YGxldCAke0x9ID0gYWZ0ZXJIYW5kbGVbJHtLfV0oYywgcilcbmAsZi5yZXNwb25zZSlvKz1gaWYoJHtMfSAhPT0gdW5kZWZpbmVkKSB7YCxvKz1gaWYocmVzcG9uc2VbYy5zZXQuc3RhdHVzXT8uQ2hlY2soJHtMfSkgPT09IGZhbHNlKSB7IAoJCQkJCQlpZighKHJlc3BvbnNlIGluc3RhbmNlb2YgRXJyb3IpKQoJCQkJCQkke0MoTCl9CgkJCQkJfVxuYCxvKz1gJHtMfSA9IG1hcEVhcmx5UmVzcG9uc2UoJHtMfSwgYy5zZXQpXG5gLG8rPWBpZigke0x9KSByZXR1cm4gJHtMfTtcbn1gO2Vsc2Ugbys9YGlmKCR7TH0pIHJldHVybiAke0x9O1xuYH1pZihmLnJlc3BvbnNlKW8rPWBpZihyZXNwb25zZVtjLnNldC5zdGF0dXNdPy5DaGVjayhyKSA9PT0gZmFsc2UpIHsgCgkJCQlpZighKHJlc3BvbnNlIGluc3RhbmNlb2YgRXJyb3IpKQoJCQkJCSR7QygpfQoJCQl9XG5gO2lmKHEpbys9InJldHVybiBtYXBSZXNwb25zZShyLCBjLnNldClcbiI7ZWxzZSBvKz0icmV0dXJuIG1hcENvbXBhY3RSZXNwb25zZShyKVxuIn1lbHNlIGlmKGYucmVzcG9uc2UpaWYobys9THIoZSk/ImNvbnN0IHIgPSBhd2FpdCBoYW5kbGVyKGMpO1xuIjoiY29uc3QgciA9IGhhbmRsZXIoYyk7XG4iLG8rPWBpZihyZXNwb25zZVtjLnNldC5zdGF0dXNdPy5DaGVjayhyKSA9PT0gZmFsc2UpIHsgCgkJCQlpZighKHJlc3BvbnNlIGluc3RhbmNlb2YgRXJyb3IpKQoJCQkJCSR7QygpfQoJCQl9XG5gLHEpbys9InJldHVybiBtYXBSZXNwb25zZShyLCBjLnNldClcbiI7ZWxzZSBvKz0icmV0dXJuIG1hcENvbXBhY3RSZXNwb25zZShyKVxuIjtlbHNle2NvbnN0IEs9THIoZSk/ImF3YWl0IGhhbmRsZXIoYykgIjoiaGFuZGxlcihjKSI7aWYocSlvKz1gcmV0dXJuIG1hcFJlc3BvbnNlKCR7S30sIGMuc2V0KVxuYDtlbHNlIG8rPWByZXR1cm4gbWFwQ29tcGFjdFJlc3BvbnNlKCR7S30pXG5gfWlmKEUpbys9YAp9IGNhdGNoKGVycm9yKSB7CgkKCgkke0Y/IiI6InJldHVybiAoYXN5bmMgKCkgPT4geyJ9CgkJY29uc3Qgc2V0ID0gYy5zZXQKCgkJaWYgKCFzZXQuc3RhdHVzIHx8IHNldC5zdGF0dXMgPCAzMDApIHNldC5zdGF0dXMgPSA1MDAKCgkJJHt0LmVycm9yLmxlbmd0aD9gZm9yIChsZXQgaSA9IDA7IGkgPCBoYW5kbGVFcnJvcnMubGVuZ3RoOyBpKyspIHsKCQkJCWxldCBoYW5kbGVkID0gaGFuZGxlRXJyb3JzW2ldKHsKCQkJCQlyZXF1ZXN0OiBjLnJlcXVlc3QsCgkJCQkJZXJyb3I6IGVycm9yLAoJCQkJCXNldCwKCQkJCQljb2RlOiBlcnJvci5jb2RlID8/IGVycm9yW0VSUk9SX0NPREVdID8/ICJVTktOT1dOIgoJCQkJfSkKCQkJCWlmIChoYW5kbGVkIGluc3RhbmNlb2YgUHJvbWlzZSkgaGFuZGxlZCA9IGF3YWl0IGhhbmRsZWQKCgkJCQljb25zdCByZXNwb25zZSA9IG1hcEVhcmx5UmVzcG9uc2UoaGFuZGxlZCwgc2V0KQoJCQkJaWYgKHJlc3BvbnNlKSByZXR1cm4gcmVzcG9uc2UKCQkJfWA6IiJ9CgoJCXJldHVybiBoYW5kbGVFcnJvcihjLnJlcXVlc3QsIGVycm9yLCBzZXQpCgkke0Y/IiI6In0pKCkifQp9IGZpbmFsbHkgewoJJHt4fQp9YDtyZXR1cm4gbz1gY29uc3QgeyAKCQloYW5kbGVyLAoJCWhhbmRsZUVycm9yLAoJCWhvb2tzOiB7CgkJCXRyYW5zZm9ybSwKCQkJYmVmb3JlSGFuZGxlLAoJCQlhZnRlckhhbmRsZSwKCQkJcGFyc2UsCgkJCWVycm9yOiBoYW5kbGVFcnJvcnMsCgkJCW9uUmVzcG9uc2UKCQl9LAoJCXZhbGlkYXRvcjogewoJCQlib2R5LAoJCQloZWFkZXJzLAoJCQlwYXJhbXMsCgkJCXF1ZXJ5LAoJCQlyZXNwb25zZQoJCX0sCgkJdXRpbHM6IHsKCQkJbWFwUmVzcG9uc2UsCgkJCW1hcENvbXBhY3RSZXNwb25zZSwKCQkJbWFwRWFybHlSZXNwb25zZSwKCQkJcGFyc2VRdWVyeQoJCX0sCgkJZXJyb3I6IHsKCQkJTm90Rm91bmRFcnJvciwKCQkJVmFsaWRhdGlvbkVycm9yLAoJCQlJbnRlcm5hbFNlcnZlckVycm9yCgkJfSwKCQltZXRhLAoJCUVSUk9SX0NPREUKCX0gPSBob29rcwoKCSR7dC5vblJlc3BvbnNlLmxlbmd0aD9gY29uc3QgJHt0Lm9uUmVzcG9uc2UubWFwKChLLEwpPT5gcmVzJHtMfSA9IG9uUmVzcG9uc2VbJHtMfV1gKS5qb2luKCIsIil9YDoiIn0KCglyZXR1cm4gJHtGPyJhc3luYyI6IiJ9IGZ1bmN0aW9uKGMpIHsKCQkke3U/J2NbInNjaGVtYSJdID0gbWV0YVsic2NoZW1hIl07IGNbImRlZnMiXSA9IG1ldGFbImRlZnMiXTsnOiIifQoJCSR7b30KCX1gLEZ1bmN0aW9uKCJob29rcyIsbykoe2hhbmRsZXI6ZSxob29rczp0LHZhbGlkYXRvcjpmLGhhbmRsZUVycm9yOlYsdXRpbHM6e21hcFJlc3BvbnNlOlFyLG1hcENvbXBhY3RSZXNwb25zZTp6MCxtYXBFYXJseVJlc3BvbnNlOkZyLHBhcnNlUXVlcnk6RG4ucGFyc2V9LGVycm9yOntOb3RGb3VuZEVycm9yOmgwLFZhbGlkYXRpb25FcnJvcjpLcixJbnRlcm5hbFNlcnZlckVycm9yOlowfSxtZXRhOnUsRVJST1JfQ09ERTp0MH0pfSx3MD0ocik9PntsZXQgdD0iIjtmb3IobGV0IFQgb2YgT2JqZWN0LmtleXMoci5kZWNvcmF0b3JzKSl0Kz1gLCR7VH06IGFwcC5kZWNvcmF0b3JzLiR7VH1gO2NvbnN0e3JvdXRlcjpmLHN0YXRpY1JvdXRlcjplfT1yLFY9YAoJY29uc3Qgcm91dGUgPSBmaW5kKHJlcXVlc3QubWV0aG9kLCBwYXRoKSAke2Yucm9vdC5BTEw/Jz8/IGZpbmQoIkFMTCIsIHBhdGgpJzoiIn0KCWlmIChyb3V0ZSA9PT0gbnVsbCkKCQlyZXR1cm4gJHtyLmV2ZW50LmVycm9yLmxlbmd0aD9gaGFuZGxlRXJyb3IoCgkJCXJlcXVlc3QsCgkJCW5vdEZvdW5kLAoJCQljdHguc2V0CgkJKWA6YG5ldyBSZXNwb25zZShlcnJvcjQwNCwgewoJCQkJCXN0YXR1czogNDA0CgkJCQl9KWB9CgoJY3R4LnBhcmFtcyA9IHJvdXRlLnBhcmFtcwoKCXJldHVybiByb3V0ZS5zdG9yZShjdHgpYDtsZXQgdT0iIjtmb3IobGV0W1Qse2NvZGU6RSxhbGw6Un1db2YgT2JqZWN0LmVudHJpZXMoZS5tYXApKXUrPWBjYXNlICcke1R9JzpcbnN3aXRjaChyZXF1ZXN0Lm1ldGhvZCkge1xuJHtFfVxuJHtSPz9gZGVmYXVsdDogJHtWfWB9fVxuXG5gO2xldCBPPWBjb25zdCB7CgkJYXBwLAoJCWFwcDogeyBzdG9yZSwgcm91dGVyLCBzdGF0aWNSb3V0ZXIgfSwKCQltYXBFYXJseVJlc3BvbnNlLAoJCU5vdEZvdW5kRXJyb3IKCX0gPSBkYXRhCgoJY29uc3Qgbm90Rm91bmQgPSBuZXcgTm90Rm91bmRFcnJvcigpCgoJJHtyLmV2ZW50LnJlcXVlc3QubGVuZ3RoPyJjb25zdCBvblJlcXVlc3QgPSBhcHAuZXZlbnQucmVxdWVzdCI6IiJ9CgoJJHtlLnZhcmlhYmxlc30KCgljb25zdCBmaW5kID0gcm91dGVyLmZpbmQuYmluZChyb3V0ZXIpCgljb25zdCBoYW5kbGVFcnJvciA9IGFwcC5oYW5kbGVFcnJvci5iaW5kKHRoaXMpCgoJJHtyLmV2ZW50LmVycm9yLmxlbmd0aD8iIjoiY29uc3QgZXJyb3I0MDQgPSBub3RGb3VuZC5tZXNzYWdlLnRvU3RyaW5nKCkifQoKCXJldHVybiBmdW5jdGlvbihyZXF1ZXN0KSB7CglgO2lmKHIuZXZlbnQucmVxdWVzdC5sZW5ndGgpe08rPWAKCQkJY29uc3QgY3R4ID0gewoJCQkJcmVxdWVzdCwKCQkJCXN0b3JlLAoJCQkJc2V0OiB7CgkJCQkJaGVhZGVyczoge30sCgkJCQkJc3RhdHVzOiAyMDAKCQkJCX0KCQkJCSR7dH0KCQkJfQoKCQkJdHJ5IHtcbmA7Zm9yKGxldCBUPTA7VDxyLmV2ZW50LnJlcXVlc3QubGVuZ3RoO1QrKyl7Y29uc3QgRT1yMChyLmV2ZW50LnJlcXVlc3RbVF0udG9TdHJpbmcoKSk7Tys9IUU/YG1hcEVhcmx5UmVzcG9uc2Uob25SZXF1ZXN0WyR7VH1dKGN0eCksIGN0eC5zZXQpO2A6YGNvbnN0IHJlc3BvbnNlID0gbWFwRWFybHlSZXNwb25zZSgKCQkJCQlvblJlcXVlc3RbJHtUfV0oY3R4KSwKCQkJCQljdHguc2V0CgkJCQkpCgkJCQlpZiAocmVzcG9uc2UpIHJldHVybiByZXNwb25zZVxuYH1PKz1gfSBjYXRjaCAoZXJyb3IpIHsKCQkJcmV0dXJuIGhhbmRsZUVycm9yKHJlcXVlc3QsIGVycm9yLCBjdHguc2V0KQoJCX0KCQkKCQljb25zdCB1cmwgPSByZXF1ZXN0LnVybCwKCQlzID0gdXJsLmluZGV4T2YoJy8nLCAxMSksCgkJaSA9IGN0eC5xaSA9IHVybC5pbmRleE9mKCc/JywgcyArIDEpLAoJCXBhdGggPSBjdHgucGF0aCA9IGkgPT09IC0xID8gdXJsLnN1YnN0cmluZyhzKSA6IHVybC5zdWJzdHJpbmcocywgaSk7YH1lbHNlIE8rPWAKCQljb25zdCB1cmwgPSByZXF1ZXN0LnVybCwKCQkJcyA9IHVybC5pbmRleE9mKCcvJywgMTEpLAoJCQlxaSA9IHVybC5pbmRleE9mKCc/JywgcyArIDEpLAoJCQlwYXRoID0gcWkgPT09IC0xCgkJCQk/IHVybC5zdWJzdHJpbmcocykKCQkJCTogdXJsLnN1YnN0cmluZyhzLCBxaSkKCgkJY29uc3QgY3R4ID0gewoJCQlyZXF1ZXN0LAoJCQlzdG9yZSwKCQkJcWksCgkJCXBhdGgsCgkJCXNldDogewoJCQkJaGVhZGVyczoge30sCgkJCQlzdGF0dXM6IDIwMAoJCQl9CgkJCSR7dH0KCQl9YDtyZXR1cm4gTys9YAoJCXN3aXRjaChwYXRoKSB7CgkJCSR7dX0KCgkJCWRlZmF1bHQ6CgkJCQkke1Z9CgkJfQoJfWAsci5oYW5kbGVFcnJvcj1RMChyKSxGdW5jdGlvbigiZGF0YSIsTykoe2FwcDpyLG1hcEVhcmx5UmVzcG9uc2U6RnIsTm90Rm91bmRFcnJvcjpoMH0pfSxRMD0ocik9PntsZXQgdD1gY29uc3QgewoJCWFwcDogeyBldmVudDogeyBlcnJvcjogb25FcnJvciwgb25SZXNwb25zZTogcmVzIH0gfSwKCQltYXBSZXNwb25zZSwKCQlFUlJPUl9DT0RFCgl9ID0gaW5qZWN0CgoJcmV0dXJuICR7ci5ldmVudC5lcnJvci5maW5kKExyKT8iYXN5bmMiOiIifSBmdW5jdGlvbihyZXF1ZXN0LCBlcnJvciwgc2V0KSB7YDtmb3IobGV0IGY9MDtmPHIuZXZlbnQuZXJyb3IubGVuZ3RoO2YrKyl7Y29uc3QgZT1yLmV2ZW50LmVycm9yW2ZdLFY9YCR7THIoZSk/ImF3YWl0ICI6IiJ9b25FcnJvclske2Z9XSh7CgkJCXJlcXVlc3QsCgkJCWNvZGU6IGVycm9yLmNvZGUgPz8gZXJyb3JbRVJST1JfQ09ERV0gPz8gJ1VOS05PV04nLAoJCQllcnJvciwKCQkJc2V0CgkJfSlgO2lmKHIwKGUudG9TdHJpbmcoKSkpdCs9YGNvbnN0IHIke2Z9ID0gJHtWfTsgaWYociR7Zn0gIT09IHVuZGVmaW5lZCkgcmV0dXJuIG1hcFJlc3BvbnNlKHIke2Z9LCBzZXQpXG5gO2Vsc2UgdCs9VisiXG4ifXJldHVybiB0Kz1gaWYoZXJyb3IuY29uc3RydWN0b3IubmFtZSA9PT0gIlZhbGlkYXRpb25FcnJvciIpIHsKCQlzZXQuc3RhdHVzID0gZXJyb3Iuc3RhdHVzID8/IDQwMAoJCXJldHVybiBuZXcgUmVzcG9uc2UoCgkJCWVycm9yLm1lc3NhZ2UsIAoJCQl7IGhlYWRlcnM6IHNldC5oZWFkZXJzLCBzdGF0dXM6IHNldC5zdGF0dXMgfQoJCSkKCX0gZWxzZSB7CgkJcmV0dXJuIG5ldyBSZXNwb25zZShlcnJvci5tZXNzYWdlLCB7IGhlYWRlcnM6IHNldC5oZWFkZXJzLCBzdGF0dXM6IGVycm9yLnN0YXR1cyA/PyA1MDAgfSkKCX0KfWAsRnVuY3Rpb24oImluamVjdCIsdCkoe2FwcDpyLG1hcFJlc3BvbnNlOlFyLEVSUk9SX0NPREU6dDB9KX0sZTA9KHIpPT57Y29uc3QgdD1yLmluZGV4T2YoIi8iLDEwKSxmPXIuaW5kZXhPZigiPyIsdCk7aWYoZj09PS0xKXJldHVybiByLnNsaWNlKHQpO3JldHVybiByLnNsaWNlKHQsZil9O2NsYXNzICRye3JhdztkYXRhO2lzU3Vic2NyaWJlZDtjb25zdHJ1Y3RvcihyKXt0aGlzLnJhdz1yLHRoaXMuZGF0YT1yLmRhdGEsdGhpcy5pc1N1YnNjcmliZWQ9ci5pc1N1YnNjcmliZWR9cHVibGlzaChyLHQ9dm9pZCAwLGYpe2lmKHR5cGVvZiB0PT09Im9iamVjdCIpdD1KU09OLnN0cmluZ2lmeSh0KTtyZXR1cm4gdGhpcy5yYXcucHVibGlzaChyLHQsZiksdGhpc31wdWJsaXNoVG9TZWxmKHIsdD12b2lkIDAsZil7aWYodHlwZW9mIHQ9PT0ib2JqZWN0Iil0PUpTT04uc3RyaW5naWZ5KHQpO3JldHVybiB0aGlzLnJhdy5wdWJsaXNoKHIsdCxmKSx0aGlzfXNlbmQocil7aWYodHlwZW9mIHI9PT0ib2JqZWN0IilyPUpTT04uc3RyaW5naWZ5KHIpO3JldHVybiB0aGlzLnJhdy5zZW5kKHIpLHRoaXN9c3Vic2NyaWJlKHIpe3JldHVybiB0aGlzLnJhdy5zdWJzY3JpYmUociksdGhpc311bnN1YnNjcmliZShyKXtyZXR1cm4gdGhpcy5yYXcudW5zdWJzY3JpYmUociksdGhpc31jb3JrKHIpe3JldHVybiB0aGlzLnJhdy5jb3JrKHIpLHRoaXN9Y2xvc2UoKXtyZXR1cm4gdGhpcy5yYXcuY2xvc2UoKSx0aGlzfX12YXIgUDA9KHIpPT4odCk9PntpZighdC53c1JvdXRlcil0LndzUm91dGVyPW5ldyBacjtjb25zdCBmPXQud3NSb3V0ZXI7aWYoIXQuY29uZmlnLnNlcnZlKXQuY29uZmlnLnNlcnZlPXt3ZWJzb2NrZXQ6ey4uLnIsb3BlbihlKXtpZighZS5kYXRhKXJldHVybjtjb25zdCBWPWUwKGU/LmRhdGEucmVxdWVzdC51cmwpO2lmKCFWKXJldHVybjtjb25zdCB1PWYuZmluZCgic3Vic2NyaWJlIixWKT8uc3RvcmU7aWYodSYmdS5vcGVuKXUub3BlbihuZXcgJHIoZSkpfSxtZXNzYWdlKGUsVil7aWYoIWUuZGF0YSlyZXR1cm47Y29uc3QgdT1lMChlPy5kYXRhLnJlcXVlc3QudXJsKTtpZighdSlyZXR1cm47Y29uc3QgTz1mLmZpbmQoInN1YnNjcmliZSIsdSk/LnN0b3JlO2lmKCFPPy5tZXNzYWdlKXJldHVybjtWPVYudG9TdHJpbmcoKTtjb25zdCBUPVYuY2hhckNvZGVBdCgwKTtpZihUPT09NDd8fFQ9PT0xMjMpdHJ5e1Y9SlNPTi5wYXJzZShWKX1jYXRjaChFKXt9ZWxzZSBpZighTnVtYmVyLmlzTmFOKCtWKSlWPStWO2ZvcihsZXQgRT0wO0U8ZS5kYXRhLnRyYW5zZm9ybU1lc3NhZ2UubGVuZ3RoO0UrKyl7Y29uc3QgUj1lLmRhdGEudHJhbnNmb3JtTWVzc2FnZVtFXShWKTtpZihSIT09dm9pZCAwKVY9Un1pZihlLmRhdGEubWVzc2FnZT8uQ2hlY2soVik9PT0hMSlyZXR1cm4gdm9pZCBlLnNlbmQobmV3IEtyKCJtZXNzYWdlIixlLmRhdGEubWVzc2FnZSxWKS5jYXVzZSk7Ty5tZXNzYWdlKG5ldyAkcihlKSxWKX0sY2xvc2UoZSxWLHUpe2lmKCFlLmRhdGEpcmV0dXJuO2NvbnN0IE89ZTAoZT8uZGF0YS5yZXF1ZXN0LnVybCk7aWYoIU8pcmV0dXJuO2NvbnN0IFQ9Zi5maW5kKCJzdWJzY3JpYmUiLE8pPy5zdG9yZTtpZihUJiZULmNsb3NlKVQuY2xvc2UobmV3ICRyKGUpLFYsdSl9LGRyYWluKGUpe2lmKCFlLmRhdGEpcmV0dXJuO2NvbnN0IFY9ZTAoZT8uZGF0YS5yZXF1ZXN0LnVybCk7aWYoIVYpcmV0dXJuO2NvbnN0IHU9Zi5maW5kKCJzdWJzY3JpYmUiLFYpPy5zdG9yZTtpZih1JiZ1LmRyYWluKXUuZHJhaW4obmV3ICRyKGUpKX19fTtyZXR1cm4gdC5kZWNvcmF0ZSgicHVibGlzaCIsdC5zZXJ2ZXI/LnB1Ymxpc2gpLm9uU3RhcnQoKGUpPT57ZS5kZWNvcmF0b3JzLnB1Ymxpc2g9ZS5zZXJ2ZXI/LnB1Ymxpc2h9KX0sTzA9TnIoTTAoKSwxKSxBMD0ocik9PmFzeW5jKHQpPT57Y29uc3QgZj17c3RhdHVzOjIwMCxoZWFkZXJzOnt9fTtsZXQgZTtpZihyLmRlY29yYXRvcnMpZT1yLmRlY29yYXRvcnMsZS5yZXF1ZXN0PXQsZS5zZXQ9ZixlLnN0b3JlPXIuc3RvcmU7ZWxzZSBlPXtzZXQ6ZixzdG9yZTpyLnN0b3JlLHJlcXVlc3Q6dH07Y29uc3QgVj10LnVybCx1PVYuaW5kZXhPZigiLyIsMTEpLE89Vi5pbmRleE9mKCI/Iix1KzEpLFQ9Tz09PS0xP1Yuc3Vic3RyaW5nKHUpOlYuc3Vic3RyaW5nKHUsTyk7dHJ5e2ZvcihsZXQgdz0wO3c8ci5ldmVudC5yZXF1ZXN0Lmxlbmd0aDt3Kyspe2NvbnN0IHE9ci5ldmVudC5yZXF1ZXN0W3ddO2xldCBGPXEoZSk7aWYoRiBpbnN0YW5jZW9mIFByb21pc2UpRj1hd2FpdCBGO2lmKEY9RnIoRixmKSxGKXJldHVybiBGfWNvbnN0IEU9ci5keW5hbWljUm91dGVyLmZpbmQodC5tZXRob2QsVCk/P3IuZHluYW1pY1JvdXRlci5maW5kKCJBTEwiLFQpO2lmKCFFKXRocm93IG5ldyBoMDtjb25zdHtoYW5kbGU6Uixob29rczpDLHZhbGlkYXRvcjp4LGNvbnRlbnQ6b309RS5zdG9yZTtsZXQgRztpZih0Lm1ldGhvZCE9PSJHRVQiKWlmKG8pc3dpdGNoKG8pe2Nhc2UiYXBwbGljYXRpb24vanNvbiI6Rz1hd2FpdCB0Lmpzb24oKTticmVhaztjYXNlInRleHQvcGxhaW4iOkc9YXdhaXQgdC50ZXh0KCk7YnJlYWs7Y2FzZSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiOkc9TzAucGFyc2UoYXdhaXQgdC50ZXh0KCkpO2JyZWFrO2Nhc2UiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtIjpHPWF3YWl0IHQuYXJyYXlCdWZmZXIoKTticmVhaztjYXNlIm11bHRpcGFydC9mb3JtLWRhdGEiOkc9e307Y29uc3Qgdz1hd2FpdCB0LmZvcm1EYXRhKCk7Zm9yKGxldCBxIG9mIHcua2V5cygpKXtpZihHW3FdKWNvbnRpbnVlO2NvbnN0IEY9dy5nZXRBbGwocSk7aWYoRi5sZW5ndGg9PT0xKUdbcV09RlswXTtlbHNlIEdbcV09Rn1icmVha31lbHNle2xldCB3PXQuaGVhZGVycy5nZXQoImNvbnRlbnQtdHlwZSIpO2lmKHcpe2NvbnN0IHE9dy5pbmRleE9mKCI7Iik7aWYocSE9PS0xKXc9dy5zbGljZSgwLHEpO2ZvcihsZXQgRj0wO0Y8ci5ldmVudC5wYXJzZS5sZW5ndGg7RisrKXtsZXQgSz1yLmV2ZW50LnBhcnNlW0ZdKGUsdyk7aWYoSyBpbnN0YW5jZW9mIFByb21pc2UpSz1hd2FpdCBLO2lmKEspe0c9SzticmVha319aWYoRz09PXZvaWQgMClzd2l0Y2godyl7Y2FzZSJhcHBsaWNhdGlvbi9qc29uIjpHPWF3YWl0IHQuanNvbigpO2JyZWFrO2Nhc2UidGV4dC9wbGFpbiI6Rz1hd2FpdCB0LnRleHQoKTticmVhaztjYXNlImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCI6Rz1PMC5wYXJzZShhd2FpdCB0LnRleHQoKSk7YnJlYWs7Y2FzZSJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0iOkc9YXdhaXQgdC5hcnJheUJ1ZmZlcigpO2JyZWFrO2Nhc2UibXVsdGlwYXJ0L2Zvcm0tZGF0YSI6Rz17fTtjb25zdCBGPWF3YWl0IHQuZm9ybURhdGEoKTtmb3IobGV0IEsgb2YgRi5rZXlzKCkpe2lmKEdbS10pY29udGludWU7Y29uc3QgTD1GLmdldEFsbChLKTtpZihMLmxlbmd0aD09PTEpR1tLXT1MWzBdO2Vsc2UgR1tLXT1MfWJyZWFrfX19ZS5ib2R5PUcsZS5wYXJhbXM9RT8ucGFyYW1zfHx7fSxlLnF1ZXJ5PU89PT0tMT97fTpPMC5wYXJzZShWLnN1YnN0cmluZyhPKzEpKTtmb3IobGV0IHc9MDt3PEMudHJhbnNmb3JtLmxlbmd0aDt3Kyspe2NvbnN0IHE9Qy50cmFuc2Zvcm1bd10oZSk7aWYoQy50cmFuc2Zvcm1bd10uJGVseXNpYT09PSJkZXJpdmUiKWlmKHEgaW5zdGFuY2VvZiBQcm9taXNlKU9iamVjdC5hc3NpZ24oZSxhd2FpdCBxKTtlbHNlIE9iamVjdC5hc3NpZ24oZSxxKTtlbHNlIGlmKHEgaW5zdGFuY2VvZiBQcm9taXNlKWF3YWl0IHF9aWYoeCl7aWYoeC5oZWFkZXJzKXtjb25zdCB3PXt9O2ZvcihsZXQgcSBpbiB0LmhlYWRlcnMpd1txXT10LmhlYWRlcnMuZ2V0KHEpO2lmKHguaGVhZGVycy5DaGVjayh3KT09PSExKXRocm93IG5ldyBLcigiaGVhZGVyIix4LmhlYWRlcnMsdyl9aWYoeC5wYXJhbXM/LkNoZWNrKGUucGFyYW1zKT09PSExKXRocm93IG5ldyBLcigicGFyYW1zIix4LnBhcmFtcyxlLnBhcmFtcyk7aWYoeC5xdWVyeT8uQ2hlY2soZS5xdWVyeSk9PT0hMSl0aHJvdyBuZXcgS3IoInF1ZXJ5Iix4LnF1ZXJ5LGUucXVlcnkpO2lmKHguYm9keT8uQ2hlY2soRyk9PT0hMSl0aHJvdyBuZXcgS3IoImJvZHkiLHguYm9keSxHKX1mb3IobGV0IHc9MDt3PEMuYmVmb3JlSGFuZGxlLmxlbmd0aDt3Kyspe2xldCBxPUMuYmVmb3JlSGFuZGxlW3ddKGUpO2lmKHEgaW5zdGFuY2VvZiBQcm9taXNlKXE9YXdhaXQgcTtpZihxIT09dm9pZCAwKXtmb3IobGV0IEs9MDtLPEMuYWZ0ZXJIYW5kbGUubGVuZ3RoO0srKyl7bGV0IEw9Qy5hZnRlckhhbmRsZVtLXShlLHEpO2lmKEwgaW5zdGFuY2VvZiBQcm9taXNlKUw9YXdhaXQgTDtpZihMKXE9TH1jb25zdCBGPUZyKHEsZS5zZXQpO2lmKEYpcmV0dXJuIEZ9fWxldCBQPVIoZSk7aWYoUCBpbnN0YW5jZW9mIFByb21pc2UpUD1hd2FpdCBQO2lmKCFDLmFmdGVySGFuZGxlLmxlbmd0aCl7Y29uc3Qgdz14Py5yZXNwb25zZT8uW1Auc3RhdHVzXTtpZih3Py5DaGVjayhQKT09PSExKXRocm93IG5ldyBLcigicmVzcG9uc2UiLHcsUCl9ZWxzZSBmb3IobGV0IHc9MDt3PEMuYWZ0ZXJIYW5kbGUubGVuZ3RoO3crKyl7bGV0IHE9Qy5hZnRlckhhbmRsZVt3XShlLFApO2lmKHEgaW5zdGFuY2VvZiBQcm9taXNlKXE9YXdhaXQgcTtjb25zdCBGPUZyKHEsZS5zZXQpO2lmKEYhPT12b2lkIDApe2NvbnN0IEs9eD8ucmVzcG9uc2U/LltQLnN0YXR1c107aWYoSz8uQ2hlY2soRik9PT0hMSl0aHJvdyBuZXcgS3IoInJlc3BvbnNlIixLLEYpO3JldHVybiBGfX1yZXR1cm4gUXIoUCxlLnNldCl9Y2F0Y2goRSl7aWYoRS5zdGF0dXMpZi5zdGF0dXM9RS5zdGF0dXM7cmV0dXJuIHIuaGFuZGxlRXJyb3IodCxFLGYpfWZpbmFsbHl7Zm9yKGxldCBFIG9mIHIuZXZlbnQub25SZXNwb25zZSlhd2FpdCBFKGUpfX0sSG49KHIpPT5hc3luYyh0LGYsZT17aGVhZGVyczp7fX0pPT57Zm9yKGxldCBWPTA7VjxyLmV2ZW50LmVycm9yLmxlbmd0aDtWKyspe2xldCB1PXIuZXZlbnQuZXJyb3JbVl0oe3JlcXVlc3Q6dCxjb2RlOmYuY29kZT8/Zlt0MF0/PyJVTktOT1dOIixlcnJvcjpmLHNldDplfSk7aWYodSBpbnN0YW5jZW9mIFByb21pc2UpdT1hd2FpdCB1O2lmKHUhPT12b2lkIDAmJnUhPT1udWxsKXJldHVybiBRcih1LGUpfXJldHVybiBuZXcgUmVzcG9uc2UodHlwZW9mIGYuY2F1c2U9PT0ic3RyaW5nIj9mLmNhdXNlOmYubWVzc2FnZSx7aGVhZGVyczplLmhlYWRlcnMsc3RhdHVzOmYuc3RhdHVzPz81MDB9KX0sTXI9TnIod3IoKSwxKSxCcj1OcihUMCgpLDEpO3RyeXtCci5UeXBlU3lzdGVtLkZvcm1hdCgiZW1haWwiLChyKT0+L15bYS16MC05ISMkJSYnKisvPT9eX2B7fH1+LV0rKD86XC5bYS16MC05ISMkJSYnKisvPT9eX2B7fH1+LV0rKSpAKD86W2EtejAtOV0oPzpbYS16MC05LV0qW2EtejAtOV0pP1wuKStbYS16MC05XSg/OlthLXowLTktXSpbYS16MC05XSk/JC9pLnRlc3QocikpLEJyLlR5cGVTeXN0ZW0uRm9ybWF0KCJ1dWlkIiwocik9Pi9eWzAtOWEtZl17OH0tWzAtOWEtZl17NH0tWzEtNV1bMC05YS1mXXszfS1bODlhYl1bMC05YS1mXXszfS1bMC05YS1mXXsxMn0kL2kudGVzdChyKSksQnIuVHlwZVN5c3RlbS5Gb3JtYXQoImRhdGUiLChyKT0+IU51bWJlci5pc05hTihuZXcgRGF0ZShyKS5nZXRUaW1lKCkpKSxCci5UeXBlU3lzdGVtLkZvcm1hdCgiZGF0ZS10aW1lIiwocik9PiFOdW1iZXIuaXNOYU4obmV3IERhdGUocikuZ2V0VGltZSgpKSl9Y2F0Y2gocil7fXZhciBOMD0ocik9PntpZih0eXBlb2Ygcj09PSJzdHJpbmciKXN3aXRjaChyLnNsaWNlKC0xKSl7Y2FzZSJrIjpyZXR1cm4rci5zbGljZSgwLHIubGVuZ3RoLTEpKjEwMjQ7Y2FzZSJtIjpyZXR1cm4rci5zbGljZSgwLHIubGVuZ3RoLTEpKjEwNDg1NzY7ZGVmYXVsdDpyZXR1cm4rcn1yZXR1cm4gcn0sazA9KHIsdCk9PntpZighKHQgaW5zdGFuY2VvZiBCbG9iKSlyZXR1cm4hMTtpZihyLm1pblNpemUmJnQuc2l6ZTxOMChyLm1pblNpemUpKXJldHVybiExO2lmKHIubWF4U2l6ZSYmdC5zaXplPk4wKHIubWF4U2l6ZSkpcmV0dXJuITE7aWYoci5leHRlbnNpb24paWYodHlwZW9mIHIuZXh0ZW5zaW9uPT09InN0cmluZyIpe2lmKCF0LnR5cGUuc3RhcnRzV2l0aChyLmV4dGVuc2lvbikpcmV0dXJuITF9ZWxzZXtmb3IobGV0IGY9MDtmPHIuZXh0ZW5zaW9uLmxlbmd0aDtmKyspaWYodC50eXBlLnN0YXJ0c1dpdGgoci5leHRlbnNpb25bZl0pKXJldHVybiEwO3JldHVybiExfXJldHVybiEwfSxYMD17TnVtZXJpYzpCci5UeXBlU3lzdGVtLlR5cGUoIk51bWVyaWMiLHt9KSxGaWxlOkJyLlR5cGVTeXN0ZW0uVHlwZSgiRmlsZSIsazApLEZpbGVzOkJyLlR5cGVTeXN0ZW0uVHlwZSgiRmlsZXMiLChyLHQpPT57aWYoIUFycmF5LmlzQXJyYXkodCkpcmV0dXJuIGswKHIsdCk7aWYoci5taW5JdGVtcyYmdC5sZW5ndGg8ci5taW5JdGVtcylyZXR1cm4hMTtpZihyLm1heEl0ZW1zJiZ0Lmxlbmd0aD5yLm1heEl0ZW1zKXJldHVybiExO2ZvcihsZXQgZj0wO2Y8dC5sZW5ndGg7ZisrKWlmKCFrMChyLHRbZl0pKXJldHVybiExO3JldHVybiEwfSl9O01yLlR5cGUuTnVtZXJpYz0ocik9PntyZXR1cm4gTXIuVHlwZS5OdW1iZXIoey4uLnIsZWx5c2lhTWV0YToiTnVtZXJpYyJ9KX07TXIuVHlwZS5VUkxFbmNvZGVkPShyLHQpPT5Nci5UeXBlLk9iamVjdChyLHsuLi50LGVseXNpYU1ldGE6IlVSTEVuY29kZWQifSk7TXIuVHlwZS5GaWxlPShyKT0+WDAuRmlsZSh7ZWx5c2lhTWV0YToiRmlsZSIsZGVmYXVsdDoiRmlsZSIsLi4ucixleHRlbnNpb246cj8udHlwZSx0eXBlOiJzdHJpbmciLGZvcm1hdDoiYmluYXJ5In0pO01yLlR5cGUuRmlsZXM9KHIpPT5YMC5GaWxlcyh7Li4ucixlbHlzaWFNZXRhOiJGaWxlcyIsZGVmYXVsdDoiRmlsZXMiLGV4dGVuc2lvbjpyPy50eXBlLHR5cGU6ImFycmF5IixpdGVtczp7Li4ucixkZWZhdWx0OiJGaWxlcyIsdHlwZToic3RyaW5nIixmb3JtYXQ6ImJpbmFyeSJ9fSk7Y2xhc3MgcXJ7Y29uZmlnO2RlcGVuZGVuY2llcz17fTtzdG9yZT17fTttZXRhPXtzY2hlbWE6T2JqZWN0LmNyZWF0ZShudWxsKSxkZWZzOk9iamVjdC5jcmVhdGUobnVsbCksZXhwb3NlZDpPYmplY3QuY3JlYXRlKG51bGwpfTtkZWNvcmF0b3JzPXt9O2V2ZW50PXtzdGFydDpbXSxyZXF1ZXN0OltdLHBhcnNlOltdLHRyYW5zZm9ybTpbXSxiZWZvcmVIYW5kbGU6W10sYWZ0ZXJIYW5kbGU6W10sb25SZXNwb25zZTpbXSxlcnJvcjpbXSxzdG9wOltdfTtzZXJ2ZXI9bnVsbDskc2NoZW1hPW51bGw7ZXJyb3I9e307cm91dGVyPW5ldyBacjtyb3V0ZXM9W107c3RhdGljUm91dGVyPXtoYW5kbGVyczpbXSx2YXJpYWJsZXM6IiIsbWFwOnt9LGFsbDoiIn07d3NSb3V0ZXI7ZHluYW1pY1JvdXRlcj1uZXcgWnI7bGF6eUxvYWRNb2R1bGVzPVtdO3BhdGg9IiI7Y29uc3RydWN0b3Iocil7dGhpcy5jb25maWc9e2ZvcmNlRXJyb3JFbmNhcHN1bGF0aW9uOiExLHByZWZpeDoiIixhb3Q6ITAsc3RyaWN0UGF0aDohMSxzY29wZWQ6ITEsLi4ucixzZWVkOnI/LnNlZWQ9PT12b2lkIDA/IiI6cj8uc2VlZH19YWRkKHIsdCxmLGUse2FsbG93TWV0YTpWPSExLHNraXBQcmVmaXg6dT0hMX09e2FsbG93TWV0YTohMSxza2lwUHJlZml4OiExfSl7aWYodD10PT09IiI/dDp0LmNoYXJDb2RlQXQoMCk9PT00Nz90OmAvJHt0fWAsdGhpcy5jb25maWcucHJlZml4JiYhdSl0PXRoaXMuY29uZmlnLnByZWZpeCt0O2NvbnN0IE89dGhpcy5tZXRhLmRlZnM7aWYoZT8udHlwZSlzd2l0Y2goZS50eXBlKXtjYXNlInRleHQiOmUudHlwZT0idGV4dC9wbGFpbiI7YnJlYWs7Y2FzZSJqc29uIjplLnR5cGU9ImFwcGxpY2F0aW9uL2pzb24iO2JyZWFrO2Nhc2UiZm9ybWRhdGEiOmUudHlwZT0ibXVsdGlwYXJ0L2Zvcm0tZGF0YSI7YnJlYWs7Y2FzZSJ1cmxlbmNvZGVkIjplLnR5cGU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCI7YnJlYWs7Y2FzZSJhcnJheUJ1ZmZlciI6ZS50eXBlPSJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0iO2JyZWFrO2RlZmF1bHQ6YnJlYWt9Y29uc3QgVD17Ym9keTpfcihlPy5ib2R5Pz90aGlzLiRzY2hlbWE/LmJvZHkse2R5bmFtaWM6IXRoaXMuY29uZmlnLmFvdCxtb2RlbHM6T30pLGhlYWRlcnM6X3IoZT8uaGVhZGVycz8/dGhpcy4kc2NoZW1hPy5oZWFkZXJzLHtkeW5hbWljOiF0aGlzLmNvbmZpZy5hb3QsbW9kZWxzOk8sYWRkaXRpb25hbFByb3BlcnRpZXM6ITB9KSxwYXJhbXM6X3IoZT8ucGFyYW1zPz90aGlzLiRzY2hlbWE/LnBhcmFtcyx7ZHluYW1pYzohdGhpcy5jb25maWcuYW90LG1vZGVsczpPfSkscXVlcnk6X3IoZT8ucXVlcnk/P3RoaXMuJHNjaGVtYT8ucXVlcnkse2R5bmFtaWM6IXRoaXMuY29uZmlnLmFvdCxtb2RlbHM6T30pLHJlc3BvbnNlOlBuKGU/LnJlc3BvbnNlPz90aGlzLiRzY2hlbWE/LnJlc3BvbnNlLHtkeW5hbWljOiF0aGlzLmNvbmZpZy5hb3QsbW9kZWxzOk99KX0sRT1Zcih0aGlzLmV2ZW50LGUpLFI9dC5lbmRzV2l0aCgiLyIpP3Quc2xpY2UoMCx0Lmxlbmd0aC0xKTp0KyIvIjtpZih0aGlzLmNvbmZpZy5hb3Q9PT0hMSl7aWYodGhpcy5keW5hbWljUm91dGVyLmFkZChyLHQse3ZhbGlkYXRvcjpULGhvb2tzOkUsY29udGVudDplPy50eXBlLGhhbmRsZTpmfSksdGhpcy5jb25maWcuc3RyaWN0UGF0aD09PSExKXRoaXMuZHluYW1pY1JvdXRlci5hZGQocixSLHt2YWxpZGF0b3I6VCxob29rczpFLGNvbnRlbnQ6ZT8udHlwZSxoYW5kbGU6Zn0pO3RoaXMucm91dGVzLnB1c2goe21ldGhvZDpyLHBhdGg6dCxjb21wb3NlZDpudWxsLGhhbmRsZXI6Zixob29rczpFfSk7cmV0dXJufWNvbnN0IEM9bW4oe3BhdGg6dCxtZXRob2Q6cixob29rczpFLHZhbGlkYXRvcjpULGhhbmRsZXI6ZixoYW5kbGVFcnJvcjp0aGlzLmhhbmRsZUVycm9yLG1ldGE6Vj90aGlzLm1ldGE6dm9pZCAwLG9uUmVxdWVzdDp0aGlzLmV2ZW50LnJlcXVlc3QsY29uZmlnOnRoaXMuY29uZmlnfSk7aWYodGhpcy5yb3V0ZXMucHVzaCh7bWV0aG9kOnIscGF0aDp0LGNvbXBvc2VkOkMsaGFuZGxlcjpmLGhvb2tzOkV9KSx0LmluZGV4T2YoIjoiKT09PS0xJiZ0LmluZGV4T2YoIioiKT09PS0xKXtjb25zdCB4PXRoaXMuc3RhdGljUm91dGVyLmhhbmRsZXJzLmxlbmd0aDtpZih0aGlzLnN0YXRpY1JvdXRlci5oYW5kbGVycy5wdXNoKEMpLHRoaXMuc3RhdGljUm91dGVyLnZhcmlhYmxlcys9YGNvbnN0IHN0JHt4fSA9IHN0YXRpY1JvdXRlci5oYW5kbGVyc1ske3h9XVxuYCwhdGhpcy5zdGF0aWNSb3V0ZXIubWFwW3RdKXRoaXMuc3RhdGljUm91dGVyLm1hcFt0XT17Y29kZToiIn07aWYocj09PSJBTEwiKXRoaXMuc3RhdGljUm91dGVyLm1hcFt0XS5hbGw9YGRlZmF1bHQ6IHJldHVybiBzdCR7eH0oY3R4KVxuYDtlbHNlIHRoaXMuc3RhdGljUm91dGVyLm1hcFt0XS5jb2RlKz1gY2FzZSAnJHtyfSc6IHJldHVybiBzdCR7eH0oY3R4KVxuYDtpZighdGhpcy5jb25maWcuc3RyaWN0UGF0aCl7aWYoIXRoaXMuc3RhdGljUm91dGVyLm1hcFtSXSl0aGlzLnN0YXRpY1JvdXRlci5tYXBbUl09e2NvZGU6IiJ9O2lmKHI9PT0iQUxMIil0aGlzLnN0YXRpY1JvdXRlci5tYXBbUl0uYWxsPWBkZWZhdWx0OiByZXR1cm4gc3Qke3h9KGN0eClcbmA7ZWxzZSB0aGlzLnN0YXRpY1JvdXRlci5tYXBbUl0uY29kZSs9YGNhc2UgJyR7cn0nOiByZXR1cm4gc3Qke3h9KGN0eClcbmB9fWVsc2UgaWYodGhpcy5yb3V0ZXIuYWRkKHIsdCxDKSwhdGhpcy5jb25maWcuc3RyaWN0UGF0aCl0aGlzLnJvdXRlci5hZGQocix0LmVuZHNXaXRoKCIvIik/dC5zbGljZSgwLHQubGVuZ3RoLTEpOnQrIi8iLEMpfW9uU3RhcnQocil7cmV0dXJuIHRoaXMub24oInN0YXJ0IixyKSx0aGlzfW9uUmVxdWVzdChyKXtyZXR1cm4gdGhpcy5vbigicmVxdWVzdCIsciksdGhpc31vblBhcnNlKHIpe3JldHVybiB0aGlzLm9uKCJwYXJzZSIsciksdGhpc31vblRyYW5zZm9ybShyKXtyZXR1cm4gdGhpcy5vbigidHJhbnNmb3JtIixyKSx0aGlzfW9uQmVmb3JlSGFuZGxlKHIpe3JldHVybiB0aGlzLm9uKCJiZWZvcmVIYW5kbGUiLHIpLHRoaXN9b25BZnRlckhhbmRsZShyKXtyZXR1cm4gdGhpcy5vbigiYWZ0ZXJIYW5kbGUiLHIpLHRoaXN9b25SZXNwb25zZShyKXtyZXR1cm4gdGhpcy5vbigicmVzcG9uc2UiLHIpLHRoaXN9YWRkRXJyb3Iocix0KXtpZih0eXBlb2Ygcj09PSJzdHJpbmciJiZ0KXJldHVybiB0LnByb3RvdHlwZVt0MF09cix0aGlzO2ZvcihsZXRbZixlXW9mIE9iamVjdC5lbnRyaWVzKHIpKWUucHJvdG90eXBlW3QwXT1mO3JldHVybiB0aGlzfW9uRXJyb3Iocil7cmV0dXJuIHRoaXMub24oImVycm9yIixyKSx0aGlzfW9uU3RvcChyKXtyZXR1cm4gdGhpcy5vbigic3RvcCIsciksdGhpc31vbihyLHQpe3N3aXRjaCh0PU5uKHQpLHIpe2Nhc2Uic3RhcnQiOnRoaXMuZXZlbnQuc3RhcnQucHVzaCh0KTticmVhaztjYXNlInJlcXVlc3QiOnRoaXMuZXZlbnQucmVxdWVzdC5wdXNoKHQpO2JyZWFrO2Nhc2UicmVzcG9uc2UiOnRoaXMuZXZlbnQub25SZXNwb25zZS5wdXNoKHQpO2JyZWFrO2Nhc2UicGFyc2UiOnRoaXMuZXZlbnQucGFyc2Uuc3BsaWNlKHRoaXMuZXZlbnQucGFyc2UubGVuZ3RoLTEsMCx0KTticmVhaztjYXNlInRyYW5zZm9ybSI6dGhpcy5ldmVudC50cmFuc2Zvcm0ucHVzaCh0KTticmVhaztjYXNlImJlZm9yZUhhbmRsZSI6dGhpcy5ldmVudC5iZWZvcmVIYW5kbGUucHVzaCh0KTticmVhaztjYXNlImFmdGVySGFuZGxlIjp0aGlzLmV2ZW50LmFmdGVySGFuZGxlLnB1c2godCk7YnJlYWs7Y2FzZSJlcnJvciI6dGhpcy5ldmVudC5lcnJvci5wdXNoKHQpO2JyZWFrO2Nhc2Uic3RvcCI6dGhpcy5ldmVudC5zdG9wLnB1c2godCk7YnJlYWt9cmV0dXJuIHRoaXN9Z3JvdXAocix0LGYpe2NvbnN0IGU9bmV3IHFyKHsuLi50aGlzLmNvbmZpZyxwcmVmaXg6IiJ9KTtpZihlLnN0b3JlPXRoaXMuc3RvcmUsdGhpcy53c1JvdXRlcillLnVzZShQMCgpKTtjb25zdCBWPXR5cGVvZiB0PT09Im9iamVjdCIsdT0oVj9mOnQpKGUpO2lmKHRoaXMuZGVjb3JhdG9ycz16cih0aGlzLmRlY29yYXRvcnMsZS5kZWNvcmF0b3JzKSx1LmV2ZW50LnJlcXVlc3QubGVuZ3RoKXRoaXMuZXZlbnQucmVxdWVzdD1bLi4udGhpcy5ldmVudC5yZXF1ZXN0LC4uLnUuZXZlbnQucmVxdWVzdF07aWYodS5ldmVudC5vblJlc3BvbnNlLmxlbmd0aCl0aGlzLmV2ZW50Lm9uUmVzcG9uc2U9Wy4uLnRoaXMuZXZlbnQub25SZXNwb25zZSwuLi51LmV2ZW50Lm9uUmVzcG9uc2VdO2lmKHRoaXMubW9kZWwodS5tZXRhLmRlZnMpLE9iamVjdC52YWx1ZXMoZS5yb3V0ZXMpLmZvckVhY2goKHttZXRob2Q6TyxwYXRoOlQsaGFuZGxlcjpFLGhvb2tzOlJ9KT0+e2lmKFQ9dGhpcy5jb25maWcucHJlZml4K3IrVCxWKXtjb25zdCBDPXQseD1SO2lmKGUud3NSb3V0ZXI/LmZpbmQoInN1YnNjcmliZSIsVCkpe2NvbnN0IG89ZS53c1JvdXRlci5oaXN0b3J5LmZpbmQoKFtHLFBdKT0+VD09PVApO2lmKCFvKXJldHVybjtyZXR1cm4gdGhpcy53cyhULG9bMl0pfXRoaXMuYWRkKE8sVCxFLFlyKEMsey4uLngsZXJyb3I6IXguZXJyb3I/dS5ldmVudC5lcnJvcjpBcnJheS5pc0FycmF5KHguZXJyb3IpP1suLi54LmVycm9yLC4uLnUuZXZlbnQuZXJyb3JdOlt4LmVycm9yLC4uLnUuZXZlbnQuZXJyb3JdfSkpfWVsc2V7aWYoZS53c1JvdXRlcj8uZmluZCgic3Vic2NyaWJlIixUKSl7Y29uc3QgQz1lLndzUm91dGVyLmhpc3RvcnkuZmluZCgoW3gsb10pPT5UPT09byk7aWYoIUMpcmV0dXJuO3JldHVybiB0aGlzLndzKFQsQ1syXSl9dGhpcy5hZGQoTyxULEUsWXIoUix7ZXJyb3I6dS5ldmVudC5lcnJvcn0pLHtza2lwUHJlZml4OiEwfSl9fSksZS53c1JvdXRlciYmdGhpcy53c1JvdXRlcillLndzUm91dGVyLmhpc3RvcnkuZm9yRWFjaCgoW08sVCxFXSk9PntpZihUPXRoaXMuY29uZmlnLnByZWZpeCtyK1QsVD09PSIvIil0aGlzLndzUm91dGVyPy5hZGQoTyxyLEUpO2Vsc2UgdGhpcy53c1JvdXRlcj8uYWRkKE8sYCR7cn0ke1R9YCxFKX0pO3JldHVybiB0aGlzfWd1YXJkKHIsdCl7aWYoIXQpcmV0dXJuIHRoaXMuZXZlbnQ9bzAodGhpcy5ldmVudCxyKSx0aGlzLiRzY2hlbWE9e2JvZHk6ci5ib2R5LGhlYWRlcnM6ci5oZWFkZXJzLHBhcmFtczpyLnBhcmFtcyxxdWVyeTpyLnF1ZXJ5LHJlc3BvbnNlOnIucmVzcG9uc2V9LHRoaXM7Y29uc3QgZj1uZXcgcXI7aWYoZi5zdG9yZT10aGlzLnN0b3JlLHRoaXMud3NSb3V0ZXIpZi51c2UoUDAoKSk7Y29uc3QgZT10KGYpO2lmKHRoaXMuZGVjb3JhdG9ycz16cih0aGlzLmRlY29yYXRvcnMsZi5kZWNvcmF0b3JzKSxlLmV2ZW50LnJlcXVlc3QubGVuZ3RoKXRoaXMuZXZlbnQucmVxdWVzdD1bLi4udGhpcy5ldmVudC5yZXF1ZXN0LC4uLmUuZXZlbnQucmVxdWVzdF07aWYoZS5ldmVudC5vblJlc3BvbnNlLmxlbmd0aCl0aGlzLmV2ZW50Lm9uUmVzcG9uc2U9Wy4uLnRoaXMuZXZlbnQub25SZXNwb25zZSwuLi5lLmV2ZW50Lm9uUmVzcG9uc2VdO2lmKHRoaXMubW9kZWwoZS5tZXRhLmRlZnMpLE9iamVjdC52YWx1ZXMoZi5yb3V0ZXMpLmZvckVhY2goKHttZXRob2Q6VixwYXRoOnUsaGFuZGxlcjpPLGhvb2tzOlR9KT0+e2lmKGYud3NSb3V0ZXI/LmZpbmQoInN1YnNjcmliZSIsdSkpe2NvbnN0IEU9Zi53c1JvdXRlci5oaXN0b3J5LmZpbmQoKFtSLENdKT0+dT09PUMpO2lmKCFFKXJldHVybjtyZXR1cm4gdGhpcy53cyh1LEVbMl0pfXRoaXMuYWRkKFYsdSxPLFlyKHIsey4uLlQsZXJyb3I6IVQuZXJyb3I/ZS5ldmVudC5lcnJvcjpBcnJheS5pc0FycmF5KFQuZXJyb3IpP1suLi5ULmVycm9yLC4uLmUuZXZlbnQuZXJyb3JdOltULmVycm9yLC4uLmUuZXZlbnQuZXJyb3JdfSkpfSksZi53c1JvdXRlciYmdGhpcy53c1JvdXRlcilmLndzUm91dGVyLmhpc3RvcnkuZm9yRWFjaCgoW1YsdSxPXSk9Pnt0aGlzLndzUm91dGVyPy5hZGQoVix1LE8pfSk7cmV0dXJuIHRoaXN9dXNlKHIpe2NvbnN0IHQ9KGYpPT57aWYodHlwZW9mIGY9PT0iZnVuY3Rpb24iKXtjb25zdCBPPWYodGhpcyk7aWYoTyBpbnN0YW5jZW9mIFByb21pc2UpcmV0dXJuIHRoaXMubGF6eUxvYWRNb2R1bGVzLnB1c2goTy50aGVuKChUKT0+VC5jb21waWxlKCkpKSx0aGlzO3JldHVybiBPfWNvbnN0IGU9Zi5jb25maWcuc2NvcGVkO2lmKCFlKXRoaXMuZGVjb3JhdG9ycz16cih0aGlzLmRlY29yYXRvcnMsZi5kZWNvcmF0b3JzKSx0aGlzLnN0YXRlKGYuc3RvcmUpLHRoaXMubW9kZWwoZi5tZXRhLmRlZnMpLHRoaXMuYWRkRXJyb3IoZi5lcnJvcik7Y29uc3R7Y29uZmlnOntuYW1lOlYsc2VlZDp1fX09ZjtpZihPYmplY3QudmFsdWVzKGYucm91dGVzKS5mb3JFYWNoKCh7bWV0aG9kOk8scGF0aDpULGhhbmRsZXI6RSxob29rczpSfSk9PntpZihmLndzUm91dGVyPy5maW5kKCJzdWJzY3JpYmUiLFQpKXtjb25zdCBDPWYud3NSb3V0ZXIuaGlzdG9yeS5maW5kKChbeCxvXSk9PlQ9PT1vKTtpZighQylyZXR1cm47cmV0dXJuIHRoaXMud3MoVCxDWzJdKX10aGlzLmFkZChPLFQsRSxZcihSLHtlcnJvcjpmLmV2ZW50LmVycm9yfSkpfSksIWUpaWYoVil7aWYoIShWIGluIHRoaXMuZGVwZW5kZW5jaWVzKSl0aGlzLmRlcGVuZGVuY2llc1tWXT1bXTtjb25zdCBPPXUhPT12b2lkIDA/QW4oVitKU09OLnN0cmluZ2lmeSh1KSk6MDtpZih0aGlzLmRlcGVuZGVuY2llc1tWXS5zb21lKChUKT0+Tz09PVQpKXJldHVybiB0aGlzO3RoaXMuZGVwZW5kZW5jaWVzW1ZdLnB1c2goTyksdGhpcy5ldmVudD1vMCh0aGlzLmV2ZW50LHgwKGYuZXZlbnQpLE8pfWVsc2UgdGhpcy5ldmVudD1vMCh0aGlzLmV2ZW50LHgwKGYuZXZlbnQpKTtyZXR1cm4gdGhpc307aWYociBpbnN0YW5jZW9mIFByb21pc2UpcmV0dXJuIHRoaXMubGF6eUxvYWRNb2R1bGVzLnB1c2goci50aGVuKChmKT0+e2lmKHR5cGVvZiBmPT09ImZ1bmN0aW9uIilyZXR1cm4gZih0aGlzKTtpZih0eXBlb2YgZi5kZWZhdWx0PT09ImZ1bmN0aW9uIilyZXR1cm4gZi5kZWZhdWx0KHRoaXMpO3JldHVybiB0KGYuZGVmYXVsdCl9KS50aGVuKChmKT0+Zi5jb21waWxlKCkpKSx0aGlzO2Vsc2UgcmV0dXJuIHQocik7cmV0dXJuIHRoaXN9bW91bnQocix0KXtpZih0eXBlb2Ygcj09PSJmdW5jdGlvbiJ8fHIubGVuZ3RoPT09MHx8cj09PSIvIil7Y29uc3QgVj10eXBlb2Ygcj09PSJmdW5jdGlvbiI/cjp0LHU9YXN5bmMoe3JlcXVlc3Q6TyxwYXRoOlR9KT0+VihuZXcgUmVxdWVzdCgiaHR0cDovL2EuY2MiK1R8fCIvIixPKSk7cmV0dXJuIHRoaXMuYWxsKCIvIix1LHt0eXBlOiJub25lIn0pLHRoaXMuYWxsKCIvKiIsdSx7dHlwZToibm9uZSJ9KSx0aGlzfWNvbnN0IGY9ci5sZW5ndGgsZT1hc3luYyh7cmVxdWVzdDpWLHBhdGg6dX0pPT50KG5ldyBSZXF1ZXN0KCJodHRwOi8vYS5jYyIrdS5zbGljZShmKXx8Ii8iLFYpKTtyZXR1cm4gdGhpcy5hbGwocixlLHt0eXBlOiJub25lIn0pLHRoaXMuYWxsKHIrKHIuZW5kc1dpdGgoIi8iKT8iKiI6Ii8qIiksZSx7dHlwZToibm9uZSJ9KSx0aGlzfWdldChyLHQsZil7aWYodHlwZW9mIHI9PT0ic3RyaW5nIilyPVtyXTtmb3IobGV0IGUgb2Ygcil0aGlzLmFkZCgiR0VUIixlLHQsZik7cmV0dXJuIHRoaXN9cG9zdChyLHQsZil7aWYodHlwZW9mIHI9PT0ic3RyaW5nIilyPVtyXTtmb3IobGV0IGUgb2Ygcil0aGlzLmFkZCgiUE9TVCIsZSx0LGYpO3JldHVybiB0aGlzfXB1dChyLHQsZil7aWYodHlwZW9mIHI9PT0ic3RyaW5nIilyPVtyXTtmb3IobGV0IGUgb2Ygcil0aGlzLmFkZCgiUFVUIixlLHQsZik7cmV0dXJuIHRoaXN9cGF0Y2gocix0LGYpe2lmKHR5cGVvZiByPT09InN0cmluZyIpcj1bcl07Zm9yKGxldCBlIG9mIHIpdGhpcy5hZGQoIlBBVENIIixlLHQsZik7cmV0dXJuIHRoaXN9ZGVsZXRlKHIsdCxmKXtpZih0eXBlb2Ygcj09PSJzdHJpbmciKXI9W3JdO2ZvcihsZXQgZSBvZiByKXRoaXMuYWRkKCJERUxFVEUiLGUsdCxmKTtyZXR1cm4gdGhpc31vcHRpb25zKHIsdCxmKXtpZih0eXBlb2Ygcj09PSJzdHJpbmciKXI9W3JdO2ZvcihsZXQgZSBvZiByKXRoaXMuYWRkKCJPUFRJT05TIixlLHQsZik7cmV0dXJuIHRoaXN9YWxsKHIsdCxmKXtpZih0eXBlb2Ygcj09PSJzdHJpbmciKXI9W3JdO2ZvcihsZXQgZSBvZiByKXRoaXMuYWRkKCJBTEwiLGUsdCxmKTtyZXR1cm4gdGhpc31oZWFkKHIsdCxmKXtpZih0eXBlb2Ygcj09PSJzdHJpbmciKXI9W3JdO2ZvcihsZXQgZSBvZiByKXRoaXMuYWRkKCJIRUFEIixlLHQsZik7cmV0dXJuIHRoaXN9dHJhY2Uocix0LGYpe2lmKHR5cGVvZiByPT09InN0cmluZyIpcj1bcl07Zm9yKGxldCBlIG9mIHIpdGhpcy5hZGQoIlRSQUNFIixlLHQsZik7cmV0dXJuIHRoaXN9Y29ubmVjdChyLHQsZil7aWYodHlwZW9mIHI9PT0ic3RyaW5nIilyPVtyXTtmb3IobGV0IGUgb2Ygcil0aGlzLmFkZCgiQ09OTkVDVCIsZSx0LGYpO3JldHVybiB0aGlzfXdzKHIsdCl7aWYoIXRoaXMud3NSb3V0ZXIpdGhyb3cgbmV3IEVycm9yKCJDYW4ndCBmaW5kIFdlYlNvY2tldC4gUGxlYXNlIHJlZ2lzdGVyIFdlYlNvY2tldCBwbHVnaW4gZmlyc3QgYnkgaW1wb3J0aW5nICdlbHlzaWEvd3MnIik7aWYodHlwZW9mIHI9PT0ic3RyaW5nIilyPVtyXTtmb3IobGV0IGYgb2Ygcil0aGlzLndzUm91dGVyLmFkZCgic3Vic2NyaWJlIixmLHQpLHRoaXMuZ2V0KGYsKGUpPT57aWYodGhpcy5zZXJ2ZXI/LnVwZ3JhZGUoZS5yZXF1ZXN0LHtoZWFkZXJzOnR5cGVvZiB0LnVwZ3JhZGU9PT0iZnVuY3Rpb24iP3QudXBncmFkZShlKTp0LnVwZ3JhZGUsZGF0YTp7Li4uZSxpZDpEYXRlLm5vdygpLGhlYWRlcnM6ZS5yZXF1ZXN0LmhlYWRlcnMudG9KU09OKCksbWVzc2FnZTpfcih0Py5ib2R5LHttb2RlbHM6dGhpcy5tZXRhLmRlZnN9KSx0cmFuc2Zvcm1NZXNzYWdlOiF0LnRyYW5zZm9ybT9bXTpBcnJheS5pc0FycmF5KHQudHJhbnNmb3JtTWVzc2FnZSk/dC50cmFuc2Zvcm1NZXNzYWdlOlt0LnRyYW5zZm9ybU1lc3NhZ2VdfX0pKXJldHVybjtyZXR1cm4gZS5zZXQuc3RhdHVzPTQwMCwiRXhwZWN0ZWQgYSB3ZWJzb2NrZXQgY29ubmVjdGlvbiJ9LHtiZWZvcmVIYW5kbGU6dC5iZWZvcmVIYW5kbGUsdHJhbnNmb3JtOnQudHJhbnNmb3JtLGhlYWRlcnM6dD8uaGVhZGVycyxwYXJhbXM6dD8ucGFyYW1zLHF1ZXJ5OnQ/LnF1ZXJ5fSk7cmV0dXJuIHRoaXN9cm91dGUocix0LGYse2NvbmZpZzplLC4uLlZ9PXtjb25maWc6e2FsbG93TWV0YTohMX19KXtpZih0eXBlb2YgdD09PSJzdHJpbmciKXQ9W3RdO2ZvcihsZXQgdSBvZiB0KXRoaXMuYWRkKHIsdSxmLFYsZSk7cmV0dXJuIHRoaXN9c3RhdGUocix0KXtpZih0eXBlb2Ygcj09PSJvYmplY3QiKXJldHVybiB0aGlzLnN0b3JlPXpyKHRoaXMuc3RvcmUsciksdGhpcztpZighKHIgaW4gdGhpcy5zdG9yZSkpdGhpcy5zdG9yZVtyXT10O3JldHVybiB0aGlzfWRlY29yYXRlKHIsdCl7aWYodHlwZW9mIHI9PT0ib2JqZWN0IilyZXR1cm4gdGhpcy5kZWNvcmF0b3JzPXpyKHRoaXMuZGVjb3JhdG9ycyxyKSx0aGlzO2lmKCEociBpbiB0aGlzLmRlY29yYXRvcnMpKXRoaXMuZGVjb3JhdG9yc1tyXT10O3JldHVybiB0aGlzfWRlcml2ZShyKXtyZXR1cm4gci4kZWx5c2lhPSJkZXJpdmUiLHRoaXMub25UcmFuc2Zvcm0ocil9c2NoZW1hKHIpe2NvbnN0IHQ9dGhpcy5tZXRhLmRlZnM7cmV0dXJuIHRoaXMuJHNjaGVtYT17Ym9keTpfcihyLmJvZHkse21vZGVsczp0fSksaGVhZGVyczpfcihyPy5oZWFkZXJzLHttb2RlbHM6dCxhZGRpdGlvbmFsUHJvcGVydGllczohMH0pLHBhcmFtczpfcihyPy5wYXJhbXMse21vZGVsczp0fSkscXVlcnk6X3Iocj8ucXVlcnkse21vZGVsczp0fSkscmVzcG9uc2U6X3Iocj8ucmVzcG9uc2Use21vZGVsczp0fSl9LHRoaXN9Y29tcGlsZSgpe2lmKHRoaXMuZmV0Y2g9dGhpcy5jb25maWcuYW90P3cwKHRoaXMpOkEwKHRoaXMpLHR5cGVvZiB0aGlzLnNlcnZlcj8ucmVsb2FkPT09ImZ1bmN0aW9uIil0aGlzLnNlcnZlci5yZWxvYWQoey4uLnRoaXMuc2VydmVyLGZldGNoOnRoaXMuZmV0Y2h9KTtyZXR1cm4gdGhpc31oYW5kbGU9YXN5bmMocik9PnRoaXMuZmV0Y2gocik7ZmV0Y2g9KHIpPT4odGhpcy5mZXRjaD10aGlzLmNvbmZpZy5hb3Q/dzAodGhpcyk6QTAodGhpcykpKHIpO2hhbmRsZUVycm9yPWFzeW5jKHIsdCxmKT0+KHRoaXMuaGFuZGxlRXJyb3I9dGhpcy5jb25maWcuYW90P1EwKHRoaXMpOkhuKHRoaXMpKShyLHQsZik7b3V0ZXJFcnJvckhhbmRsZXI9KHIpPT5uZXcgUmVzcG9uc2Uoci5tZXNzYWdlLHtzdGF0dXM6cj8uc3RhdHVzPz81MDB9KTtsaXN0ZW49KHIsdCk9PntpZighQnVuKXRocm93IG5ldyBFcnJvcigiQnVuIHRvIHJ1biIpO2lmKHRoaXMuY29tcGlsZSgpLHR5cGVvZiByPT09InN0cmluZyIpe2lmKHI9K3IudHJpbSgpLE51bWJlci5pc05hTihyKSl0aHJvdyBuZXcgRXJyb3IoIlBvcnQgbXVzdCBiZSBhIG51bWVyaWMgdmFsdWUiKX1jb25zdCBmPXRoaXMuZmV0Y2gsZT10eXBlb2Ygcj09PSJvYmplY3QiP3tkZXZlbG9wbWVudDohaTAsLi4udGhpcy5jb25maWcuc2VydmUsLi4ucixmZXRjaDpmLGVycm9yOnRoaXMub3V0ZXJFcnJvckhhbmRsZXJ9OntkZXZlbG9wbWVudDohaTAsLi4udGhpcy5jb25maWcuc2VydmUscG9ydDpyLGZldGNoOmYsZXJyb3I6dGhpcy5vdXRlckVycm9ySGFuZGxlcn07aWYodHlwZW9mIEJ1bj09PSJ1bmRlZmluZWQiKXRocm93IG5ldyBFcnJvcigiLmxpc3RlbigpIGlzIGRlc2lnbmVkIHRvIHJ1biBvbiBCdW4gb25seS4gSWYgeW91IGFyZSBydW5uaW5nIEVseXNpYSBpbiBvdGhlciBlbnZpcm9ubWVudCBwbGVhc2UgdXNlIGEgZGVkaWNhdGVkIHBsdWdpbiBvciBleHBvcnQgdGhlIGhhbmRsZXIgdmlhIEVseXNpYS5mZXRjaCIpO3RoaXMuc2VydmVyPUJ1bj8uc2VydmUoZSk7Zm9yKGxldCBWPTA7Vjx0aGlzLmV2ZW50LnN0YXJ0Lmxlbmd0aDtWKyspdGhpcy5ldmVudC5zdGFydFtWXSh0aGlzKTtpZih0KXQodGhpcy5zZXJ2ZXIpO3JldHVybiBQcm9taXNlLmFsbCh0aGlzLmxhenlMb2FkTW9kdWxlcykudGhlbigoKT0+e0J1bj8uZ2MoITApfSksdGhpc307c3RvcD1hc3luYygpPT57aWYoIXRoaXMuc2VydmVyKXRocm93IG5ldyBFcnJvcigiRWx5c2lhIGlzbid0IHJ1bm5pbmcuIENhbGwgYGFwcC5saXN0ZW5gIHRvIHN0YXJ0IHRoZSBzZXJ2ZXIuIik7dGhpcy5zZXJ2ZXIuc3RvcCgpO2ZvcihsZXQgcj0wO3I8dGhpcy5ldmVudC5zdG9wLmxlbmd0aDtyKyspYXdhaXQgdGhpcy5ldmVudC5zdG9wW3JdKHRoaXMpfTtnZXQgbW9kdWxlcygpe3JldHVybiBQcm9taXNlLmFsbCh0aGlzLmxhenlMb2FkTW9kdWxlcyl9bW9kZWwocix0KXtpZih0eXBlb2Ygcj09PSJvYmplY3QiKU9iamVjdC5lbnRyaWVzKHIpLmZvckVhY2goKFtmLGVdKT0+e2lmKCEoZiBpbiB0aGlzLm1ldGEuZGVmcykpdGhpcy5tZXRhLmRlZnNbZl09ZX0pO2Vsc2UgdGhpcy5tZXRhLmRlZnNbcl09dDtyZXR1cm4gdGhpc319dmFyIEkwPU1yLlR5cGU7dmFyIHpuPWZ1bmN0aW9uKHIsdCl7aWYodHlwZW9mIHIhPT0ic3RyaW5nIil0aHJvdyBuZXcgVHlwZUVycm9yKCJhcmd1bWVudCBzdHIgbXVzdCBiZSBhIHN0cmluZyIpO3ZhciBmPXt9LGU9dHx8e30sVj1lLmRlY29kZXx8UW4sdT0wO3doaWxlKHU8ci5sZW5ndGgpe3ZhciBPPXIuaW5kZXhPZigiPSIsdSk7aWYoTz09PS0xKWJyZWFrO3ZhciBUPXIuaW5kZXhPZigiOyIsdSk7aWYoVD09PS0xKVQ9ci5sZW5ndGg7ZWxzZSBpZihUPE8pe3U9ci5sYXN0SW5kZXhPZigiOyIsTy0xKSsxO2NvbnRpbnVlfXZhciBFPXIuc2xpY2UodSxPKS50cmltKCk7aWYoZltFXT09PXZvaWQgMCl7dmFyIFI9ci5zbGljZShPKzEsVCkudHJpbSgpO2lmKFIuY2hhckNvZGVBdCgwKT09PTM0KVI9Ui5zbGljZSgxLC0xKTtmW0VdPUpuKFIsVil9dT1UKzF9cmV0dXJuIGZ9LFpuPWZ1bmN0aW9uKHIsdCxmKXt2YXIgZT1mfHx7fSxWPWUuZW5jb2RlfHxYbjtpZih0eXBlb2YgViE9PSJmdW5jdGlvbiIpdGhyb3cgbmV3IFR5cGVFcnJvcigib3B0aW9uIGVuY29kZSBpcyBpbnZhbGlkIik7aWYoIXMwLnRlc3QocikpdGhyb3cgbmV3IFR5cGVFcnJvcigiYXJndW1lbnQgbmFtZSBpcyBpbnZhbGlkIik7dmFyIHU9Vih0KTtpZih1JiYhczAudGVzdCh1KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJhcmd1bWVudCB2YWwgaXMgaW52YWxpZCIpO3ZhciBPPXIrIj0iK3U7aWYoZS5tYXhBZ2UhPW51bGwpe3ZhciBUPWUubWF4QWdlLTA7aWYoaXNOYU4oVCl8fCFpc0Zpbml0ZShUKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJvcHRpb24gbWF4QWdlIGlzIGludmFsaWQiKTtPKz0iOyBNYXgtQWdlPSIrTWF0aC5mbG9vcihUKX1pZihlLmRvbWFpbil7aWYoIXMwLnRlc3QoZS5kb21haW4pKXRocm93IG5ldyBUeXBlRXJyb3IoIm9wdGlvbiBkb21haW4gaXMgaW52YWxpZCIpO08rPSI7IERvbWFpbj0iK2UuZG9tYWlufWlmKGUucGF0aCl7aWYoIXMwLnRlc3QoZS5wYXRoKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJvcHRpb24gcGF0aCBpcyBpbnZhbGlkIik7Tys9IjsgUGF0aD0iK2UucGF0aH1pZihlLmV4cGlyZXMpe3ZhciBFPWUuZXhwaXJlcztpZighWW4oRSl8fGlzTmFOKEUudmFsdWVPZigpKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJvcHRpb24gZXhwaXJlcyBpcyBpbnZhbGlkIik7Tys9IjsgRXhwaXJlcz0iK0UudG9VVENTdHJpbmcoKX1pZihlLmh0dHBPbmx5KU8rPSI7IEh0dHBPbmx5IjtpZihlLnNlY3VyZSlPKz0iOyBTZWN1cmUiO2lmKGUucHJpb3JpdHkpe3ZhciBSPXR5cGVvZiBlLnByaW9yaXR5PT09InN0cmluZyI/ZS5wcmlvcml0eS50b0xvd2VyQ2FzZSgpOmUucHJpb3JpdHk7c3dpdGNoKFIpe2Nhc2UibG93IjpPKz0iOyBQcmlvcml0eT1Mb3ciO2JyZWFrO2Nhc2UibWVkaXVtIjpPKz0iOyBQcmlvcml0eT1NZWRpdW0iO2JyZWFrO2Nhc2UiaGlnaCI6Tys9IjsgUHJpb3JpdHk9SGlnaCI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgVHlwZUVycm9yKCJvcHRpb24gcHJpb3JpdHkgaXMgaW52YWxpZCIpfX1pZihlLnNhbWVTaXRlKXt2YXIgQz10eXBlb2YgZS5zYW1lU2l0ZT09PSJzdHJpbmciP2Uuc2FtZVNpdGUudG9Mb3dlckNhc2UoKTplLnNhbWVTaXRlO3N3aXRjaChDKXtjYXNlITA6Tys9IjsgU2FtZVNpdGU9U3RyaWN0IjticmVhaztjYXNlImxheCI6Tys9IjsgU2FtZVNpdGU9TGF4IjticmVhaztjYXNlInN0cmljdCI6Tys9IjsgU2FtZVNpdGU9U3RyaWN0IjticmVhaztjYXNlIm5vbmUiOk8rPSI7IFNhbWVTaXRlPU5vbmUiO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IFR5cGVFcnJvcigib3B0aW9uIHNhbWVTaXRlIGlzIGludmFsaWQiKX19cmV0dXJuIE99LFFuPWZ1bmN0aW9uKHIpe3JldHVybiByLmluZGV4T2YoIiUiKSE9PS0xP2RlY29kZVVSSUNvbXBvbmVudChyKTpyfSxYbj1mdW5jdGlvbihyKXtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHIpfSxZbj1mdW5jdGlvbihyKXtyZXR1cm4gV24uY2FsbChyKT09PSJbb2JqZWN0IERhdGVdInx8ciBpbnN0YW5jZW9mIERhdGV9LEpuPWZ1bmN0aW9uKHIsdCl7dHJ5e3JldHVybiB0KHIpfWNhdGNoKGYpe3JldHVybiByfX07LyohCiAqIGNvb2tpZQogKiBDb3B5cmlnaHQoYykgMjAxMi0yMDE0IFJvbWFuIFNodHlsbWFuCiAqIENvcHlyaWdodChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uCiAqIE1JVCBMaWNlbnNlZAogKi92YXIgeTA9em4sdjA9Wm47dmFyIFduPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsczA9L15bXHUwMDA5XHUwMDIwLVx1MDA3ZVx1MDA4MC1cdTAwZmZdKyQvO3ZhciBZMD1pbXBvcnQubWV0YS5yZXF1aXJlKCJjcnlwdG8iKTt2YXIgYjA9ZnVuY3Rpb24ocix0KXtpZih0eXBlb2YgciE9InN0cmluZyIpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ29va2llIHZhbHVlIG11c3QgYmUgcHJvdmlkZWQgYXMgYSBzdHJpbmcuIik7aWYodD09bnVsbCl0aHJvdyBuZXcgVHlwZUVycm9yKCJTZWNyZXQga2V5IG11c3QgYmUgcHJvdmlkZWQuIik7cmV0dXJuIHIrIi4iK1kwLmNyZWF0ZUhtYWMoInNoYTI1NiIsdCkudXBkYXRlKHIpLmRpZ2VzdCgiYmFzZTY0IikucmVwbGFjZSgvXD0rJC8sIiIpfSxwMD1mdW5jdGlvbihyLHQpe2lmKHR5cGVvZiByIT0ic3RyaW5nIil0aHJvdyBuZXcgVHlwZUVycm9yKCJTaWduZWQgY29va2llIHN0cmluZyBtdXN0IGJlIHByb3ZpZGVkLiIpO2lmKHQ9PW51bGwpdGhyb3cgbmV3IFR5cGVFcnJvcigiU2VjcmV0IGtleSBtdXN0IGJlIHByb3ZpZGVkLiIpO3ZhciBmPXIuc2xpY2UoMCxyLmxhc3RJbmRleE9mKCIuIikpLGU9YjAoZix0KSxWPUJ1ZmZlci5mcm9tKGUpLHU9QnVmZmVyLmZyb20ocik7cmV0dXJuIFYubGVuZ3RoPT09dS5sZW5ndGgmJlkwLnRpbWluZ1NhZmVFcXVhbChWLHUpP2Y6ITF9O3ZhciBKMD0ocj17fSk9Pntjb25zdHtzaWduZWQ6dCxzZWNyZXQ6ZiwuLi5lfT1yLFY9IWY/dm9pZCAwOnR5cGVvZiBmPT09InN0cmluZyI/ZjpmWzBdLHU9dHlwZW9mIFY9PT0ic3RyaW5nIjtyZXR1cm4gbmV3IHFyKHtuYW1lOiJAZWx5c2lhanMvY29va2llIixzZWVkOnJ9KS5kZWNvcmF0ZSgidW5zaWduQ29va2llIiwoTyk9PntpZighVil0aHJvdyBuZXcgRXJyb3IoIk5vIHNlY3JldCBpcyBwcm92aWRlZCB0byBjb29raWUgcGx1Z2luIik7bGV0IFQ9dT9wMChPLFYpOiExO2lmKHU9PT0hMSlmb3IobGV0IEU9MDtFPFYubGVuZ3RoO0UrKyl7Y29uc3QgUj1wMChPLFZbRV0pO2lmKFIpe1Q9UjticmVha319cmV0dXJue3ZhbGlkOlQhPT0hMSx2YWx1ZTpUfHx2b2lkIDB9fSkuZGVyaXZlKChPKT0+e2xldCBUO2NvbnN0IEU9KCk9PntpZihUKXJldHVybiBUO3RyeXtjb25zdCBSPU8ucmVxdWVzdC5oZWFkZXJzLmdldCgiY29va2llIik7VD1SP3kwKFIpOnt9fWNhdGNoKFIpe1Q9e319cmV0dXJuIFR9O3JldHVybntnZXQgY29va2llKCl7cmV0dXJuIEUoKX0sc2V0Q29va2llKFIsQyx7c2lnbmVkOng9ITEsLi4ub309e30pe2lmKHgpe2lmKCFWKXRocm93IG5ldyBFcnJvcigiTm8gc2VjcmV0IGlzIHByb3ZpZGVkIHRvIGNvb2tpZSBwbHVnaW4iKTtDPWIwKEMsVil9aWYoIUFycmF5LmlzQXJyYXkoTy5zZXQuaGVhZGVyc1siU2V0LUNvb2tpZSJdKSlPLnNldC5oZWFkZXJzWyJTZXQtQ29va2llIl09W107aWYoTy5zZXQuaGVhZGVyc1siU2V0LUNvb2tpZSJdLnB1c2godjAoUixDLHtwYXRoOiIvIiwuLi5lLC4uLm99KSksIVQpRSgpO1RbUl09Q30scmVtb3ZlQ29va2llKFIpe2lmKCFFKClbUl0pcmV0dXJuO08uc2V0LmhlYWRlcnNbIlNldC1Db29raWUiXT12MChSLCIiLHtleHBpcmVzOm5ldyBEYXRlKCJUaHUsIEphbiAwMSAxOTcwIDAwOjAwOjAwIFVUQyIpfSksZGVsZXRlIFRbUl19fX0pfTtpbXBvcnR7cmFuZG9tRmlsbFN5bmMgYXMgcm59IGZyb20iY3J5cHRvIjt2YXIgJDA9InVzZWFuZG9tLTI2VDE5ODM0MFBYNzVweEpBQ0tWRVJZTUlOREJVU0hXT0xGX0dRWmJmZ2hqa2xxdnd5enJpY3QiO3ZhciAkbj0xMjgsVXIsWHIscnQ9KHIpPT57aWYoIVVyfHxVci5sZW5ndGg8cilVcj1CdWZmZXIuYWxsb2NVbnNhZmUociokbikscm4oVXIpLFhyPTA7ZWxzZSBpZihYcityPlVyLmxlbmd0aClybihVciksWHI9MDtYcis9cn07dmFyIG5uPShyPTIxKT0+e3J0KHItPTApO2xldCB0PSIiO2ZvcihsZXQgZj1Yci1yO2Y8WHI7ZisrKXQrPSQwW1VyW2ZdJjYzXTtyZXR1cm4gdH07dmFyIG50PUJ1bi5lbnYuUEFTU1dPUkR8fCJub3Bhc3MiLHR0PUJ1bi5lbnYuRE9NQUlOfHwiZXhhbXBsZS5jb20iLHV0PSEhQnVuLmVudi5JTlNFQ1VSRXx8ITEsZDA9e30sZXQ9KCk9Pntjb25zdCByPW5uKDMyKSx0PURhdGUubm93KCkrODY0MDAwMDA7cmV0dXJuIGQwW3JdPXQse3Rva2VuOnIsZXhwaXJlczp0fX0sdG49bmV3IHFyKCkudXNlKEowKCkpLmdldCgiL19fbG9naW4iLCh7cXVlcnk6cixzZXQ6dH0pPT57cmV0dXJuIHQuaGVhZGVycz17ImNvbnRlbnQtdHlwZSI6InRleHQvaHRtbCJ9LGA8IURPQ1RZUEUgaHRtbD4KPGh0bWw+CjxoZWFkPgo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+Cjx0aXRsZT5Mb2cgaW48L3RpdGxlPgo8c3R5bGU+Cgpmb3JtewogICAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGNvbG9yOiB3aGl0ZTsKfQoKbGFiZWx7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwogIGZvbnQtd2VpZ2h0OiAzMDA7CiAgcGFkZGluZzogNXB4Owp9CgptYWluIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIHBhZGRpbmc6IDFlbTsKICAgIG1hcmdpbjogMCBhdXRvOwogICAgb3ZlcmZsb3cteDogaGlkZGVuOwp9CgpoMSB7CiAgICBjb2xvcjogIzMzNWQ5MjsKICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7CiAgICBmb250LXNpemU6IDRyZW07CiAgICBmb250LXdlaWdodDogMTAwOwogICAgbGluZS1oZWlnaHQ6IDEuMTsKICAgIG1hcmdpbjogMXJlbTsKfQoKYm9keSB7CiAgICBmb250LWZhbWlseTogR29yZGl0YSwgUm9ib3RvLCBPeHlnZW4sIFVidW50dSwgQ2FudGFyZWxsLAogICAgJ09wZW4gU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWY7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUyNTI1Owp9CgouYnV0dG9uewogIHBhZGRpbmc6IDFyZW07CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlOwogIGJhY2tncm91bmQtY29sb3I6ICM2ZTZlNmU7CiAgY29sb3I6IHdoaXRlOwogIHdpZHRoOiAzMDBweDsKICBtYXJnaW4tdG9wOiAxcmVtOwp9CmlucHV0ewogICAgd2lkdGg6IGNhbGMoMzAwcHggLSAyLjJyZW0pOwogIHBhZGRpbmc6IDEuMXJlbTsKICBib3JkZXItcmFkaXVzOiAxcmVtOwogIGJvcmRlcjogd2hpdGU7CiAgYmFja2dyb3VuZC1jb2xvcjogIzRmNjY3OTsKICBjb2xvcjogd2hpdGU7Cn0KPC9zdHlsZT4KPC9oZWFkPgoKPGJvZHk+CjxtYWluPgogICAgICA8aDE+TG9naW48L2gxPgogICAgICA8Zm9ybSBtZXRob2Q9J3Bvc3QnIGVuY3R5cGU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCI+CjwhLS0gICAgICAgIDxsYWJlbCBmb3I9J3VzZXJuYW1lJyA+LS0+CjwhLS0gICAgICAgICAgVXNlcm5hbWUtLT4KPCEtLSAgICAgICAgPC9sYWJlbD4tLT4KPCEtLSAgICAgICAgPGlucHV0IGlkPSd1c2VybmFtZScgbmFtZT0ndXNlcm5hbWUnIC8+LS0+CiAgICAgICAgPGxhYmVsIGZvcj0ncGFzc3dvcmQnID4KICAgICAgICAgIFBhc3N3b3JkCiAgICAgICAgPC9sYWJlbD4KICAgICAgICA8aW5wdXQKICAgICAgICAgIGlkPSdwYXNzd29yZCcKICAgICAgICAgIG5hbWU9J3Bhc3N3b3JkJwogICAgICAgICAgdHlwZT0ncGFzc3dvcmQnCiAgICAgICAgLz4KICAgICAgICAke3Iud3JvbmdwYXNzP2AKICAgICAgICAgIDxkaXYgc3R5bGU9ImNvbG9yOiBmaXJlYnJpY2s7Ij4KICAgICAgICAgICAgV3JvbmcgdXNlcm5hbWUgb3IgcGFzc3dvcmQKICAgICAgICAgIDwvZGl2PgogICAgICAgIGA6IiJ9CiAgICAgICAgPGlucHV0CiAgICAgICAgY2xhc3M9ImJ1dHRvbiIKICAgICAgICAgIHR5cGU9J3N1Ym1pdCcKICAgICAgICAgIHZhbHVlPSdMb2dpbicKICAgICAgICAvPgogICAgICA8L2Zvcm0+CiAgICA8L21haW4+CjwvYm9keT4KCjwvaHRtbD5gfSkucG9zdCgiL19fbG9naW4iLGFzeW5jKHtib2R5OnIscXVlcnk6dCxzZXQ6ZixyZXF1ZXN0OmUsc2V0Q29va2llOlYscmVtb3ZlQ29va2llOnV9KT0+e2lmKHIucGFzc3dvcmQ9PT1udCl7Y29uc3QgTz1ldCgpLFQ9bmV3IERhdGU7VC5zZXRUaW1lKE8uZXhwaXJlcyksdSgiYWNjZXNzLXRva2VuIiksVigiYWNjZXNzLXRva2VuIixPLnRva2VuLHtkb21haW46ZS51cmwuc3RhcnRzV2l0aCgiaHR0cDovL2xvY2FsaG9zdDozMDAwIik/IiI6dHQsZXhwaXJlczpUfSksZi5yZWRpcmVjdD1gJHt0LnJlZGlyZWN0fHwiLyJ9YH1lbHNle2NvbnN0IE89WyJ3cm9uZ3Bhc3M9dHJ1ZSJdO2lmKHQucmVkaXJlY3QpTy5wdXNoKGByZWRpcmVjdD0ke3QucmVkaXJlY3R9YCk7Zi5yZWRpcmVjdD1gL19fbG9naW4/JHtPLmpvaW4oIiYiKX1gfX0se3R5cGU6ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsYm9keTpJMC5PYmplY3Qoe3Bhc3N3b3JkOkkwLlN0cmluZygpfSl9KS5nZXQoIi9fX2xvZ2luL3EiLCh7Y29va2llOnIsc2V0OnQsaGVhZGVyczpmfSk9Pntjb25zdCBlPXJbImFjY2Vzcy10b2tlbiJdO2lmKGQwW2VdJiZEYXRlLm5vdygpPGQwW2VdKXt0LnN0YXR1cz0yMDA7cmV0dXJufWNvbnN0IFY9ZlsieC1mb3J3YXJkZWQtdXJpIl0/LnNwbGl0KCI/IilbMF18fCIvIix1PWZbIngtZm9yd2FyZGVkLWhvc3QiXTt0LnJlZGlyZWN0PWBodHRwJHt1dD8iIjoicyJ9Oi8vJHt1fS9fX2xvZ2luP3JlZGlyZWN0PSR7Vn1gfSkubGlzdGVuKDMwMDApO2NvbnNvbGUubG9nKGBcdUQ4M0VcdUREOEEgRWx5c2lhIGlzIHJ1bm5pbmcgYXQgJHt0bi5zZXJ2ZXI/Lmhvc3RuYW1lfToke3RuLnNlcnZlcj8ucG9ydH1gKTtleHBvcnR7ZXQgYXMgZ2VuZXJhdGVUb2tlbn07Cg==`